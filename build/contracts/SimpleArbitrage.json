{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_uniswapRouterAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_sushiswapRouterAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_weth",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_dai",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "higherPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lowerPrice",
          "type": "uint256"
        }
      ],
      "name": "_checkIfArbitrageIsProfitable",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "_comparePrice",
      "outputs": [
        {
          "internalType": "enum SimpleArbitrage.Exchange",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "routerAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "sell_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "buy_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "_getPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "routerAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "sell_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "buy_token",
          "type": "address"
        }
      ],
      "name": "_swap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "arbitrageAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "daiAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "makeArbitrage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sushiswapRouterAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "uniswapRouterAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "wethAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/SimpleArbitrage.sol",
    "1": "interfaces/IERC20.sol",
    "2": "interfaces/IUniswapV2Router02.sol"
  },
  "ast": {
    "absolutePath": "contracts/SimpleArbitrage.sol",
    "exportedSymbols": {
      "IERC20": [
        517
      ],
      "IUniswapV2Router01": [
        825
      ],
      "IUniswapV2Router02": [
        910
      ],
      "SimpleArbitrage": [
        439
      ]
    },
    "id": 440,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:0"
      },
      {
        "absolutePath": "interfaces/IUniswapV2Router02.sol",
        "file": "../interfaces/IUniswapV2Router02.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 440,
        "sourceUnit": 911,
        "src": "58:46:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IERC20.sol",
        "file": "../interfaces/IERC20.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 440,
        "sourceUnit": 518,
        "src": "105:34:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "SimpleArbitrage",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 439,
        "linearizedBaseContracts": [
          439
        ],
        "name": "SimpleArbitrage",
        "nameLocation": "150:15:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
            "id": 5,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "187:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 439,
            "src": "172:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "172:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "4f0e0ef3",
            "id": 7,
            "mutability": "mutable",
            "name": "wethAddress",
            "nameLocation": "214:11:0",
            "nodeType": "VariableDeclaration",
            "scope": 439,
            "src": "199:26:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 6,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "199:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2c387275",
            "id": 9,
            "mutability": "mutable",
            "name": "daiAddress",
            "nameLocation": "246:10:0",
            "nodeType": "VariableDeclaration",
            "scope": 439,
            "src": "231:25:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 8,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "231:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "20ca3c7f",
            "id": 11,
            "mutability": "mutable",
            "name": "uniswapRouterAddress",
            "nameLocation": "277:20:0",
            "nodeType": "VariableDeclaration",
            "scope": 439,
            "src": "262:35:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 10,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "262:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "19d0a9a2",
            "id": 13,
            "mutability": "mutable",
            "name": "sushiswapRouterAddress",
            "nameLocation": "318:22:0",
            "nodeType": "VariableDeclaration",
            "scope": 439,
            "src": "303:37:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 12,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "303:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c599e7b1",
            "id": 15,
            "mutability": "mutable",
            "name": "arbitrageAmount",
            "nameLocation": "362:15:0",
            "nodeType": "VariableDeclaration",
            "scope": 439,
            "src": "347:30:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 14,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "347:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "SimpleArbitrage.Exchange",
            "id": 19,
            "members": [
              {
                "id": 16,
                "name": "UNI",
                "nameLocation": "408:3:0",
                "nodeType": "EnumValue",
                "src": "408:3:0"
              },
              {
                "id": 17,
                "name": "SUSHI",
                "nameLocation": "421:5:0",
                "nodeType": "EnumValue",
                "src": "421:5:0"
              },
              {
                "id": 18,
                "name": "NONE",
                "nameLocation": "436:4:0",
                "nodeType": "EnumValue",
                "src": "436:4:0"
              }
            ],
            "name": "Exchange",
            "nameLocation": "389:8:0",
            "nodeType": "EnumDefinition",
            "src": "384:62:0"
          },
          {
            "body": {
              "id": 51,
              "nodeType": "Block",
              "src": "595:203:0",
              "statements": [
                {
                  "expression": {
                    "id": 32,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 30,
                      "name": "uniswapRouterAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "605:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 31,
                      "name": "_uniswapRouterAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21,
                      "src": "628:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "605:44:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 33,
                  "nodeType": "ExpressionStatement",
                  "src": "605:44:0"
                },
                {
                  "expression": {
                    "id": 36,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 34,
                      "name": "sushiswapRouterAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13,
                      "src": "659:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 35,
                      "name": "_sushiswapRouterAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23,
                      "src": "684:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "659:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 37,
                  "nodeType": "ExpressionStatement",
                  "src": "659:48:0"
                },
                {
                  "expression": {
                    "id": 41,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 38,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5,
                      "src": "717:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 39,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "725:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 40,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "725:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "717:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 42,
                  "nodeType": "ExpressionStatement",
                  "src": "717:18:0"
                },
                {
                  "expression": {
                    "id": 45,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 43,
                      "name": "wethAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7,
                      "src": "745:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 44,
                      "name": "_weth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "759:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "745:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 46,
                  "nodeType": "ExpressionStatement",
                  "src": "745:19:0"
                },
                {
                  "expression": {
                    "id": 49,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 47,
                      "name": "daiAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "774:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 48,
                      "name": "_dai",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27,
                      "src": "787:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "774:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 50,
                  "nodeType": "ExpressionStatement",
                  "src": "774:17:0"
                }
              ]
            },
            "id": 52,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 28,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21,
                  "mutability": "mutable",
                  "name": "_uniswapRouterAddress",
                  "nameLocation": "481:21:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 52,
                  "src": "473:29:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "473:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23,
                  "mutability": "mutable",
                  "name": "_sushiswapRouterAddress",
                  "nameLocation": "520:23:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 52,
                  "src": "512:31:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "512:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25,
                  "mutability": "mutable",
                  "name": "_weth",
                  "nameLocation": "561:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 52,
                  "src": "553:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "553:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27,
                  "mutability": "mutable",
                  "name": "_dai",
                  "nameLocation": "584:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 52,
                  "src": "576:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 26,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "576:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "463:131:0"
            },
            "returnParameters": {
              "id": 29,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "595:0:0"
            },
            "scope": 439,
            "src": "452:346:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 63,
              "nodeType": "Block",
              "src": "825:84:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 58,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 55,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "843:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 56,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "843:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 57,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5,
                          "src": "857:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "843:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f6e6c79206f776e65722063616e2063616c6c2074686973",
                        "id": 59,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "864:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_508287e7e7ea01f0bb69a048a15a8490565f156f77c550fe92b28c8dc3d7425b",
                          "typeString": "literal_string \"only owner can call this\""
                        },
                        "value": "only owner can call this"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_508287e7e7ea01f0bb69a048a15a8490565f156f77c550fe92b28c8dc3d7425b",
                          "typeString": "literal_string \"only owner can call this\""
                        }
                      ],
                      "id": 54,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "835:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 60,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "835:56:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61,
                  "nodeType": "ExpressionStatement",
                  "src": "835:56:0"
                },
                {
                  "id": 62,
                  "nodeType": "PlaceholderStatement",
                  "src": "901:1:0"
                }
              ]
            },
            "id": 64,
            "name": "onlyOwner",
            "nameLocation": "813:9:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 53,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "822:2:0"
            },
            "src": "804:105:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 95,
              "nodeType": "Block",
              "src": "965:189:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 74,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 72,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 66,
                          "src": "983:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 73,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "992:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "983:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4465706f73697420616d6f756e74206d7573742062652067726561746572207468616e2030",
                        "id": 75,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "995:39:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1cf5370f25734823c5feac6853b836d05520862485f150310f24689e28c1f9e6",
                          "typeString": "literal_string \"Deposit amount must be greater than 0\""
                        },
                        "value": "Deposit amount must be greater than 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1cf5370f25734823c5feac6853b836d05520862485f150310f24689e28c1f9e6",
                          "typeString": "literal_string \"Deposit amount must be greater than 0\""
                        }
                      ],
                      "id": 71,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "975:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 76,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "975:60:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77,
                  "nodeType": "ExpressionStatement",
                  "src": "975:60:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 82,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1078:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 83,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1078:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 86,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1098:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SimpleArbitrage_$439",
                              "typeString": "contract SimpleArbitrage"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SimpleArbitrage_$439",
                              "typeString": "contract SimpleArbitrage"
                            }
                          ],
                          "id": 85,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1090:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 84,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1090:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 87,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1090:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 88,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66,
                        "src": "1105:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 79,
                            "name": "wethAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7,
                            "src": "1052:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 78,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 517,
                          "src": "1045:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$517_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 80,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1045:19:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$517",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 81,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 498,
                      "src": "1045:32:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 89,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1045:67:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 90,
                  "nodeType": "ExpressionStatement",
                  "src": "1045:67:0"
                },
                {
                  "expression": {
                    "id": 93,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 91,
                      "name": "arbitrageAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "1122:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 92,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66,
                      "src": "1141:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1122:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 94,
                  "nodeType": "ExpressionStatement",
                  "src": "1122:25:0"
                }
              ]
            },
            "functionSelector": "b6b55f25",
            "id": 96,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 69,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 68,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 64,
                  "src": "955:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "955:9:0"
              }
            ],
            "name": "deposit",
            "nameLocation": "924:7:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 67,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "940:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 96,
                  "src": "932:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 65,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "932:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "931:16:0"
            },
            "returnParameters": {
              "id": 70,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "965:0:0"
            },
            "scope": 439,
            "src": "915:239:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 127,
              "nodeType": "Block",
              "src": "1211:194:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 104,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98,
                          "src": "1229:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 105,
                          "name": "arbitrageAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15,
                          "src": "1239:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1229:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f75676820616d6f756e74206465706f7369746564",
                        "id": 107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1256:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f79739cdadbfe78da05d64819f26017b383b8813c9d2f4ba758926813d6fef9d",
                          "typeString": "literal_string \"Not enough amount deposited\""
                        },
                        "value": "Not enough amount deposited"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f79739cdadbfe78da05d64819f26017b383b8813c9d2f4ba758926813d6fef9d",
                          "typeString": "literal_string \"Not enough amount deposited\""
                        }
                      ],
                      "id": 103,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1221:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1221:65:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 109,
                  "nodeType": "ExpressionStatement",
                  "src": "1221:65:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 116,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1337:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SimpleArbitrage_$439",
                              "typeString": "contract SimpleArbitrage"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SimpleArbitrage_$439",
                              "typeString": "contract SimpleArbitrage"
                            }
                          ],
                          "id": 115,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1329:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 114,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1329:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1329:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 118,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1344:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 119,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1344:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 120,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98,
                        "src": "1356:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 111,
                            "name": "wethAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7,
                            "src": "1303:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 110,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 517,
                          "src": "1296:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$517_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1296:19:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$517",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 113,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 498,
                      "src": "1296:32:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1296:67:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 122,
                  "nodeType": "ExpressionStatement",
                  "src": "1296:67:0"
                },
                {
                  "expression": {
                    "id": 125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 123,
                      "name": "arbitrageAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "1373:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 124,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 98,
                      "src": "1392:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1373:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 126,
                  "nodeType": "ExpressionStatement",
                  "src": "1373:25:0"
                }
              ]
            },
            "functionSelector": "2e1a7d4d",
            "id": 128,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 101,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 100,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 64,
                  "src": "1201:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1201:9:0"
              }
            ],
            "name": "withdraw",
            "nameLocation": "1169:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 99,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 98,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1186:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 128,
                  "src": "1178:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 97,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1178:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1177:16:0"
            },
            "returnParameters": {
              "id": 102,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1211:0:0"
            },
            "scope": 439,
            "src": "1160:245:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 198,
              "nodeType": "Block",
              "src": "1443:1195:0",
              "statements": [
                {
                  "assignments": [
                    132
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 132,
                      "mutability": "mutable",
                      "name": "amountIn",
                      "nameLocation": "1461:8:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 198,
                      "src": "1453:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 131,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1453:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 134,
                  "initialValue": {
                    "id": 133,
                    "name": "arbitrageAmount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15,
                    "src": "1472:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1453:34:0"
                },
                {
                  "assignments": [
                    137
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 137,
                      "mutability": "mutable",
                      "name": "result",
                      "nameLocation": "1506:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 198,
                      "src": "1497:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Exchange_$19",
                        "typeString": "enum SimpleArbitrage.Exchange"
                      },
                      "typeName": {
                        "id": 136,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 135,
                          "name": "Exchange",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 19,
                          "src": "1497:8:0"
                        },
                        "referencedDeclaration": 19,
                        "src": "1497:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Exchange_$19",
                          "typeString": "enum SimpleArbitrage.Exchange"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 141,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 139,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 132,
                        "src": "1529:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 138,
                      "name": "_comparePrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 344,
                      "src": "1515:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_enum$_Exchange_$19_$",
                        "typeString": "function (uint256) view returns (enum SimpleArbitrage.Exchange)"
                      }
                    },
                    "id": 140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1515:23:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Exchange_$19",
                      "typeString": "enum SimpleArbitrage.Exchange"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1497:41:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_Exchange_$19",
                      "typeString": "enum SimpleArbitrage.Exchange"
                    },
                    "id": 145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 142,
                      "name": "result",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 137,
                      "src": "1552:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Exchange_$19",
                        "typeString": "enum SimpleArbitrage.Exchange"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 143,
                        "name": "Exchange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19,
                        "src": "1562:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Exchange_$19_$",
                          "typeString": "type(enum SimpleArbitrage.Exchange)"
                        }
                      },
                      "id": 144,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "UNI",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16,
                      "src": "1562:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Exchange_$19",
                        "typeString": "enum SimpleArbitrage.Exchange"
                      }
                    },
                    "src": "1552:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_enum$_Exchange_$19",
                        "typeString": "enum SimpleArbitrage.Exchange"
                      },
                      "id": 172,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 169,
                        "name": "result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 137,
                        "src": "2096:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Exchange_$19",
                          "typeString": "enum SimpleArbitrage.Exchange"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 170,
                          "name": "Exchange",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19,
                          "src": "2106:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Exchange_$19_$",
                            "typeString": "type(enum SimpleArbitrage.Exchange)"
                          }
                        },
                        "id": 171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "SUSHI",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 17,
                        "src": "2106:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Exchange_$19",
                          "typeString": "enum SimpleArbitrage.Exchange"
                        }
                      },
                      "src": "2096:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 196,
                    "nodeType": "IfStatement",
                    "src": "2092:540:0",
                    "trueBody": {
                      "id": 195,
                      "nodeType": "Block",
                      "src": "2122:510:0",
                      "statements": [
                        {
                          "assignments": [
                            174
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 174,
                              "mutability": "mutable",
                              "name": "amountOut",
                              "nameLocation": "2247:9:0",
                              "nodeType": "VariableDeclaration",
                              "scope": 195,
                              "src": "2239:17:0",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 173,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "2239:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 181,
                          "initialValue": {
                            "arguments": [
                              {
                                "id": 176,
                                "name": "amountIn",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 132,
                                "src": "2282:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 177,
                                "name": "sushiswapRouterAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13,
                                "src": "2308:22:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 178,
                                "name": "wethAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7,
                                "src": "2348:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 179,
                                "name": "daiAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9,
                                "src": "2377:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 175,
                              "name": "_swap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 279,
                              "src": "2259:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (uint256,address,address,address) returns (uint256)"
                              }
                            },
                            "id": 180,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2259:142:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "2239:162:0"
                        },
                        {
                          "assignments": [
                            183
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 183,
                              "mutability": "mutable",
                              "name": "amountFinal",
                              "nameLocation": "2423:11:0",
                              "nodeType": "VariableDeclaration",
                              "scope": 195,
                              "src": "2415:19:0",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 182,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "2415:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 190,
                          "initialValue": {
                            "arguments": [
                              {
                                "id": 185,
                                "name": "amountOut",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 174,
                                "src": "2460:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 186,
                                "name": "uniswapRouterAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11,
                                "src": "2487:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 187,
                                "name": "daiAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9,
                                "src": "2525:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 188,
                                "name": "wethAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7,
                                "src": "2553:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 184,
                              "name": "_swap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 279,
                              "src": "2437:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (uint256,address,address,address) returns (uint256)"
                              }
                            },
                            "id": 189,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2437:141:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "2415:163:0"
                        },
                        {
                          "expression": {
                            "id": 193,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 191,
                              "name": "arbitrageAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15,
                              "src": "2592:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "id": 192,
                              "name": "amountFinal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 183,
                              "src": "2610:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2592:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 194,
                          "nodeType": "ExpressionStatement",
                          "src": "2592:29:0"
                        }
                      ]
                    }
                  },
                  "id": 197,
                  "nodeType": "IfStatement",
                  "src": "1548:1084:0",
                  "trueBody": {
                    "id": 168,
                    "nodeType": "Block",
                    "src": "1576:510:0",
                    "statements": [
                      {
                        "assignments": [
                          147
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 147,
                            "mutability": "mutable",
                            "name": "amountOut",
                            "nameLocation": "1701:9:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 168,
                            "src": "1693:17:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 146,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1693:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 154,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 149,
                              "name": "amountIn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 132,
                              "src": "1736:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 150,
                              "name": "uniswapRouterAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11,
                              "src": "1762:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 151,
                              "name": "wethAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7,
                              "src": "1800:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 152,
                              "name": "daiAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9,
                              "src": "1829:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 148,
                            "name": "_swap",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 279,
                            "src": "1713:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (uint256,address,address,address) returns (uint256)"
                            }
                          },
                          "id": 153,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1713:140:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1693:160:0"
                      },
                      {
                        "assignments": [
                          156
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 156,
                            "mutability": "mutable",
                            "name": "amountFinal",
                            "nameLocation": "1875:11:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 168,
                            "src": "1867:19:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 155,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1867:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 163,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 158,
                              "name": "amountOut",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 147,
                              "src": "1912:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 159,
                              "name": "sushiswapRouterAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13,
                              "src": "1939:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 160,
                              "name": "daiAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9,
                              "src": "1979:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 161,
                              "name": "wethAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7,
                              "src": "2007:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 157,
                            "name": "_swap",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 279,
                            "src": "1889:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (uint256,address,address,address) returns (uint256)"
                            }
                          },
                          "id": 162,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1889:143:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1867:165:0"
                      },
                      {
                        "expression": {
                          "id": 166,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 164,
                            "name": "arbitrageAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15,
                            "src": "2046:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 165,
                            "name": "amountFinal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 156,
                            "src": "2064:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2046:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 167,
                        "nodeType": "ExpressionStatement",
                        "src": "2046:29:0"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "2ada23a6",
            "id": 199,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "makeArbitrage",
            "nameLocation": "1420:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 129,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1433:2:0"
            },
            "returnParameters": {
              "id": 130,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1443:0:0"
            },
            "scope": 439,
            "src": "1411:1227:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 278,
              "nodeType": "Block",
              "src": "2802:627:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 216,
                        "name": "routerAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 203,
                        "src": "2839:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 217,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 201,
                        "src": "2854:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 213,
                            "name": "sell_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 205,
                            "src": "2819:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 212,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 517,
                          "src": "2812:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$517_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 214,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2812:18:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$517",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 215,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 486,
                      "src": "2812:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2812:51:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 219,
                  "nodeType": "ExpressionStatement",
                  "src": "2812:51:0"
                },
                {
                  "assignments": [
                    221
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 221,
                      "mutability": "mutable",
                      "name": "amountOutMin",
                      "nameLocation": "2882:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 278,
                      "src": "2874:20:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 220,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2874:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 233,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 232,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 229,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 223,
                                "name": "routerAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 203,
                                "src": "2921:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 224,
                                "name": "sell_token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 205,
                                "src": "2948:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 225,
                                "name": "buy_token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 207,
                                "src": "2972:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 226,
                                "name": "amountIn",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 201,
                                "src": "2995:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 222,
                              "name": "_getPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 438,
                              "src": "2898:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (address,address,address,uint256) view returns (uint256)"
                              }
                            },
                            "id": 227,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2898:115:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "3935",
                            "id": 228,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3016:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_95_by_1",
                              "typeString": "int_const 95"
                            },
                            "value": "95"
                          },
                          "src": "2898:120:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 230,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "2897:122:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "313030",
                      "id": 231,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3022:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "2897:128:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2874:151:0"
                },
                {
                  "assignments": [
                    238
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 238,
                      "mutability": "mutable",
                      "name": "path",
                      "nameLocation": "3053:4:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 278,
                      "src": "3036:21:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 236,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3036:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 237,
                        "nodeType": "ArrayTypeName",
                        "src": "3036:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 244,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "32",
                        "id": 242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3074:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
                      "id": 241,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "3060:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 239,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3064:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 240,
                        "nodeType": "ArrayTypeName",
                        "src": "3064:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
                    "id": 243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3060:16:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3036:40:0"
                },
                {
                  "expression": {
                    "id": 249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 245,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 238,
                        "src": "3086:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 247,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 246,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3091:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3086:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 248,
                      "name": "sell_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 205,
                      "src": "3096:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3086:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 250,
                  "nodeType": "ExpressionStatement",
                  "src": "3086:20:0"
                },
                {
                  "expression": {
                    "id": 255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 251,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 238,
                        "src": "3116:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 253,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 252,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3121:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3116:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 254,
                      "name": "buy_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 207,
                      "src": "3126:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3116:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 256,
                  "nodeType": "ExpressionStatement",
                  "src": "3116:19:0"
                },
                {
                  "assignments": [
                    258
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 258,
                      "mutability": "mutable",
                      "name": "amountOut",
                      "nameLocation": "3154:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 278,
                      "src": "3146:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 257,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3146:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 275,
                  "initialValue": {
                    "baseExpression": {
                      "arguments": [
                        {
                          "id": 263,
                          "name": "amountIn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 201,
                          "src": "3255:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 264,
                          "name": "amountOutMin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 221,
                          "src": "3281:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 265,
                          "name": "path",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 238,
                          "src": "3311:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 268,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "3341:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SimpleArbitrage_$439",
                                "typeString": "contract SimpleArbitrage"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_SimpleArbitrage_$439",
                                "typeString": "contract SimpleArbitrage"
                              }
                            ],
                            "id": 267,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3333:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 266,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3333:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 269,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3333:13:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "expression": {
                            "id": 270,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "3364:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 271,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "3364:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 260,
                              "name": "routerAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 203,
                              "src": "3185:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 259,
                            "name": "IUniswapV2Router02",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 910,
                            "src": "3166:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IUniswapV2Router02_$910_$",
                              "typeString": "type(contract IUniswapV2Router02)"
                            }
                          },
                          "id": 261,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3166:33:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IUniswapV2Router02_$910",
                            "typeString": "contract IUniswapV2Router02"
                          }
                        },
                        "id": 262,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "swapExactTokensForTokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 688,
                        "src": "3166:71:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                          "typeString": "function (uint256,uint256,address[] memory,address,uint256) external returns (uint256[] memory)"
                        }
                      },
                      "id": 272,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3166:227:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "id": 274,
                    "indexExpression": {
                      "hexValue": "31",
                      "id": 273,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3394:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3166:230:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3146:250:0"
                },
                {
                  "expression": {
                    "id": 276,
                    "name": "amountOut",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 258,
                    "src": "3413:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 211,
                  "id": 277,
                  "nodeType": "Return",
                  "src": "3406:16:0"
                }
              ]
            },
            "functionSelector": "62962e93",
            "id": 279,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_swap",
            "nameLocation": "2653:5:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 208,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 201,
                  "mutability": "mutable",
                  "name": "amountIn",
                  "nameLocation": "2676:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 279,
                  "src": "2668:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 200,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2668:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 203,
                  "mutability": "mutable",
                  "name": "routerAddress",
                  "nameLocation": "2702:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 279,
                  "src": "2694:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 202,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2694:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 205,
                  "mutability": "mutable",
                  "name": "sell_token",
                  "nameLocation": "2733:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 279,
                  "src": "2725:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 204,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2725:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 207,
                  "mutability": "mutable",
                  "name": "buy_token",
                  "nameLocation": "2761:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 279,
                  "src": "2753:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 206,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2753:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2658:118:0"
            },
            "returnParameters": {
              "id": 211,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 210,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 279,
                  "src": "2793:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 209,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2793:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2792:9:0"
            },
            "scope": 439,
            "src": "2644:785:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 343,
              "nodeType": "Block",
              "src": "3505:1126:0",
              "statements": [
                {
                  "assignments": [
                    288
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 288,
                      "mutability": "mutable",
                      "name": "uniswapPrice",
                      "nameLocation": "3523:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 343,
                      "src": "3515:20:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 287,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3515:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 295,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 290,
                        "name": "uniswapRouterAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "3561:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 291,
                        "name": "wethAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "3595:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 292,
                        "name": "daiAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "3620:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 293,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 281,
                        "src": "3644:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 289,
                      "name": "_getPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 438,
                      "src": "3538:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,address,address,uint256) view returns (uint256)"
                      }
                    },
                    "id": 294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3538:122:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3515:145:0"
                },
                {
                  "assignments": [
                    297
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 297,
                      "mutability": "mutable",
                      "name": "sushiswapPrice",
                      "nameLocation": "3678:14:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 343,
                      "src": "3670:22:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 296,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3670:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 304,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 299,
                        "name": "sushiswapRouterAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13,
                        "src": "3718:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 300,
                        "name": "wethAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "3754:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 301,
                        "name": "daiAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "3779:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 302,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 281,
                        "src": "3803:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 298,
                      "name": "_getPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 438,
                      "src": "3695:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,address,address,uint256) view returns (uint256)"
                      }
                    },
                    "id": 303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3695:124:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3670:149:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 307,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 305,
                      "name": "uniswapPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 288,
                      "src": "3928:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 306,
                      "name": "sushiswapPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 297,
                      "src": "3943:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3928:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 323,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 321,
                        "name": "uniswapPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 288,
                        "src": "4255:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "id": 322,
                        "name": "sushiswapPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 297,
                        "src": "4270:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4255:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 340,
                      "nodeType": "Block",
                      "src": "4580:45:0",
                      "statements": [
                        {
                          "expression": {
                            "expression": {
                              "id": 337,
                              "name": "Exchange",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 19,
                              "src": "4601:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Exchange_$19_$",
                                "typeString": "type(enum SimpleArbitrage.Exchange)"
                              }
                            },
                            "id": 338,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "NONE",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 18,
                            "src": "4601:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Exchange_$19",
                              "typeString": "enum SimpleArbitrage.Exchange"
                            }
                          },
                          "functionReturnParameters": 286,
                          "id": 339,
                          "nodeType": "Return",
                          "src": "4594:20:0"
                        }
                      ]
                    },
                    "id": 341,
                    "nodeType": "IfStatement",
                    "src": "4251:374:0",
                    "trueBody": {
                      "id": 336,
                      "nodeType": "Block",
                      "src": "4286:288:0",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 326,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 281,
                                    "src": "4376:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 327,
                                    "name": "sushiswapPrice",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 297,
                                    "src": "4404:14:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 328,
                                    "name": "uniswapPrice",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 288,
                                    "src": "4440:12:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 325,
                                  "name": "_checkIfArbitrageIsProfitable",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 387,
                                  "src": "4325:29:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (uint256,uint256,uint256) pure returns (bool)"
                                  }
                                },
                                "id": 329,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4325:145:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "hexValue": "417262697472616765206e6f742070726f66697461626c65",
                                "id": 330,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4488:26:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_e190aa74025e0fbe1ebb7322e778f3c4aa2d2e0aed8128a6c0e2a3d1f6992ea2",
                                  "typeString": "literal_string \"Arbitrage not profitable\""
                                },
                                "value": "Arbitrage not profitable"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_e190aa74025e0fbe1ebb7322e778f3c4aa2d2e0aed8128a6c0e2a3d1f6992ea2",
                                  "typeString": "literal_string \"Arbitrage not profitable\""
                                }
                              ],
                              "id": 324,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "src": "4300:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 331,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4300:228:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 332,
                          "nodeType": "ExpressionStatement",
                          "src": "4300:228:0"
                        },
                        {
                          "expression": {
                            "expression": {
                              "id": 333,
                              "name": "Exchange",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 19,
                              "src": "4549:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Exchange_$19_$",
                                "typeString": "type(enum SimpleArbitrage.Exchange)"
                              }
                            },
                            "id": 334,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "SUSHI",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 17,
                            "src": "4549:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Exchange_$19",
                              "typeString": "enum SimpleArbitrage.Exchange"
                            }
                          },
                          "functionReturnParameters": 286,
                          "id": 335,
                          "nodeType": "Return",
                          "src": "4542:21:0"
                        }
                      ]
                    }
                  },
                  "id": 342,
                  "nodeType": "IfStatement",
                  "src": "3924:701:0",
                  "trueBody": {
                    "id": 320,
                    "nodeType": "Block",
                    "src": "3959:286:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 310,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 281,
                                  "src": "4049:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 311,
                                  "name": "uniswapPrice",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 288,
                                  "src": "4077:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 312,
                                  "name": "sushiswapPrice",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 297,
                                  "src": "4111:14:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 309,
                                "name": "_checkIfArbitrageIsProfitable",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 387,
                                "src": "3998:29:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (uint256,uint256,uint256) pure returns (bool)"
                                }
                              },
                              "id": 313,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3998:145:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "417262697472616765206e6f742070726f66697461626c65",
                              "id": 314,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4161:26:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_e190aa74025e0fbe1ebb7322e778f3c4aa2d2e0aed8128a6c0e2a3d1f6992ea2",
                                "typeString": "literal_string \"Arbitrage not profitable\""
                              },
                              "value": "Arbitrage not profitable"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_e190aa74025e0fbe1ebb7322e778f3c4aa2d2e0aed8128a6c0e2a3d1f6992ea2",
                                "typeString": "literal_string \"Arbitrage not profitable\""
                              }
                            ],
                            "id": 308,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3973:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 315,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3973:228:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 316,
                        "nodeType": "ExpressionStatement",
                        "src": "3973:228:0"
                      },
                      {
                        "expression": {
                          "expression": {
                            "id": 317,
                            "name": "Exchange",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19,
                            "src": "4222:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Exchange_$19_$",
                              "typeString": "type(enum SimpleArbitrage.Exchange)"
                            }
                          },
                          "id": 318,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "UNI",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 16,
                          "src": "4222:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Exchange_$19",
                            "typeString": "enum SimpleArbitrage.Exchange"
                          }
                        },
                        "functionReturnParameters": 286,
                        "id": 319,
                        "nodeType": "Return",
                        "src": "4215:19:0"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "93d3bf74",
            "id": 344,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_comparePrice",
            "nameLocation": "3444:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 282,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 281,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3466:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 344,
                  "src": "3458:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 280,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3458:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3457:16:0"
            },
            "returnParameters": {
              "id": 286,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 285,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 344,
                  "src": "3495:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Exchange_$19",
                    "typeString": "enum SimpleArbitrage.Exchange"
                  },
                  "typeName": {
                    "id": 284,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 283,
                      "name": "Exchange",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 19,
                      "src": "3495:8:0"
                    },
                    "referencedDeclaration": 19,
                    "src": "3495:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Exchange_$19",
                      "typeString": "enum SimpleArbitrage.Exchange"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3494:10:0"
            },
            "scope": 439,
            "src": "3435:1196:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 386,
              "nodeType": "Block",
              "src": "4792:420:0",
              "statements": [
                {
                  "assignments": [
                    356
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 356,
                      "mutability": "mutable",
                      "name": "difference",
                      "nameLocation": "4977:10:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 386,
                      "src": "4969:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 355,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4969:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 363,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 359,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 357,
                            "name": "higherPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 348,
                            "src": "4991:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 358,
                            "name": "lowerPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 350,
                            "src": "5005:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4991:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 360,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "4990:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 361,
                      "name": "higherPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 348,
                      "src": "5019:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4990:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4969:61:0"
                },
                {
                  "assignments": [
                    365
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 365,
                      "mutability": "mutable",
                      "name": "payed_fee",
                      "nameLocation": "5049:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 386,
                      "src": "5041:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 364,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5041:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 375,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 374,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 371,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "32",
                            "id": 366,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5062:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 369,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 367,
                                  "name": "amountIn",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 346,
                                  "src": "5067:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "hexValue": "33",
                                  "id": 368,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5078:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_3_by_1",
                                    "typeString": "int_const 3"
                                  },
                                  "value": "3"
                                },
                                "src": "5067:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 370,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "5066:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5062:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 372,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "5061:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "31303030",
                      "id": 373,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5084:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000_by_1",
                        "typeString": "int_const 1000"
                      },
                      "value": "1000"
                    },
                    "src": "5061:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5041:47:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 378,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 376,
                      "name": "difference",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 356,
                      "src": "5103:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 377,
                      "name": "payed_fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 365,
                      "src": "5116:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5103:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 384,
                    "nodeType": "Block",
                    "src": "5169:37:0",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "66616c7365",
                          "id": 382,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5190:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 354,
                        "id": 383,
                        "nodeType": "Return",
                        "src": "5183:12:0"
                      }
                    ]
                  },
                  "id": 385,
                  "nodeType": "IfStatement",
                  "src": "5099:107:0",
                  "trueBody": {
                    "id": 381,
                    "nodeType": "Block",
                    "src": "5127:36:0",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 379,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5148:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 354,
                        "id": 380,
                        "nodeType": "Return",
                        "src": "5141:11:0"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "f77b8ad1",
            "id": 387,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_checkIfArbitrageIsProfitable",
            "nameLocation": "4646:29:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 351,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 346,
                  "mutability": "mutable",
                  "name": "amountIn",
                  "nameLocation": "4693:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 387,
                  "src": "4685:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 345,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4685:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 348,
                  "mutability": "mutable",
                  "name": "higherPrice",
                  "nameLocation": "4719:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 387,
                  "src": "4711:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 347,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4711:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 350,
                  "mutability": "mutable",
                  "name": "lowerPrice",
                  "nameLocation": "4748:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 387,
                  "src": "4740:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 349,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4740:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4675:89:0"
            },
            "returnParameters": {
              "id": 354,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 353,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 387,
                  "src": "4786:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 352,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4786:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4785:6:0"
            },
            "scope": 439,
            "src": "4637:575:0",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 437,
              "nodeType": "Block",
              "src": "5383:266:0",
              "statements": [
                {
                  "assignments": [
                    404
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 404,
                      "mutability": "mutable",
                      "name": "pairs",
                      "nameLocation": "5410:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 437,
                      "src": "5393:22:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 402,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5393:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 403,
                        "nodeType": "ArrayTypeName",
                        "src": "5393:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 410,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "32",
                        "id": 408,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5432:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
                      "id": 407,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "5418:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 405,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5422:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 406,
                        "nodeType": "ArrayTypeName",
                        "src": "5422:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
                    "id": 409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5418:16:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5393:41:0"
                },
                {
                  "expression": {
                    "id": 415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 411,
                        "name": "pairs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 404,
                        "src": "5444:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 413,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 412,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5450:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5444:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 414,
                      "name": "sell_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 391,
                      "src": "5455:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5444:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 416,
                  "nodeType": "ExpressionStatement",
                  "src": "5444:21:0"
                },
                {
                  "expression": {
                    "id": 421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 417,
                        "name": "pairs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 404,
                        "src": "5475:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 419,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 418,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5481:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5475:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 420,
                      "name": "buy_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 393,
                      "src": "5486:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5475:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 422,
                  "nodeType": "ExpressionStatement",
                  "src": "5475:20:0"
                },
                {
                  "assignments": [
                    424
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 424,
                      "mutability": "mutable",
                      "name": "price",
                      "nameLocation": "5513:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 437,
                      "src": "5505:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 423,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5505:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 434,
                  "initialValue": {
                    "baseExpression": {
                      "arguments": [
                        {
                          "id": 429,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 395,
                          "src": "5582:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 430,
                          "name": "pairs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 404,
                          "src": "5602:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 426,
                              "name": "routerAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 389,
                              "src": "5540:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 425,
                            "name": "IUniswapV2Router02",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 910,
                            "src": "5521:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IUniswapV2Router02_$910_$",
                              "typeString": "type(contract IUniswapV2Router02)"
                            }
                          },
                          "id": 427,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5521:33:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IUniswapV2Router02_$910",
                            "typeString": "contract IUniswapV2Router02"
                          }
                        },
                        "id": 428,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getAmountsOut",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 813,
                        "src": "5521:47:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                          "typeString": "function (uint256,address[] memory) view external returns (uint256[] memory)"
                        }
                      },
                      "id": 431,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5521:96:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "id": 433,
                    "indexExpression": {
                      "hexValue": "31",
                      "id": 432,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5618:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5521:99:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5505:115:0"
                },
                {
                  "expression": {
                    "id": 435,
                    "name": "price",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 424,
                    "src": "5637:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 399,
                  "id": 436,
                  "nodeType": "Return",
                  "src": "5630:12:0"
                }
              ]
            },
            "functionSelector": "7937a986",
            "id": 438,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getPrice",
            "nameLocation": "5227:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 396,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 389,
                  "mutability": "mutable",
                  "name": "routerAddress",
                  "nameLocation": "5254:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 438,
                  "src": "5246:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 388,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5246:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 391,
                  "mutability": "mutable",
                  "name": "sell_token",
                  "nameLocation": "5285:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 438,
                  "src": "5277:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 390,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5277:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 393,
                  "mutability": "mutable",
                  "name": "buy_token",
                  "nameLocation": "5313:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 438,
                  "src": "5305:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 392,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5305:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 395,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "5340:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 438,
                  "src": "5332:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 394,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5332:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5236:116:0"
            },
            "returnParameters": {
              "id": 399,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 398,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 438,
                  "src": "5374:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 397,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5374:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5373:9:0"
            },
            "scope": 439,
            "src": "5218:431:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 440,
        "src": "141:5510:0",
        "usedErrors": []
      }
    ],
    "src": "33:5619:0"
  },
  "bytecode": "608060405234801561001057600080fd5b50604051610edb380380610edb83398101604081905261002f916100a8565b600380546001600160a01b039586166001600160a01b0319918216179091556004805494861694821694909417909355600080548416331790556001805492851692841692909217909155600280549190931691161790556100fc565b80516001600160a01b03811681146100a357600080fd5b919050565b600080600080608085870312156100be57600080fd5b6100c78561008c565b93506100d56020860161008c565b92506100e36040860161008c565b91506100f16060860161008c565b905092959194509250565b610dd08061010b6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806362962e931161008c57806393d3bf741161006657806393d3bf74146101a1578063b6b55f25146101c1578063c599e7b1146101d4578063f77b8ad1146101dd57600080fd5b806362962e931461015a5780637937a9861461017b5780638da5cb5b1461018e57600080fd5b806319d0a9a2146100d457806320ca3c7f146101045780632ada23a6146101175780632c387275146101215780632e1a7d4d146101345780634f0e0ef314610147575b600080fd5b6004546100e7906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6003546100e7906001600160a01b031681565b61011f610200565b005b6002546100e7906001600160a01b031681565b61011f610142366004610a30565b6102ff565b6001546100e7906001600160a01b031681565b61016d610168366004610a65565b610450565b6040519081526020016100fb565b61016d610189366004610ab2565b61062f565b6000546100e7906001600160a01b031681565b6101b46101af366004610a30565b610758565b6040516100fb9190610b13565b61011f6101cf366004610a30565b61087e565b61016d60055481565b6101f06101eb366004610b3b565b6109ce565b60405190151581526020016100fb565b600554600061020e82610758565b9050600081600281111561022457610224610afd565b1415610288576003546001546002546000926102529286926001600160a01b03928316929182169116610450565b60045460025460015492935060009261027d9285926001600160a01b03918216929082169116610450565b600555506102fb9050565b600181600281111561029c5761029c610afd565b14156102fb576004546001546002546000926102ca9286926001600160a01b03928316929182169116610450565b6003546002546001549293506000926102f59285926001600160a01b03918216929082169116610450565b60055550505b5050565b6000546001600160a01b031633146103595760405162461bcd60e51b81526020600482015260186024820152776f6e6c79206f776e65722063616e2063616c6c207468697360401b60448201526064015b60405180910390fd5b6005548111156103ab5760405162461bcd60e51b815260206004820152601b60248201527f4e6f7420656e6f75676820616d6f756e74206465706f736974656400000000006044820152606401610350565b6001546040516323b872dd60e01b8152306004820152336024820152604481018390526001600160a01b03909116906323b872dd90606401602060405180830381600087803b1580156103fd57600080fd5b505af1158015610411573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104359190610b67565b5080600560008282546104489190610b9f565b909155505050565b60405163095ea7b360e01b81526001600160a01b038481166004830152602482018690526000919084169063095ea7b390604401602060405180830381600087803b15801561049e57600080fd5b505af11580156104b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d69190610b67565b50600060646104e78686868a61062f565b6104f290605f610bb6565b6104fc9190610bd5565b6040805160028082526060820183529293506000929091602083019080368337019050509050848160008151811061053657610536610c0d565b60200260200101906001600160a01b031690816001600160a01b031681525050838160018151811061056a5761056a610c0d565b6001600160a01b0392831660209182029290920101526040516338ed173960e01b81526000918816906338ed1739906105af908b908790879030904290600401610c67565b600060405180830381600087803b1580156105c957600080fd5b505af11580156105dd573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106059190810190610ca3565b60018151811061061757610617610c0d565b60200260200101519050809350505050949350505050565b60408051600280825260608201835260009283929190602083019080368337019050509050848160008151811061066857610668610c0d565b60200260200101906001600160a01b031690816001600160a01b031681525050838160018151811061069c5761069c610c0d565b6001600160a01b03928316602091820292909201015260405163d06ca61f60e01b815260009188169063d06ca61f906106db9087908690600401610d61565b60006040518083038186803b1580156106f357600080fd5b505afa158015610707573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261072f9190810190610ca3565b60018151811061074157610741610c0d565b602002602001015190508092505050949350505050565b6003546001546002546000928392610781926001600160a01b039283169291821691168661062f565b6004546001546002549293506000926107aa926001600160a01b0390811692811691168761062f565b905080821115610810576107bf8483836109ce565b6108065760405162461bcd60e51b8152602060048201526018602482015277417262697472616765206e6f742070726f66697461626c6560401b6044820152606401610350565b5060009392505050565b80821015610874576108238482846109ce565b61086a5760405162461bcd60e51b8152602060048201526018602482015277417262697472616765206e6f742070726f66697461626c6560401b6044820152606401610350565b5060019392505050565b5060029392505050565b6000546001600160a01b031633146108d35760405162461bcd60e51b81526020600482015260186024820152776f6e6c79206f776e65722063616e2063616c6c207468697360401b6044820152606401610350565b600081116109315760405162461bcd60e51b815260206004820152602560248201527f4465706f73697420616d6f756e74206d75737420626520677265617465722074604482015264068616e20360dc1b6064820152608401610350565b6001546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd90606401602060405180830381600087803b15801561098357600080fd5b505af1158015610997573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109bb9190610b67565b5080600560008282546104489190610d82565b600080836109dc8482610b9f565b6109e69190610bd5565b905060006103e86109f8876003610bb6565b610a03906002610bb6565b610a0d9190610bd5565b905080821115610a2257600192505050610a29565b6000925050505b9392505050565b600060208284031215610a4257600080fd5b5035919050565b80356001600160a01b0381168114610a6057600080fd5b919050565b60008060008060808587031215610a7b57600080fd5b84359350610a8b60208601610a49565b9250610a9960408601610a49565b9150610aa760608601610a49565b905092959194509250565b60008060008060808587031215610ac857600080fd5b610ad185610a49565b9350610adf60208601610a49565b9250610aed60408601610a49565b9396929550929360600135925050565b634e487b7160e01b600052602160045260246000fd5b6020810160038310610b3557634e487b7160e01b600052602160045260246000fd5b91905290565b600080600060608486031215610b5057600080fd5b505081359360208301359350604090920135919050565b600060208284031215610b7957600080fd5b81518015158114610a2957600080fd5b634e487b7160e01b600052601160045260246000fd5b600082821015610bb157610bb1610b89565b500390565b6000816000190483118215151615610bd057610bd0610b89565b500290565b600082610bf257634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600081518084526020808501945080840160005b83811015610c5c5781516001600160a01b031687529582019590820190600101610c37565b509495945050505050565b85815284602082015260a060408201526000610c8660a0830186610c23565b6001600160a01b0394909416606083015250608001529392505050565b60006020808385031215610cb657600080fd5b825167ffffffffffffffff80821115610cce57600080fd5b818501915085601f830112610ce257600080fd5b815181811115610cf457610cf4610bf7565b8060051b604051601f19603f83011681018181108582111715610d1957610d19610bf7565b604052918252848201925083810185019188831115610d3757600080fd5b938501935b82851015610d5557845184529385019392850192610d3c565b98975050505050505050565b828152604060208201526000610d7a6040830184610c23565b949350505050565b60008219821115610d9557610d95610b89565b50019056fea2646970667358221220ea528b41bd4882bfaf0eac5274db8f54fbe46453f4ef1b0b9571c78cd757a7cb64736f6c63430008090033",
  "bytecodeSha1": "e9447b109a559da429c28ad3489950a89f3cfc51",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.9+commit.e5eed63a"
  },
  "contractName": "SimpleArbitrage",
  "coverageMap": {
    "branches": {
      "0": {
        "SimpleArbitrage._checkIfArbitrageIsProfitable": {
          "30": [
            5103,
            5125,
            false
          ]
        },
        "SimpleArbitrage._comparePrice": {
          "25": [
            3928,
            3957,
            false
          ],
          "26": [
            3998,
            4143,
            true
          ],
          "27": [
            4255,
            4284,
            false
          ],
          "28": [
            4325,
            4470,
            true
          ]
        },
        "SimpleArbitrage.deposit": {
          "29": [
            983,
            993,
            true
          ]
        },
        "SimpleArbitrage.makeArbitrage": {
          "22": [
            1552,
            1574,
            false
          ],
          "23": [
            2096,
            2120,
            false
          ]
        },
        "SimpleArbitrage.withdraw": {
          "24": [
            1229,
            1254,
            true
          ]
        }
      },
      "1": {},
      "2": {}
    },
    "statements": {
      "0": {
        "SimpleArbitrage._checkIfArbitrageIsProfitable": {
          "20": [
            5141,
            5152
          ],
          "21": [
            5183,
            5195
          ]
        },
        "SimpleArbitrage._comparePrice": {
          "12": [
            3973,
            4201
          ],
          "13": [
            4215,
            4234
          ],
          "14": [
            4300,
            4528
          ],
          "15": [
            4542,
            4563
          ],
          "16": [
            4594,
            4614
          ]
        },
        "SimpleArbitrage._getPrice": {
          "9": [
            5444,
            5465
          ],
          "10": [
            5475,
            5495
          ],
          "11": [
            5630,
            5642
          ]
        },
        "SimpleArbitrage._swap": {
          "5": [
            2812,
            2863
          ],
          "6": [
            3086,
            3106
          ],
          "7": [
            3116,
            3135
          ],
          "8": [
            3406,
            3422
          ]
        },
        "SimpleArbitrage.deposit": {
          "17": [
            975,
            1035
          ],
          "18": [
            1045,
            1112
          ],
          "19": [
            1122,
            1147
          ]
        },
        "SimpleArbitrage.makeArbitrage": {
          "0": [
            2046,
            2075
          ],
          "1": [
            2592,
            2621
          ]
        },
        "SimpleArbitrage.withdraw": {
          "2": [
            1221,
            1286
          ],
          "3": [
            1296,
            1363
          ],
          "4": [
            1373,
            1398
          ]
        }
      },
      "1": {},
      "2": {}
    }
  },
  "dependencies": [
    "IERC20",
    "IUniswapV2Router02"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100cf5760003560e01c806362962e931161008c57806393d3bf741161006657806393d3bf74146101a1578063b6b55f25146101c1578063c599e7b1146101d4578063f77b8ad1146101dd57600080fd5b806362962e931461015a5780637937a9861461017b5780638da5cb5b1461018e57600080fd5b806319d0a9a2146100d457806320ca3c7f146101045780632ada23a6146101175780632c387275146101215780632e1a7d4d146101345780634f0e0ef314610147575b600080fd5b6004546100e7906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6003546100e7906001600160a01b031681565b61011f610200565b005b6002546100e7906001600160a01b031681565b61011f610142366004610a30565b6102ff565b6001546100e7906001600160a01b031681565b61016d610168366004610a65565b610450565b6040519081526020016100fb565b61016d610189366004610ab2565b61062f565b6000546100e7906001600160a01b031681565b6101b46101af366004610a30565b610758565b6040516100fb9190610b13565b61011f6101cf366004610a30565b61087e565b61016d60055481565b6101f06101eb366004610b3b565b6109ce565b60405190151581526020016100fb565b600554600061020e82610758565b9050600081600281111561022457610224610afd565b1415610288576003546001546002546000926102529286926001600160a01b03928316929182169116610450565b60045460025460015492935060009261027d9285926001600160a01b03918216929082169116610450565b600555506102fb9050565b600181600281111561029c5761029c610afd565b14156102fb576004546001546002546000926102ca9286926001600160a01b03928316929182169116610450565b6003546002546001549293506000926102f59285926001600160a01b03918216929082169116610450565b60055550505b5050565b6000546001600160a01b031633146103595760405162461bcd60e51b81526020600482015260186024820152776f6e6c79206f776e65722063616e2063616c6c207468697360401b60448201526064015b60405180910390fd5b6005548111156103ab5760405162461bcd60e51b815260206004820152601b60248201527f4e6f7420656e6f75676820616d6f756e74206465706f736974656400000000006044820152606401610350565b6001546040516323b872dd60e01b8152306004820152336024820152604481018390526001600160a01b03909116906323b872dd90606401602060405180830381600087803b1580156103fd57600080fd5b505af1158015610411573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104359190610b67565b5080600560008282546104489190610b9f565b909155505050565b60405163095ea7b360e01b81526001600160a01b038481166004830152602482018690526000919084169063095ea7b390604401602060405180830381600087803b15801561049e57600080fd5b505af11580156104b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d69190610b67565b50600060646104e78686868a61062f565b6104f290605f610bb6565b6104fc9190610bd5565b6040805160028082526060820183529293506000929091602083019080368337019050509050848160008151811061053657610536610c0d565b60200260200101906001600160a01b031690816001600160a01b031681525050838160018151811061056a5761056a610c0d565b6001600160a01b0392831660209182029290920101526040516338ed173960e01b81526000918816906338ed1739906105af908b908790879030904290600401610c67565b600060405180830381600087803b1580156105c957600080fd5b505af11580156105dd573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106059190810190610ca3565b60018151811061061757610617610c0d565b60200260200101519050809350505050949350505050565b60408051600280825260608201835260009283929190602083019080368337019050509050848160008151811061066857610668610c0d565b60200260200101906001600160a01b031690816001600160a01b031681525050838160018151811061069c5761069c610c0d565b6001600160a01b03928316602091820292909201015260405163d06ca61f60e01b815260009188169063d06ca61f906106db9087908690600401610d61565b60006040518083038186803b1580156106f357600080fd5b505afa158015610707573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261072f9190810190610ca3565b60018151811061074157610741610c0d565b602002602001015190508092505050949350505050565b6003546001546002546000928392610781926001600160a01b039283169291821691168661062f565b6004546001546002549293506000926107aa926001600160a01b0390811692811691168761062f565b905080821115610810576107bf8483836109ce565b6108065760405162461bcd60e51b8152602060048201526018602482015277417262697472616765206e6f742070726f66697461626c6560401b6044820152606401610350565b5060009392505050565b80821015610874576108238482846109ce565b61086a5760405162461bcd60e51b8152602060048201526018602482015277417262697472616765206e6f742070726f66697461626c6560401b6044820152606401610350565b5060019392505050565b5060029392505050565b6000546001600160a01b031633146108d35760405162461bcd60e51b81526020600482015260186024820152776f6e6c79206f776e65722063616e2063616c6c207468697360401b6044820152606401610350565b600081116109315760405162461bcd60e51b815260206004820152602560248201527f4465706f73697420616d6f756e74206d75737420626520677265617465722074604482015264068616e20360dc1b6064820152608401610350565b6001546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd90606401602060405180830381600087803b15801561098357600080fd5b505af1158015610997573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109bb9190610b67565b5080600560008282546104489190610d82565b600080836109dc8482610b9f565b6109e69190610bd5565b905060006103e86109f8876003610bb6565b610a03906002610bb6565b610a0d9190610bd5565b905080821115610a2257600192505050610a29565b6000925050505b9392505050565b600060208284031215610a4257600080fd5b5035919050565b80356001600160a01b0381168114610a6057600080fd5b919050565b60008060008060808587031215610a7b57600080fd5b84359350610a8b60208601610a49565b9250610a9960408601610a49565b9150610aa760608601610a49565b905092959194509250565b60008060008060808587031215610ac857600080fd5b610ad185610a49565b9350610adf60208601610a49565b9250610aed60408601610a49565b9396929550929360600135925050565b634e487b7160e01b600052602160045260246000fd5b6020810160038310610b3557634e487b7160e01b600052602160045260246000fd5b91905290565b600080600060608486031215610b5057600080fd5b505081359360208301359350604090920135919050565b600060208284031215610b7957600080fd5b81518015158114610a2957600080fd5b634e487b7160e01b600052601160045260246000fd5b600082821015610bb157610bb1610b89565b500390565b6000816000190483118215151615610bd057610bd0610b89565b500290565b600082610bf257634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600081518084526020808501945080840160005b83811015610c5c5781516001600160a01b031687529582019590820190600101610c37565b509495945050505050565b85815284602082015260a060408201526000610c8660a0830186610c23565b6001600160a01b0394909416606083015250608001529392505050565b60006020808385031215610cb657600080fd5b825167ffffffffffffffff80821115610cce57600080fd5b818501915085601f830112610ce257600080fd5b815181811115610cf457610cf4610bf7565b8060051b604051601f19603f83011681018181108582111715610d1957610d19610bf7565b604052918252848201925083810185019188831115610d3757600080fd5b938501935b82851015610d5557845184529385019392850192610d3c565b98975050505050505050565b828152604060208201526000610d7a6040830184610c23565b949350505050565b60008219821115610d9557610d95610b89565b50019056fea2646970667358221220ea528b41bd4882bfaf0eac5274db8f54fbe46453f4ef1b0b9571c78cd757a7cb64736f6c63430008090033",
  "deployedSourceMap": "141:5510:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;303:37;;;;;-1:-1:-1;;;;;303:37:0;;;;;;-1:-1:-1;;;;;178:32:3;;;160:51;;148:2;133:18;303:37:0;;;;;;;;262:35;;;;;-1:-1:-1;;;;;262:35:0;;;1411:1227;;;:::i;:::-;;231:25;;;;;-1:-1:-1;;;;;231:25:0;;;1160:245;;;;;;:::i;:::-;;:::i;199:26::-;;;;;-1:-1:-1;;;;;199:26:0;;;2644:785;;;;;;:::i;:::-;;:::i;:::-;;;1139:25:3;;;1127:2;1112:18;2644:785:0;993:177:3;5218:431:0;;;;;;:::i;:::-;;:::i;172:20::-;;;;;-1:-1:-1;;;;;172:20:0;;;3435:1196;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;915:239::-;;;;;;:::i;:::-;;:::i;347:30::-;;;;;;4637:575;;;;;;:::i;:::-;;:::i;:::-;;;2545:14:3;;2538:22;2520:41;;2508:2;2493:18;4637:575:0;2380:187:3;1411:1227:0;1472:15;;1453:16;1515:23;1472:15;1515:13;:23::i;:::-;1497:41;-1:-1:-1;1562:12:0;1552:6;:22;;;;;;;;:::i;:::-;;1548:1084;;;1762:20;;;1800:11;1829:10;;1693:17;;1713:140;;1736:8;;-1:-1:-1;;;;;1762:20:0;;;;1800:11;;;;1829:10;1713:5;:140::i;:::-;1939:22;;1979:10;;1939:22;2007:11;1693:160;;-1:-1:-1;1867:19:0;;1889:143;;1693:160;;-1:-1:-1;;;;;1939:22:0;;;;1979:10;;;;2007:11;1889:5;:143::i;:::-;2046:15;:29;-1:-1:-1;1548:1084:0;;-1:-1:-1;1548:1084:0;;2106:14;2096:6;:24;;;;;;;;:::i;:::-;;2092:540;;;2308:22;;;2348:11;2377:10;;2239:17;;2259:142;;2282:8;;-1:-1:-1;;;;;2308:22:0;;;;2348:11;;;;2377:10;2259:5;:142::i;:::-;2487:20;;2525:10;;2487:20;2553:11;2239:162;;-1:-1:-1;2415:19:0;;2437:141;;2239:162;;-1:-1:-1;;;;;2487:20:0;;;;2525:10;;;;2553:11;2437:5;:141::i;:::-;2592:15;:29;-1:-1:-1;;2092:540:0;1443:1195;;1411:1227::o;1160:245::-;857:5;;-1:-1:-1;;;;;857:5:0;843:10;:19;835:56;;;;-1:-1:-1;;;835:56:0;;2774:2:3;835:56:0;;;2756:21:3;2813:2;2793:18;;;2786:30;-1:-1:-1;;;2832:18:3;;;2825:54;2896:18;;835:56:0;;;;;;;;;1239:15:::1;;1229:6;:25;;1221:65;;;::::0;-1:-1:-1;;;1221:65:0;;3127:2:3;1221:65:0::1;::::0;::::1;3109:21:3::0;3166:2;3146:18;;;3139:30;3205:29;3185:18;;;3178:57;3252:18;;1221:65:0::1;2925:351:3::0;1221:65:0::1;1303:11;::::0;1296:67:::1;::::0;-1:-1:-1;;;1296:67:0;;1337:4:::1;1296:67;::::0;::::1;3521:34:3::0;1344:10:0::1;3571:18:3::0;;;3564:43;3623:18;;;3616:34;;;-1:-1:-1;;;;;1303:11:0;;::::1;::::0;1296:32:::1;::::0;3456:18:3;;1296:67:0::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1392:6;1373:15;;:25;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;;1160:245:0:o;2644:785::-;2812:51;;-1:-1:-1;;;2812:51:0;;-1:-1:-1;;;;;4397:32:3;;;2812:51:0;;;4379::3;4446:18;;;4439:34;;;2793:7:0;;2812:26;;;;;;4352:18:3;;2812:51:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2874:20;3022:3;2898:115;2921:13;2948:10;2972:9;2995:8;2898:9;:115::i;:::-;:120;;3016:2;2898:120;:::i;:::-;2897:128;;;;:::i;:::-;3060:16;;;3074:1;3060:16;;;;;;;;2874:151;;-1:-1:-1;3036:21:0;;3060:16;;;;;;;;;;;;-1:-1:-1;3060:16:0;3036:40;;3096:10;3086:4;3091:1;3086:7;;;;;;;;:::i;:::-;;;;;;:20;-1:-1:-1;;;;;3086:20:0;;;-1:-1:-1;;;;;3086:20:0;;;;;3126:9;3116:4;3121:1;3116:7;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3116:19:0;;;:7;;;;;;;;;:19;3166:227;;-1:-1:-1;;;3166:227:0;;3146:17;;3166:71;;;;;:227;;3255:8;;3281:12;;3311:4;;3341;;3364:15;;3166:227;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3166:227:0;;;;;;;;;;;;:::i;:::-;3394:1;3166:230;;;;;;;;:::i;:::-;;;;;;;3146:250;;3413:9;3406:16;;;;;2644:785;;;;;;:::o;5218:431::-;5418:16;;;5432:1;5418:16;;;;;;;;5374:7;;;;5418:16;5432:1;5418:16;;;;;;;;;;-1:-1:-1;5418:16:0;5393:41;;5455:10;5444:5;5450:1;5444:8;;;;;;;;:::i;:::-;;;;;;:21;-1:-1:-1;;;;;5444:21:0;;;-1:-1:-1;;;;;5444:21:0;;;;;5486:9;5475:5;5481:1;5475:8;;;;;;;;:::i;:::-;-1:-1:-1;;;;;5475:20:0;;;:8;;;;;;;;;:20;5521:96;;-1:-1:-1;;;5521:96:0;;5505:13;;5521:47;;;;;:96;;5582:6;;5602:5;;5521:96;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5521:96:0;;;;;;;;;;;;:::i;:::-;5618:1;5521:99;;;;;;;;:::i;:::-;;;;;;;5505:115;;5637:5;5630:12;;;;5218:431;;;;;;:::o;3435:1196::-;3561:20;;;3595:11;3620:10;;3495:8;;;;3538:122;;-1:-1:-1;;;;;3561:20:0;;;;3595:11;;;;3620:10;3644:6;3538:9;:122::i;:::-;3718:22;;;3754:11;3779:10;;3515:145;;-1:-1:-1;3670:22:0;;3695:124;;-1:-1:-1;;;;;3718:22:0;;;;3754:11;;;3779:10;3803:6;3695:9;:124::i;:::-;3670:149;;3943:14;3928:12;:29;3924:701;;;3998:145;4049:6;4077:12;4111:14;3998:29;:145::i;:::-;3973:228;;;;-1:-1:-1;;;3973:228:0;;7837:2:3;3973:228:0;;;7819:21:3;7876:2;7856:18;;;7849:30;-1:-1:-1;;;7895:18:3;;;7888:54;7959:18;;3973:228:0;7635:348:3;3973:228:0;-1:-1:-1;4222:12:0;;3435:1196;-1:-1:-1;;;3435:1196:0:o;3924:701::-;4270:14;4255:12;:29;4251:374;;;4325:145;4376:6;4404:14;4440:12;4325:29;:145::i;:::-;4300:228;;;;-1:-1:-1;;;4300:228:0;;7837:2:3;4300:228:0;;;7819:21:3;7876:2;7856:18;;;7849:30;-1:-1:-1;;;7895:18:3;;;7888:54;7959:18;;4300:228:0;7635:348:3;4300:228:0;-1:-1:-1;4549:14:0;;3435:1196;-1:-1:-1;;;3435:1196:0:o;4251:374::-;-1:-1:-1;4601:13:0;;3435:1196;-1:-1:-1;;;3435:1196:0:o;915:239::-;857:5;;-1:-1:-1;;;;;857:5:0;843:10;:19;835:56;;;;-1:-1:-1;;;835:56:0;;2774:2:3;835:56:0;;;2756:21:3;2813:2;2793:18;;;2786:30;-1:-1:-1;;;2832:18:3;;;2825:54;2896:18;;835:56:0;2572:348:3;835:56:0;992:1:::1;983:6;:10;975:60;;;::::0;-1:-1:-1;;;975:60:0;;8190:2:3;975:60:0::1;::::0;::::1;8172:21:3::0;8229:2;8209:18;;;8202:30;8268:34;8248:18;;;8241:62;-1:-1:-1;;;8319:18:3;;;8312:35;8364:19;;975:60:0::1;7988:401:3::0;975:60:0::1;1052:11;::::0;1045:67:::1;::::0;-1:-1:-1;;;1045:67:0;;1078:10:::1;1045:67;::::0;::::1;3521:34:3::0;1098:4:0::1;3571:18:3::0;;;3564:43;3623:18;;;3616:34;;;-1:-1:-1;;;;;1052:11:0;;::::1;::::0;1045:32:::1;::::0;3456:18:3;;1045:67:0::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1141:6;1122:15;;:25;;;;;;;:::i;4637:575::-:0;4786:4;;5019:11;4991:24;5005:10;5019:11;4991:24;:::i;:::-;4990:40;;;;:::i;:::-;4969:61;-1:-1:-1;5041:17:0;5084:4;5067:12;:8;5078:1;5067:12;:::i;:::-;5062:18;;:1;:18;:::i;:::-;5061:27;;;;:::i;:::-;5041:47;;5116:9;5103:10;:22;5099:107;;;5148:4;5141:11;;;;;;5099:107;5190:5;5183:12;;;;4637:575;;;;;;:::o;222:180:3:-;281:6;334:2;322:9;313:7;309:23;305:32;302:52;;;350:1;347;340:12;302:52;-1:-1:-1;373:23:3;;222:180;-1:-1:-1;222:180:3:o;407:173::-;475:20;;-1:-1:-1;;;;;524:31:3;;514:42;;504:70;;570:1;567;560:12;504:70;407:173;;;:::o;585:403::-;671:6;679;687;695;748:3;736:9;727:7;723:23;719:33;716:53;;;765:1;762;755:12;716:53;801:9;788:23;778:33;;830:38;864:2;853:9;849:18;830:38;:::i;:::-;820:48;;887:38;921:2;910:9;906:18;887:38;:::i;:::-;877:48;;944:38;978:2;967:9;963:18;944:38;:::i;:::-;934:48;;585:403;;;;;;;:::o;1175:::-;1261:6;1269;1277;1285;1338:3;1326:9;1317:7;1313:23;1309:33;1306:53;;;1355:1;1352;1345:12;1306:53;1378:29;1397:9;1378:29;:::i;:::-;1368:39;;1426:38;1460:2;1449:9;1445:18;1426:38;:::i;:::-;1416:48;;1483:38;1517:2;1506:9;1502:18;1483:38;:::i;:::-;1175:403;;;;-1:-1:-1;1473:48:3;;1568:2;1553:18;1540:32;;-1:-1:-1;;1175:403:3:o;1583:127::-;1644:10;1639:3;1635:20;1632:1;1625:31;1675:4;1672:1;1665:15;1699:4;1696:1;1689:15;1715:339;1858:2;1843:18;;1891:1;1880:13;;1870:144;;1936:10;1931:3;1927:20;1924:1;1917:31;1971:4;1968:1;1961:15;1999:4;1996:1;1989:15;1870:144;2023:25;;;1715:339;:::o;2059:316::-;2136:6;2144;2152;2205:2;2193:9;2184:7;2180:23;2176:32;2173:52;;;2221:1;2218;2211:12;2173:52;-1:-1:-1;;2244:23:3;;;2314:2;2299:18;;2286:32;;-1:-1:-1;2365:2:3;2350:18;;;2337:32;;2059:316;-1:-1:-1;2059:316:3:o;3661:277::-;3728:6;3781:2;3769:9;3760:7;3756:23;3752:32;3749:52;;;3797:1;3794;3787:12;3749:52;3829:9;3823:16;3882:5;3875:13;3868:21;3861:5;3858:32;3848:60;;3904:1;3901;3894:12;3943:127;4004:10;3999:3;3995:20;3992:1;3985:31;4035:4;4032:1;4025:15;4059:4;4056:1;4049:15;4075:125;4115:4;4143:1;4140;4137:8;4134:34;;;4148:18;;:::i;:::-;-1:-1:-1;4185:9:3;;4075:125::o;4484:168::-;4524:7;4590:1;4586;4582:6;4578:14;4575:1;4572:21;4567:1;4560:9;4553:17;4549:45;4546:71;;;4597:18;;:::i;:::-;-1:-1:-1;4637:9:3;;4484:168::o;4657:217::-;4697:1;4723;4713:132;;4767:10;4762:3;4758:20;4755:1;4748:31;4802:4;4799:1;4792:15;4830:4;4827:1;4820:15;4713:132;-1:-1:-1;4859:9:3;;4657:217::o;4879:127::-;4940:10;4935:3;4931:20;4928:1;4921:31;4971:4;4968:1;4961:15;4995:4;4992:1;4985:15;5011:127;5072:10;5067:3;5063:20;5060:1;5053:31;5103:4;5100:1;5093:15;5127:4;5124:1;5117:15;5143:461;5196:3;5234:5;5228:12;5261:6;5256:3;5249:19;5287:4;5316:2;5311:3;5307:12;5300:19;;5353:2;5346:5;5342:14;5374:1;5384:195;5398:6;5395:1;5392:13;5384:195;;;5463:13;;-1:-1:-1;;;;;5459:39:3;5447:52;;5519:12;;;;5554:15;;;;5495:1;5413:9;5384:195;;;-1:-1:-1;5595:3:3;;5143:461;-1:-1:-1;;;;;5143:461:3:o;5609:574::-;5900:6;5889:9;5882:25;5943:6;5938:2;5927:9;5923:18;5916:34;5986:3;5981:2;5970:9;5966:18;5959:31;5863:4;6007:57;6059:3;6048:9;6044:19;6036:6;6007:57;:::i;:::-;-1:-1:-1;;;;;6100:32:3;;;;6095:2;6080:18;;6073:60;-1:-1:-1;6164:3:3;6149:19;6142:35;5999:65;5609:574;-1:-1:-1;;;5609:574:3:o;6188:1105::-;6283:6;6314:2;6357;6345:9;6336:7;6332:23;6328:32;6325:52;;;6373:1;6370;6363:12;6325:52;6406:9;6400:16;6435:18;6476:2;6468:6;6465:14;6462:34;;;6492:1;6489;6482:12;6462:34;6530:6;6519:9;6515:22;6505:32;;6575:7;6568:4;6564:2;6560:13;6556:27;6546:55;;6597:1;6594;6587:12;6546:55;6626:2;6620:9;6648:2;6644;6641:10;6638:36;;;6654:18;;:::i;:::-;6700:2;6697:1;6693:10;6732:2;6726:9;6795:2;6791:7;6786:2;6782;6778:11;6774:25;6766:6;6762:38;6850:6;6838:10;6835:22;6830:2;6818:10;6815:18;6812:46;6809:72;;;6861:18;;:::i;:::-;6897:2;6890:22;6947:18;;;6981:15;;;;-1:-1:-1;7023:11:3;;;7019:20;;;7051:19;;;7048:39;;;7083:1;7080;7073:12;7048:39;7107:11;;;;7127:135;7143:6;7138:3;7135:15;7127:135;;;7209:10;;7197:23;;7160:12;;;;7240;;;;7127:135;;;7281:6;6188:1105;-1:-1:-1;;;;;;;;6188:1105:3:o;7298:332::-;7505:6;7494:9;7487:25;7548:2;7543;7532:9;7528:18;7521:30;7468:4;7568:56;7620:2;7609:9;7605:18;7597:6;7568:56;:::i;:::-;7560:64;7298:332;-1:-1:-1;;;;7298:332:3:o;8394:128::-;8434:3;8465:1;8461:6;8458:1;8455:13;8452:39;;;8471:18;;:::i;:::-;-1:-1:-1;8507:9:3;;8394:128::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    141,
    5651
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x62962E93 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x93D3BF74 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x93D3BF74 EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0xC599E7B1 EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0xF77B8AD1 EQ PUSH2 0x1DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x62962E93 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0x7937A986 EQ PUSH2 0x17B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x18E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x19D0A9A2 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x20CA3C7F EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x2ADA23A6 EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0x2C387275 EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x134 JUMPI DUP1 PUSH4 0x4F0E0EF3 EQ PUSH2 0x147 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 SLOAD PUSH2 0xE7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x3 SLOAD PUSH2 0xE7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x11F PUSH2 0x200 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0xE7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x11F PUSH2 0x142 CALLDATASIZE PUSH1 0x4 PUSH2 0xA30 JUMP JUMPDEST PUSH2 0x2FF JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0xE7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x16D PUSH2 0x168 CALLDATASIZE PUSH1 0x4 PUSH2 0xA65 JUMP JUMPDEST PUSH2 0x450 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFB JUMP JUMPDEST PUSH2 0x16D PUSH2 0x189 CALLDATASIZE PUSH1 0x4 PUSH2 0xAB2 JUMP JUMPDEST PUSH2 0x62F JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0xE7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1B4 PUSH2 0x1AF CALLDATASIZE PUSH1 0x4 PUSH2 0xA30 JUMP JUMPDEST PUSH2 0x758 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0xB13 JUMP JUMPDEST PUSH2 0x11F PUSH2 0x1CF CALLDATASIZE PUSH1 0x4 PUSH2 0xA30 JUMP JUMPDEST PUSH2 0x87E JUMP JUMPDEST PUSH2 0x16D PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1F0 PUSH2 0x1EB CALLDATASIZE PUSH1 0x4 PUSH2 0xB3B JUMP JUMPDEST PUSH2 0x9CE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFB JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 PUSH2 0x20E DUP3 PUSH2 0x758 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x224 JUMPI PUSH2 0x224 PUSH2 0xAFD JUMP JUMPDEST EQ ISZERO PUSH2 0x288 JUMPI PUSH1 0x3 SLOAD PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD PUSH1 0x0 SWAP3 PUSH2 0x252 SWAP3 DUP7 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 SWAP2 DUP3 AND SWAP2 AND PUSH2 0x450 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD SWAP3 SWAP4 POP PUSH1 0x0 SWAP3 PUSH2 0x27D SWAP3 DUP6 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 SWAP1 DUP3 AND SWAP2 AND PUSH2 0x450 JUMP JUMPDEST PUSH1 0x5 SSTORE POP PUSH2 0x2FB SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x29C JUMPI PUSH2 0x29C PUSH2 0xAFD JUMP JUMPDEST EQ ISZERO PUSH2 0x2FB JUMPI PUSH1 0x4 SLOAD PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD PUSH1 0x0 SWAP3 PUSH2 0x2CA SWAP3 DUP7 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 SWAP2 DUP3 AND SWAP2 AND PUSH2 0x450 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD SWAP3 SWAP4 POP PUSH1 0x0 SWAP3 PUSH2 0x2F5 SWAP3 DUP6 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 SWAP1 DUP3 AND SWAP2 AND PUSH2 0x450 JUMP JUMPDEST PUSH1 0x5 SSTORE POP POP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x359 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x6F6E6C79206F776E65722063616E2063616C6C2074686973 PUSH1 0x40 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD DUP2 GT ISZERO PUSH2 0x3AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F75676820616D6F756E74206465706F73697465640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x350 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x411 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x435 SWAP2 SWAP1 PUSH2 0xB67 JUMP JUMPDEST POP DUP1 PUSH1 0x5 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x448 SWAP2 SWAP1 PUSH2 0xB9F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP7 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x49E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4B2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4D6 SWAP2 SWAP1 PUSH2 0xB67 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x64 PUSH2 0x4E7 DUP7 DUP7 DUP7 DUP11 PUSH2 0x62F JUMP JUMPDEST PUSH2 0x4F2 SWAP1 PUSH1 0x5F PUSH2 0xBB6 JUMP JUMPDEST PUSH2 0x4FC SWAP2 SWAP1 PUSH2 0xBD5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE SWAP3 SWAP4 POP PUSH1 0x0 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP5 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x536 JUMPI PUSH2 0x536 PUSH2 0xC0D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP4 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x56A JUMPI PUSH2 0x56A PUSH2 0xC0D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x40 MLOAD PUSH4 0x38ED1739 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 DUP9 AND SWAP1 PUSH4 0x38ED1739 SWAP1 PUSH2 0x5AF SWAP1 DUP12 SWAP1 DUP8 SWAP1 DUP8 SWAP1 ADDRESS SWAP1 TIMESTAMP SWAP1 PUSH1 0x4 ADD PUSH2 0xC67 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5DD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x605 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xCA3 JUMP JUMPDEST PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x617 JUMPI PUSH2 0x617 PUSH2 0xC0D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP1 SWAP4 POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE PUSH1 0x0 SWAP3 DUP4 SWAP3 SWAP2 SWAP1 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP5 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x668 JUMPI PUSH2 0x668 PUSH2 0xC0D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP4 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x69C JUMPI PUSH2 0x69C PUSH2 0xC0D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x40 MLOAD PUSH4 0xD06CA61F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 DUP9 AND SWAP1 PUSH4 0xD06CA61F SWAP1 PUSH2 0x6DB SWAP1 DUP8 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0xD61 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x707 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x72F SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xCA3 JUMP JUMPDEST PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x741 JUMPI PUSH2 0x741 PUSH2 0xC0D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP1 SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD PUSH1 0x0 SWAP3 DUP4 SWAP3 PUSH2 0x781 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 SWAP2 DUP3 AND SWAP2 AND DUP7 PUSH2 0x62F JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD SWAP3 SWAP4 POP PUSH1 0x0 SWAP3 PUSH2 0x7AA SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP3 DUP2 AND SWAP2 AND DUP8 PUSH2 0x62F JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x810 JUMPI PUSH2 0x7BF DUP5 DUP4 DUP4 PUSH2 0x9CE JUMP JUMPDEST PUSH2 0x806 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x417262697472616765206E6F742070726F66697461626C65 PUSH1 0x40 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x350 JUMP JUMPDEST POP PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0x874 JUMPI PUSH2 0x823 DUP5 DUP3 DUP5 PUSH2 0x9CE JUMP JUMPDEST PUSH2 0x86A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x417262697472616765206E6F742070726F66697461626C65 PUSH1 0x40 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x350 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST POP PUSH1 0x2 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x8D3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x6F6E6C79206F776E65722063616E2063616C6C2074686973 PUSH1 0x40 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x350 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x931 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4465706F73697420616D6F756E74206D75737420626520677265617465722074 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x68616E203 PUSH1 0xDC SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x350 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x983 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x997 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9BB SWAP2 SWAP1 PUSH2 0xB67 JUMP JUMPDEST POP DUP1 PUSH1 0x5 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x448 SWAP2 SWAP1 PUSH2 0xD82 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH2 0x9DC DUP5 DUP3 PUSH2 0xB9F JUMP JUMPDEST PUSH2 0x9E6 SWAP2 SWAP1 PUSH2 0xBD5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3E8 PUSH2 0x9F8 DUP8 PUSH1 0x3 PUSH2 0xBB6 JUMP JUMPDEST PUSH2 0xA03 SWAP1 PUSH1 0x2 PUSH2 0xBB6 JUMP JUMPDEST PUSH2 0xA0D SWAP2 SWAP1 PUSH2 0xBD5 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xA22 JUMPI PUSH1 0x1 SWAP3 POP POP POP PUSH2 0xA29 JUMP JUMPDEST PUSH1 0x0 SWAP3 POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xA60 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xA7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH2 0xA8B PUSH1 0x20 DUP7 ADD PUSH2 0xA49 JUMP JUMPDEST SWAP3 POP PUSH2 0xA99 PUSH1 0x40 DUP7 ADD PUSH2 0xA49 JUMP JUMPDEST SWAP2 POP PUSH2 0xAA7 PUSH1 0x60 DUP7 ADD PUSH2 0xA49 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xAC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAD1 DUP6 PUSH2 0xA49 JUMP JUMPDEST SWAP4 POP PUSH2 0xADF PUSH1 0x20 DUP7 ADD PUSH2 0xA49 JUMP JUMPDEST SWAP3 POP PUSH2 0xAED PUSH1 0x40 DUP7 ADD PUSH2 0xA49 JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP3 SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD PUSH1 0x3 DUP4 LT PUSH2 0xB35 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xB50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xA29 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xBB1 JUMPI PUSH2 0xBB1 PUSH2 0xB89 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xBD0 JUMPI PUSH2 0xBD0 PUSH2 0xB89 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xBF2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xC5C JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xC37 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP6 DUP2 MSTORE DUP5 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0xC86 PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0xC23 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xCCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xCE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0xCF4 JUMPI PUSH2 0xCF4 PUSH2 0xBF7 JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH2 0xD19 JUMPI PUSH2 0xD19 PUSH2 0xBF7 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 DUP3 MSTORE DUP5 DUP3 ADD SWAP3 POP DUP4 DUP2 ADD DUP6 ADD SWAP2 DUP9 DUP4 GT ISZERO PUSH2 0xD37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP3 DUP6 LT ISZERO PUSH2 0xD55 JUMPI DUP5 MLOAD DUP5 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP3 DUP6 ADD SWAP3 PUSH2 0xD3C JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0xD7A PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xC23 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xD95 JUMPI PUSH2 0xD95 PUSH2 0xB89 JUMP JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEA MSTORE DUP12 COINBASE 0xBD BASEFEE DUP3 0xBF 0xAF 0xE 0xAC MSTORE PUSH21 0xDB8F54FBE46453F4EF1B0B9571C78CD757A7CB6473 PUSH16 0x6C634300080900330000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        141,
        5651
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "6": {
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7": {
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "12": {
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "DUP1",
      "path": "0"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "REVERT",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "17": {
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "POP",
      "path": "0"
    },
    "18": {
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "21": {
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "LT",
      "path": "0"
    },
    "22": {
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCF"
    },
    "25": {
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "29": {
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "SHR",
      "path": "0"
    },
    "32": {
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "DUP1",
      "path": "0"
    },
    "33": {
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x62962E93"
    },
    "38": {
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "GT",
      "path": "0"
    },
    "39": {
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8C"
    },
    "42": {
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "43": {
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "DUP1",
      "path": "0"
    },
    "44": {
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x93D3BF74"
    },
    "49": {
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "GT",
      "path": "0"
    },
    "50": {
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x66"
    },
    "53": {
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "54": {
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "DUP1",
      "path": "0"
    },
    "55": {
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x93D3BF74"
    },
    "60": {
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "EQ",
      "path": "0"
    },
    "61": {
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A1"
    },
    "64": {
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "65": {
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "DUP1",
      "path": "0"
    },
    "66": {
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xB6B55F25"
    },
    "71": {
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "EQ",
      "path": "0"
    },
    "72": {
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C1"
    },
    "75": {
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "76": {
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "DUP1",
      "path": "0"
    },
    "77": {
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xC599E7B1"
    },
    "82": {
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "EQ",
      "path": "0"
    },
    "83": {
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D4"
    },
    "86": {
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "87": {
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "DUP1",
      "path": "0"
    },
    "88": {
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xF77B8AD1"
    },
    "93": {
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "EQ",
      "path": "0"
    },
    "94": {
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DD"
    },
    "97": {
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "98": {
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "100": {
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "DUP1",
      "path": "0"
    },
    "101": {
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "REVERT",
      "path": "0"
    },
    "102": {
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "103": {
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "DUP1",
      "path": "0"
    },
    "104": {
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x62962E93"
    },
    "109": {
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "EQ",
      "path": "0"
    },
    "110": {
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15A"
    },
    "113": {
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "114": {
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "DUP1",
      "path": "0"
    },
    "115": {
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x7937A986"
    },
    "120": {
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "EQ",
      "path": "0"
    },
    "121": {
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17B"
    },
    "124": {
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "125": {
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "DUP1",
      "path": "0"
    },
    "126": {
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x8DA5CB5B"
    },
    "131": {
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "EQ",
      "path": "0"
    },
    "132": {
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18E"
    },
    "135": {
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "136": {
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "138": {
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "DUP1",
      "path": "0"
    },
    "139": {
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "REVERT",
      "path": "0"
    },
    "140": {
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "141": {
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "DUP1",
      "path": "0"
    },
    "142": {
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x19D0A9A2"
    },
    "147": {
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "EQ",
      "path": "0"
    },
    "148": {
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD4"
    },
    "151": {
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "152": {
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "DUP1",
      "path": "0"
    },
    "153": {
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x20CA3C7F"
    },
    "158": {
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "EQ",
      "path": "0"
    },
    "159": {
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x104"
    },
    "162": {
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "163": {
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "DUP1",
      "path": "0"
    },
    "164": {
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x2ADA23A6"
    },
    "169": {
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "EQ",
      "path": "0"
    },
    "170": {
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x117"
    },
    "173": {
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "174": {
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "DUP1",
      "path": "0"
    },
    "175": {
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x2C387275"
    },
    "180": {
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "EQ",
      "path": "0"
    },
    "181": {
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x121"
    },
    "184": {
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "185": {
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "DUP1",
      "path": "0"
    },
    "186": {
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x2E1A7D4D"
    },
    "191": {
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "EQ",
      "path": "0"
    },
    "192": {
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x134"
    },
    "195": {
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "196": {
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "DUP1",
      "path": "0"
    },
    "197": {
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x4F0E0EF3"
    },
    "202": {
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "EQ",
      "path": "0"
    },
    "203": {
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x147"
    },
    "206": {
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "207": {
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "208": {
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "210": {
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "DUP1",
      "path": "0"
    },
    "211": {
      "first_revert": true,
      "fn": null,
      "offset": [
        141,
        5651
      ],
      "op": "REVERT",
      "path": "0"
    },
    "212": {
      "offset": [
        303,
        340
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "213": {
      "fn": null,
      "offset": [
        303,
        340
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "215": {
      "fn": null,
      "offset": [
        303,
        340
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "216": {
      "fn": null,
      "offset": [
        303,
        340
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE7"
    },
    "219": {
      "fn": null,
      "offset": [
        303,
        340
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "220": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "222": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "224": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "226": {
      "op": "SHL"
    },
    "227": {
      "op": "SUB"
    },
    "228": {
      "offset": [
        303,
        340
      ],
      "op": "AND",
      "path": "0"
    },
    "229": {
      "fn": null,
      "offset": [
        303,
        340
      ],
      "op": "DUP2",
      "path": "0"
    },
    "230": {
      "fn": null,
      "offset": [
        303,
        340
      ],
      "op": "JUMP",
      "path": "0"
    },
    "231": {
      "fn": null,
      "offset": [
        303,
        340
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "232": {
      "fn": null,
      "offset": [
        303,
        340
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "234": {
      "fn": null,
      "offset": [
        303,
        340
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "235": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "237": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "239": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "241": {
      "op": "SHL"
    },
    "242": {
      "op": "SUB"
    },
    "243": {
      "op": "SWAP1"
    },
    "244": {
      "op": "SWAP2"
    },
    "245": {
      "op": "AND"
    },
    "246": {
      "op": "DUP2"
    },
    "247": {
      "op": "MSTORE"
    },
    "248": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "250": {
      "op": "ADD"
    },
    "251": {
      "offset": [
        303,
        340
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "252": {
      "fn": null,
      "offset": [
        303,
        340
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "254": {
      "fn": null,
      "offset": [
        303,
        340
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "255": {
      "fn": null,
      "offset": [
        303,
        340
      ],
      "op": "DUP1",
      "path": "0"
    },
    "256": {
      "fn": null,
      "offset": [
        303,
        340
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "257": {
      "fn": null,
      "offset": [
        303,
        340
      ],
      "op": "SUB",
      "path": "0"
    },
    "258": {
      "fn": null,
      "offset": [
        303,
        340
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "259": {
      "fn": null,
      "offset": [
        303,
        340
      ],
      "op": "RETURN",
      "path": "0"
    },
    "260": {
      "offset": [
        262,
        297
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "261": {
      "fn": null,
      "offset": [
        262,
        297
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "263": {
      "fn": null,
      "offset": [
        262,
        297
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "264": {
      "fn": null,
      "offset": [
        262,
        297
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE7"
    },
    "267": {
      "fn": null,
      "offset": [
        262,
        297
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "268": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "270": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "272": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "274": {
      "op": "SHL"
    },
    "275": {
      "op": "SUB"
    },
    "276": {
      "offset": [
        262,
        297
      ],
      "op": "AND",
      "path": "0"
    },
    "277": {
      "fn": null,
      "offset": [
        262,
        297
      ],
      "op": "DUP2",
      "path": "0"
    },
    "278": {
      "fn": null,
      "offset": [
        262,
        297
      ],
      "op": "JUMP",
      "path": "0"
    },
    "279": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        1411,
        2638
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "280": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        1411,
        2638
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11F"
    },
    "283": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        1411,
        2638
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x200"
    },
    "286": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "jump": "i",
      "offset": [
        1411,
        2638
      ],
      "op": "JUMP",
      "path": "0"
    },
    "287": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        1411,
        2638
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "288": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        1411,
        2638
      ],
      "op": "STOP",
      "path": "0"
    },
    "289": {
      "offset": [
        231,
        256
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "290": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        231,
        256
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "292": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        231,
        256
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "293": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        231,
        256
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE7"
    },
    "296": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        231,
        256
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "297": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "299": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "301": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "303": {
      "op": "SHL"
    },
    "304": {
      "op": "SUB"
    },
    "305": {
      "offset": [
        231,
        256
      ],
      "op": "AND",
      "path": "0"
    },
    "306": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        231,
        256
      ],
      "op": "DUP2",
      "path": "0"
    },
    "307": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        231,
        256
      ],
      "op": "JUMP",
      "path": "0"
    },
    "308": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1160,
        1405
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "309": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1160,
        1405
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11F"
    },
    "312": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1160,
        1405
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x142"
    },
    "315": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1160,
        1405
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "316": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1160,
        1405
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "318": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1160,
        1405
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA30"
    },
    "321": {
      "fn": "SimpleArbitrage.withdraw",
      "jump": "i",
      "offset": [
        1160,
        1405
      ],
      "op": "JUMP",
      "path": "0"
    },
    "322": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1160,
        1405
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "323": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1160,
        1405
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FF"
    },
    "326": {
      "fn": "SimpleArbitrage.withdraw",
      "jump": "i",
      "offset": [
        1160,
        1405
      ],
      "op": "JUMP",
      "path": "0"
    },
    "327": {
      "offset": [
        199,
        225
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "328": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        199,
        225
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "330": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        199,
        225
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "331": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        199,
        225
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE7"
    },
    "334": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        199,
        225
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "335": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "337": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "339": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "341": {
      "op": "SHL"
    },
    "342": {
      "op": "SUB"
    },
    "343": {
      "offset": [
        199,
        225
      ],
      "op": "AND",
      "path": "0"
    },
    "344": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        199,
        225
      ],
      "op": "DUP2",
      "path": "0"
    },
    "345": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        199,
        225
      ],
      "op": "JUMP",
      "path": "0"
    },
    "346": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2644,
        3429
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "347": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2644,
        3429
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16D"
    },
    "350": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2644,
        3429
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x168"
    },
    "353": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2644,
        3429
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "354": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2644,
        3429
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "356": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2644,
        3429
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA65"
    },
    "359": {
      "fn": "SimpleArbitrage._swap",
      "jump": "i",
      "offset": [
        2644,
        3429
      ],
      "op": "JUMP",
      "path": "0"
    },
    "360": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2644,
        3429
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "361": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2644,
        3429
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x450"
    },
    "364": {
      "fn": "SimpleArbitrage._swap",
      "jump": "i",
      "offset": [
        2644,
        3429
      ],
      "op": "JUMP",
      "path": "0"
    },
    "365": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2644,
        3429
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "366": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2644,
        3429
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "368": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2644,
        3429
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "369": {
      "op": "SWAP1"
    },
    "370": {
      "op": "DUP2"
    },
    "371": {
      "op": "MSTORE"
    },
    "372": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "374": {
      "op": "ADD"
    },
    "375": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2644,
        3429
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFB"
    },
    "378": {
      "op": "JUMP"
    },
    "379": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5218,
        5649
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "380": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5218,
        5649
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16D"
    },
    "383": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5218,
        5649
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x189"
    },
    "386": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5218,
        5649
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "387": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5218,
        5649
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "389": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5218,
        5649
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAB2"
    },
    "392": {
      "fn": "SimpleArbitrage._getPrice",
      "jump": "i",
      "offset": [
        5218,
        5649
      ],
      "op": "JUMP",
      "path": "0"
    },
    "393": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5218,
        5649
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "394": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5218,
        5649
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x62F"
    },
    "397": {
      "fn": "SimpleArbitrage._getPrice",
      "jump": "i",
      "offset": [
        5218,
        5649
      ],
      "op": "JUMP",
      "path": "0"
    },
    "398": {
      "offset": [
        172,
        192
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "399": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        172,
        192
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "401": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        172,
        192
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "402": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        172,
        192
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE7"
    },
    "405": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        172,
        192
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "406": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "408": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "410": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "412": {
      "op": "SHL"
    },
    "413": {
      "op": "SUB"
    },
    "414": {
      "offset": [
        172,
        192
      ],
      "op": "AND",
      "path": "0"
    },
    "415": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        172,
        192
      ],
      "op": "DUP2",
      "path": "0"
    },
    "416": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        172,
        192
      ],
      "op": "JUMP",
      "path": "0"
    },
    "417": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        3435,
        4631
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "418": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        3435,
        4631
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B4"
    },
    "421": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        3435,
        4631
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AF"
    },
    "424": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        3435,
        4631
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "425": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        3435,
        4631
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "427": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        3435,
        4631
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA30"
    },
    "430": {
      "fn": "SimpleArbitrage._comparePrice",
      "jump": "i",
      "offset": [
        3435,
        4631
      ],
      "op": "JUMP",
      "path": "0"
    },
    "431": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        3435,
        4631
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "432": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        3435,
        4631
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x758"
    },
    "435": {
      "fn": "SimpleArbitrage._comparePrice",
      "jump": "i",
      "offset": [
        3435,
        4631
      ],
      "op": "JUMP",
      "path": "0"
    },
    "436": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        3435,
        4631
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "437": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        3435,
        4631
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "439": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        3435,
        4631
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "440": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        3435,
        4631
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFB"
    },
    "443": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        3435,
        4631
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "444": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        3435,
        4631
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "445": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        3435,
        4631
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB13"
    },
    "448": {
      "fn": "SimpleArbitrage._comparePrice",
      "jump": "i",
      "offset": [
        3435,
        4631
      ],
      "op": "JUMP",
      "path": "0"
    },
    "449": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        915,
        1154
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "450": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        915,
        1154
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11F"
    },
    "453": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        915,
        1154
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1CF"
    },
    "456": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        915,
        1154
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "457": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        915,
        1154
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "459": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        915,
        1154
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA30"
    },
    "462": {
      "fn": "SimpleArbitrage.deposit",
      "jump": "i",
      "offset": [
        915,
        1154
      ],
      "op": "JUMP",
      "path": "0"
    },
    "463": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        915,
        1154
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "464": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        915,
        1154
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x87E"
    },
    "467": {
      "fn": "SimpleArbitrage.deposit",
      "jump": "i",
      "offset": [
        915,
        1154
      ],
      "op": "JUMP",
      "path": "0"
    },
    "468": {
      "offset": [
        347,
        377
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "469": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        347,
        377
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16D"
    },
    "472": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        347,
        377
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "474": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        347,
        377
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "475": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        347,
        377
      ],
      "op": "DUP2",
      "path": "0"
    },
    "476": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        347,
        377
      ],
      "op": "JUMP",
      "path": "0"
    },
    "477": {
      "fn": "SimpleArbitrage._checkIfArbitrageIsProfitable",
      "offset": [
        4637,
        5212
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "478": {
      "fn": "SimpleArbitrage._checkIfArbitrageIsProfitable",
      "offset": [
        4637,
        5212
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F0"
    },
    "481": {
      "fn": "SimpleArbitrage._checkIfArbitrageIsProfitable",
      "offset": [
        4637,
        5212
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1EB"
    },
    "484": {
      "fn": "SimpleArbitrage._checkIfArbitrageIsProfitable",
      "offset": [
        4637,
        5212
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "485": {
      "fn": "SimpleArbitrage._checkIfArbitrageIsProfitable",
      "offset": [
        4637,
        5212
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "487": {
      "fn": "SimpleArbitrage._checkIfArbitrageIsProfitable",
      "offset": [
        4637,
        5212
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB3B"
    },
    "490": {
      "fn": "SimpleArbitrage._checkIfArbitrageIsProfitable",
      "jump": "i",
      "offset": [
        4637,
        5212
      ],
      "op": "JUMP",
      "path": "0"
    },
    "491": {
      "fn": "SimpleArbitrage._checkIfArbitrageIsProfitable",
      "offset": [
        4637,
        5212
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "492": {
      "fn": "SimpleArbitrage._checkIfArbitrageIsProfitable",
      "offset": [
        4637,
        5212
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9CE"
    },
    "495": {
      "fn": "SimpleArbitrage._checkIfArbitrageIsProfitable",
      "jump": "i",
      "offset": [
        4637,
        5212
      ],
      "op": "JUMP",
      "path": "0"
    },
    "496": {
      "fn": "SimpleArbitrage._checkIfArbitrageIsProfitable",
      "offset": [
        4637,
        5212
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "497": {
      "fn": "SimpleArbitrage._checkIfArbitrageIsProfitable",
      "offset": [
        4637,
        5212
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "499": {
      "fn": "SimpleArbitrage._checkIfArbitrageIsProfitable",
      "offset": [
        4637,
        5212
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "500": {
      "op": "SWAP1"
    },
    "501": {
      "op": "ISZERO"
    },
    "502": {
      "op": "ISZERO"
    },
    "503": {
      "op": "DUP2"
    },
    "504": {
      "op": "MSTORE"
    },
    "505": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "507": {
      "op": "ADD"
    },
    "508": {
      "fn": "SimpleArbitrage._checkIfArbitrageIsProfitable",
      "offset": [
        4637,
        5212
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFB"
    },
    "511": {
      "op": "JUMP"
    },
    "512": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        1411,
        2638
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "513": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        1472,
        1487
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "515": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        1472,
        1487
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "516": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        1453,
        1469
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "518": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        1515,
        1538
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x20E"
    },
    "521": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        1472,
        1487
      ],
      "op": "DUP3",
      "path": "0"
    },
    "522": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        1515,
        1528
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x758"
    },
    "525": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "jump": "i",
      "offset": [
        1515,
        1538
      ],
      "op": "JUMP",
      "path": "0"
    },
    "526": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        1515,
        1538
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "527": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        1497,
        1538
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "528": {
      "op": "POP"
    },
    "529": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        1562,
        1574
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "531": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        1552,
        1558
      ],
      "op": "DUP2",
      "path": "0"
    },
    "532": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        1552,
        1574
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "534": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        1552,
        1574
      ],
      "op": "DUP2",
      "path": "0"
    },
    "535": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        1552,
        1574
      ],
      "op": "GT",
      "path": "0"
    },
    "536": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        1552,
        1574
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "537": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        1552,
        1574
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x224"
    },
    "540": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        1552,
        1574
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "541": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        1552,
        1574
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x224"
    },
    "544": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        1552,
        1574
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAFD"
    },
    "547": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "jump": "i",
      "offset": [
        1552,
        1574
      ],
      "op": "JUMP",
      "path": "0"
    },
    "548": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        1552,
        1574
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "549": {
      "branch": 22,
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        1552,
        1574
      ],
      "op": "EQ",
      "path": "0"
    },
    "550": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        1548,
        2632
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "551": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        1548,
        2632
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x288"
    },
    "554": {
      "branch": 22,
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        1548,
        2632
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "555": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        1762,
        1782
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "557": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        1762,
        1782
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "558": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        1762,
        1782
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "560": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        1800,
        1811
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "561": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        1829,
        1839
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "563": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        1829,
        1839
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "564": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        1693,
        1710
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "566": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        1693,
        1710
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "567": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        1713,
        1853
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x252"
    },
    "570": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        1713,
        1853
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "571": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        1736,
        1744
      ],
      "op": "DUP7",
      "path": "0"
    },
    "572": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        1736,
        1744
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "573": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "575": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "577": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "579": {
      "op": "SHL"
    },
    "580": {
      "op": "SUB"
    },
    "581": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        1762,
        1782
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "582": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        1762,
        1782
      ],
      "op": "DUP4",
      "path": "0"
    },
    "583": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        1762,
        1782
      ],
      "op": "AND",
      "path": "0"
    },
    "584": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        1762,
        1782
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "585": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        1800,
        1811
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "586": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        1800,
        1811
      ],
      "op": "DUP3",
      "path": "0"
    },
    "587": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        1800,
        1811
      ],
      "op": "AND",
      "path": "0"
    },
    "588": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        1800,
        1811
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "589": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        1829,
        1839
      ],
      "op": "AND",
      "path": "0"
    },
    "590": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        1713,
        1718
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x450"
    },
    "593": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "jump": "i",
      "offset": [
        1713,
        1853
      ],
      "op": "JUMP",
      "path": "0"
    },
    "594": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        1713,
        1853
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "595": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        1939,
        1961
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "597": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        1939,
        1961
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "598": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        1979,
        1989
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "600": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        1979,
        1989
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "601": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        1939,
        1961
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "603": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        2007,
        2018
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "604": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        1693,
        1853
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "605": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        1693,
        1853
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "606": {
      "op": "POP"
    },
    "607": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        1867,
        1886
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "609": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        1867,
        1886
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "610": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        1889,
        2032
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x27D"
    },
    "613": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        1889,
        2032
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "614": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        1693,
        1853
      ],
      "op": "DUP6",
      "path": "0"
    },
    "615": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        1693,
        1853
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "616": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "618": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "620": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "622": {
      "op": "SHL"
    },
    "623": {
      "op": "SUB"
    },
    "624": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        1939,
        1961
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "625": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        1939,
        1961
      ],
      "op": "DUP3",
      "path": "0"
    },
    "626": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        1939,
        1961
      ],
      "op": "AND",
      "path": "0"
    },
    "627": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        1939,
        1961
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "628": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        1979,
        1989
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "629": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        1979,
        1989
      ],
      "op": "DUP3",
      "path": "0"
    },
    "630": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        1979,
        1989
      ],
      "op": "AND",
      "path": "0"
    },
    "631": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        1979,
        1989
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "632": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        2007,
        2018
      ],
      "op": "AND",
      "path": "0"
    },
    "633": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        1889,
        1894
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x450"
    },
    "636": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "jump": "i",
      "offset": [
        1889,
        2032
      ],
      "op": "JUMP",
      "path": "0"
    },
    "637": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        1889,
        2032
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "638": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        2046,
        2061
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 0,
      "value": "0x5"
    },
    "640": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        2046,
        2075
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "641": {
      "op": "POP"
    },
    "642": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        1548,
        2632
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FB"
    },
    "645": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        1548,
        2632
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "646": {
      "op": "POP"
    },
    "647": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        1548,
        2632
      ],
      "op": "JUMP",
      "path": "0"
    },
    "648": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        1548,
        2632
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "649": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        2106,
        2120
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "651": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        2096,
        2102
      ],
      "op": "DUP2",
      "path": "0"
    },
    "652": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        2096,
        2120
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "654": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        2096,
        2120
      ],
      "op": "DUP2",
      "path": "0"
    },
    "655": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        2096,
        2120
      ],
      "op": "GT",
      "path": "0"
    },
    "656": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        2096,
        2120
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "657": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        2096,
        2120
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x29C"
    },
    "660": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        2096,
        2120
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "661": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        2096,
        2120
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x29C"
    },
    "664": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        2096,
        2120
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAFD"
    },
    "667": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "jump": "i",
      "offset": [
        2096,
        2120
      ],
      "op": "JUMP",
      "path": "0"
    },
    "668": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        2096,
        2120
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "669": {
      "branch": 23,
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        2096,
        2120
      ],
      "op": "EQ",
      "path": "0"
    },
    "670": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        2092,
        2632
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "671": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        2092,
        2632
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FB"
    },
    "674": {
      "branch": 23,
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        2092,
        2632
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "675": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        2308,
        2330
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "677": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        2308,
        2330
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "678": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        2308,
        2330
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "680": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        2348,
        2359
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "681": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        2377,
        2387
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "683": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        2377,
        2387
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "684": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        2239,
        2256
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "686": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        2239,
        2256
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "687": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        2259,
        2401
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CA"
    },
    "690": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        2259,
        2401
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "691": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        2282,
        2290
      ],
      "op": "DUP7",
      "path": "0"
    },
    "692": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        2282,
        2290
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "693": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "695": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "697": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "699": {
      "op": "SHL"
    },
    "700": {
      "op": "SUB"
    },
    "701": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        2308,
        2330
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "702": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        2308,
        2330
      ],
      "op": "DUP4",
      "path": "0"
    },
    "703": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        2308,
        2330
      ],
      "op": "AND",
      "path": "0"
    },
    "704": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        2308,
        2330
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "705": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        2348,
        2359
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "706": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        2348,
        2359
      ],
      "op": "DUP3",
      "path": "0"
    },
    "707": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        2348,
        2359
      ],
      "op": "AND",
      "path": "0"
    },
    "708": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        2348,
        2359
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "709": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        2377,
        2387
      ],
      "op": "AND",
      "path": "0"
    },
    "710": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        2259,
        2264
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x450"
    },
    "713": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "jump": "i",
      "offset": [
        2259,
        2401
      ],
      "op": "JUMP",
      "path": "0"
    },
    "714": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        2259,
        2401
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "715": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        2487,
        2507
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "717": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        2487,
        2507
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "718": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        2525,
        2535
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "720": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        2525,
        2535
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "721": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        2487,
        2507
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "723": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        2553,
        2564
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "724": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        2239,
        2401
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "725": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        2239,
        2401
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "726": {
      "op": "POP"
    },
    "727": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        2415,
        2434
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "729": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        2415,
        2434
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "730": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        2437,
        2578
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2F5"
    },
    "733": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        2437,
        2578
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "734": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        2239,
        2401
      ],
      "op": "DUP6",
      "path": "0"
    },
    "735": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        2239,
        2401
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "736": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "738": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "740": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "742": {
      "op": "SHL"
    },
    "743": {
      "op": "SUB"
    },
    "744": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        2487,
        2507
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "745": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        2487,
        2507
      ],
      "op": "DUP3",
      "path": "0"
    },
    "746": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        2487,
        2507
      ],
      "op": "AND",
      "path": "0"
    },
    "747": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        2487,
        2507
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "748": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        2525,
        2535
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "749": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        2525,
        2535
      ],
      "op": "DUP3",
      "path": "0"
    },
    "750": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        2525,
        2535
      ],
      "op": "AND",
      "path": "0"
    },
    "751": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        2525,
        2535
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "752": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        2553,
        2564
      ],
      "op": "AND",
      "path": "0"
    },
    "753": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        2437,
        2442
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x450"
    },
    "756": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "jump": "i",
      "offset": [
        2437,
        2578
      ],
      "op": "JUMP",
      "path": "0"
    },
    "757": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        2437,
        2578
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "758": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        2592,
        2607
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 1,
      "value": "0x5"
    },
    "760": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        2592,
        2621
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "761": {
      "op": "POP"
    },
    "762": {
      "op": "POP"
    },
    "763": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        2092,
        2632
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "764": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        1443,
        2638
      ],
      "op": "POP",
      "path": "0"
    },
    "765": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "offset": [
        1443,
        2638
      ],
      "op": "POP",
      "path": "0"
    },
    "766": {
      "fn": "SimpleArbitrage.makeArbitrage",
      "jump": "o",
      "offset": [
        1411,
        2638
      ],
      "op": "JUMP",
      "path": "0"
    },
    "767": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1160,
        1405
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "768": {
      "offset": [
        857,
        862
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "770": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        857,
        862
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "771": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "773": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "775": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "777": {
      "op": "SHL"
    },
    "778": {
      "op": "SUB"
    },
    "779": {
      "offset": [
        857,
        862
      ],
      "op": "AND",
      "path": "0"
    },
    "780": {
      "offset": [
        843,
        853
      ],
      "op": "CALLER",
      "path": "0"
    },
    "781": {
      "offset": [
        843,
        862
      ],
      "op": "EQ",
      "path": "0"
    },
    "782": {
      "offset": [
        835,
        891
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x359"
    },
    "785": {
      "offset": [
        835,
        891
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "786": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        835,
        891
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "788": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        835,
        891
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "789": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "793": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "795": {
      "op": "SHL"
    },
    "796": {
      "offset": [
        835,
        891
      ],
      "op": "DUP2",
      "path": "0"
    },
    "797": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        835,
        891
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "798": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "800": {
      "offset": [
        835,
        891
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "802": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        835,
        891
      ],
      "op": "DUP3",
      "path": "0"
    },
    "803": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        835,
        891
      ],
      "op": "ADD",
      "path": "0"
    },
    "804": {
      "op": "MSTORE"
    },
    "805": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "807": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "809": {
      "op": "DUP3"
    },
    "810": {
      "op": "ADD"
    },
    "811": {
      "op": "MSTORE"
    },
    "812": {
      "op": "PUSH24",
      "value": "0x6F6E6C79206F776E65722063616E2063616C6C2074686973"
    },
    "837": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "839": {
      "op": "SHL"
    },
    "840": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "842": {
      "op": "DUP3"
    },
    "843": {
      "op": "ADD"
    },
    "844": {
      "op": "MSTORE"
    },
    "845": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "847": {
      "op": "ADD"
    },
    "848": {
      "offset": [
        835,
        891
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "849": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        835,
        891
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "851": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        835,
        891
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "852": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        835,
        891
      ],
      "op": "DUP1",
      "path": "0"
    },
    "853": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        835,
        891
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "854": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        835,
        891
      ],
      "op": "SUB",
      "path": "0"
    },
    "855": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        835,
        891
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "856": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        835,
        891
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "857": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        835,
        891
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "858": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1239,
        1254
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 2,
      "value": "0x5"
    },
    "860": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1239,
        1254
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "861": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1229,
        1235
      ],
      "op": "DUP2",
      "path": "0"
    },
    "862": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1229,
        1254
      ],
      "op": "GT",
      "path": "0"
    },
    "863": {
      "branch": 24,
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1229,
        1254
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "864": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1221,
        1286
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3AB"
    },
    "867": {
      "branch": 24,
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1221,
        1286
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "868": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1221,
        1286
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "870": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1221,
        1286
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "871": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "875": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "877": {
      "op": "SHL"
    },
    "878": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1221,
        1286
      ],
      "op": "DUP2",
      "path": "0"
    },
    "879": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1221,
        1286
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "880": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "882": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1221,
        1286
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "884": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1221,
        1286
      ],
      "op": "DUP3",
      "path": "0"
    },
    "885": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1221,
        1286
      ],
      "op": "ADD",
      "path": "0"
    },
    "886": {
      "op": "MSTORE"
    },
    "887": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "889": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "891": {
      "op": "DUP3"
    },
    "892": {
      "op": "ADD"
    },
    "893": {
      "op": "MSTORE"
    },
    "894": {
      "op": "PUSH32",
      "value": "0x4E6F7420656E6F75676820616D6F756E74206465706F73697465640000000000"
    },
    "927": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "929": {
      "op": "DUP3"
    },
    "930": {
      "op": "ADD"
    },
    "931": {
      "op": "MSTORE"
    },
    "932": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "934": {
      "op": "ADD"
    },
    "935": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1221,
        1286
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x350"
    },
    "938": {
      "op": "JUMP"
    },
    "939": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1221,
        1286
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "940": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1303,
        1314
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 3,
      "value": "0x1"
    },
    "942": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1303,
        1314
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "943": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1296,
        1363
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "945": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1296,
        1363
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "946": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "951": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "953": {
      "op": "SHL"
    },
    "954": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1296,
        1363
      ],
      "op": "DUP2",
      "path": "0"
    },
    "955": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1296,
        1363
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "956": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1337,
        1341
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "957": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1296,
        1363
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "959": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1296,
        1363
      ],
      "op": "DUP3",
      "path": "0"
    },
    "960": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1296,
        1363
      ],
      "op": "ADD",
      "path": "0"
    },
    "961": {
      "op": "MSTORE"
    },
    "962": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1344,
        1354
      ],
      "op": "CALLER",
      "path": "0"
    },
    "963": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "965": {
      "op": "DUP3"
    },
    "966": {
      "op": "ADD"
    },
    "967": {
      "op": "MSTORE"
    },
    "968": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "970": {
      "op": "DUP2"
    },
    "971": {
      "op": "ADD"
    },
    "972": {
      "op": "DUP4"
    },
    "973": {
      "op": "SWAP1"
    },
    "974": {
      "op": "MSTORE"
    },
    "975": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "977": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "979": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "981": {
      "op": "SHL"
    },
    "982": {
      "op": "SUB"
    },
    "983": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1303,
        1314
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "984": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1303,
        1314
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "985": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1303,
        1314
      ],
      "op": "AND",
      "path": "0"
    },
    "986": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1303,
        1314
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "987": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1296,
        1328
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x23B872DD"
    },
    "992": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1296,
        1328
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "993": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "995": {
      "op": "ADD"
    },
    "996": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1296,
        1363
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "998": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1296,
        1363
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1000": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1296,
        1363
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1001": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1296,
        1363
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1002": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1296,
        1363
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1003": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1296,
        1363
      ],
      "op": "SUB",
      "path": "0"
    },
    "1004": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1296,
        1363
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1005": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1296,
        1363
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1007": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1296,
        1363
      ],
      "op": "DUP8",
      "path": "0"
    },
    "1008": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1296,
        1363
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1009": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1296,
        1363
      ],
      "op": "EXTCODESIZE",
      "path": "0"
    },
    "1010": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1296,
        1363
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1011": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1296,
        1363
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1012": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1296,
        1363
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1013": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1296,
        1363
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3FD"
    },
    "1016": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1296,
        1363
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1017": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1296,
        1363
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1019": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1296,
        1363
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1020": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1296,
        1363
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1021": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1296,
        1363
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1022": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1296,
        1363
      ],
      "op": "POP",
      "path": "0"
    },
    "1023": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1296,
        1363
      ],
      "op": "GAS",
      "path": "0"
    },
    "1024": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1296,
        1363
      ],
      "op": "CALL",
      "path": "0"
    },
    "1025": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1296,
        1363
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1026": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1296,
        1363
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1027": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1296,
        1363
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1028": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1296,
        1363
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x411"
    },
    "1031": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1296,
        1363
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1032": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1296,
        1363
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1033": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1296,
        1363
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1035": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1296,
        1363
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1036": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1296,
        1363
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "1037": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1296,
        1363
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1038": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1296,
        1363
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1040": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1296,
        1363
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1041": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1296,
        1363
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1042": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1296,
        1363
      ],
      "op": "POP",
      "path": "0"
    },
    "1043": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1296,
        1363
      ],
      "op": "POP",
      "path": "0"
    },
    "1044": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1296,
        1363
      ],
      "op": "POP",
      "path": "0"
    },
    "1045": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1296,
        1363
      ],
      "op": "POP",
      "path": "0"
    },
    "1046": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1296,
        1363
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1048": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1296,
        1363
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1049": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1296,
        1363
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1050": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1296,
        1363
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1052": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1296,
        1363
      ],
      "op": "NOT",
      "path": "0"
    },
    "1053": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1296,
        1363
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1055": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1296,
        1363
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1056": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1296,
        1363
      ],
      "op": "ADD",
      "path": "0"
    },
    "1057": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1296,
        1363
      ],
      "op": "AND",
      "path": "0"
    },
    "1058": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1296,
        1363
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1059": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1296,
        1363
      ],
      "op": "ADD",
      "path": "0"
    },
    "1060": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1296,
        1363
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1061": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1296,
        1363
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1063": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1296,
        1363
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1064": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1296,
        1363
      ],
      "op": "POP",
      "path": "0"
    },
    "1065": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1296,
        1363
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1066": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1296,
        1363
      ],
      "op": "ADD",
      "path": "0"
    },
    "1067": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1296,
        1363
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1068": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1296,
        1363
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x435"
    },
    "1071": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1296,
        1363
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1072": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1296,
        1363
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1073": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1296,
        1363
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB67"
    },
    "1076": {
      "fn": "SimpleArbitrage.withdraw",
      "jump": "i",
      "offset": [
        1296,
        1363
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1077": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1296,
        1363
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1078": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1296,
        1363
      ],
      "op": "POP",
      "path": "0"
    },
    "1079": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1392,
        1398
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 4
    },
    "1080": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1373,
        1388
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "1082": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1373,
        1388
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1084": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1373,
        1398
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1085": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1373,
        1398
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1086": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1373,
        1398
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1087": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1373,
        1398
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x448"
    },
    "1090": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1373,
        1398
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1091": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1373,
        1398
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1092": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1373,
        1398
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB9F"
    },
    "1095": {
      "fn": "SimpleArbitrage.withdraw",
      "jump": "i",
      "offset": [
        1373,
        1398
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1096": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1373,
        1398
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1097": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1373,
        1398
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1098": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1373,
        1398
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1099": {
      "fn": "SimpleArbitrage.withdraw",
      "offset": [
        1373,
        1398
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1100": {
      "op": "POP"
    },
    "1101": {
      "op": "POP"
    },
    "1102": {
      "op": "POP"
    },
    "1103": {
      "fn": "SimpleArbitrage.withdraw",
      "jump": "o",
      "offset": [
        1160,
        1405
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1104": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2644,
        3429
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1105": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2812,
        2863
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 5,
      "value": "0x40"
    },
    "1107": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2812,
        2863
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1108": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "1113": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1115": {
      "op": "SHL"
    },
    "1116": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2812,
        2863
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1117": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2812,
        2863
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1118": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1120": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1122": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1124": {
      "op": "SHL"
    },
    "1125": {
      "op": "SUB"
    },
    "1126": {
      "op": "DUP5"
    },
    "1127": {
      "op": "DUP2"
    },
    "1128": {
      "op": "AND"
    },
    "1129": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2812,
        2863
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1131": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2812,
        2863
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1132": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2812,
        2863
      ],
      "op": "ADD",
      "path": "0"
    },
    "1133": {
      "op": "MSTORE"
    },
    "1134": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1136": {
      "op": "DUP3"
    },
    "1137": {
      "op": "ADD"
    },
    "1138": {
      "op": "DUP7"
    },
    "1139": {
      "op": "SWAP1"
    },
    "1140": {
      "op": "MSTORE"
    },
    "1141": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2793,
        2800
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1143": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2793,
        2800
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1144": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2812,
        2838
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1145": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2812,
        2838
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1146": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2812,
        2838
      ],
      "op": "AND",
      "path": "0"
    },
    "1147": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2812,
        2838
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1148": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2812,
        2838
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x95EA7B3"
    },
    "1153": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2812,
        2838
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1154": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1156": {
      "op": "ADD"
    },
    "1157": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2812,
        2863
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1159": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2812,
        2863
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1161": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2812,
        2863
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1162": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2812,
        2863
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1163": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2812,
        2863
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1164": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2812,
        2863
      ],
      "op": "SUB",
      "path": "0"
    },
    "1165": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2812,
        2863
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1166": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2812,
        2863
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1168": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2812,
        2863
      ],
      "op": "DUP8",
      "path": "0"
    },
    "1169": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2812,
        2863
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1170": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2812,
        2863
      ],
      "op": "EXTCODESIZE",
      "path": "0"
    },
    "1171": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2812,
        2863
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1172": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2812,
        2863
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1173": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2812,
        2863
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1174": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2812,
        2863
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x49E"
    },
    "1177": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2812,
        2863
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1178": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2812,
        2863
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1180": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2812,
        2863
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1181": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2812,
        2863
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1182": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2812,
        2863
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1183": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2812,
        2863
      ],
      "op": "POP",
      "path": "0"
    },
    "1184": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2812,
        2863
      ],
      "op": "GAS",
      "path": "0"
    },
    "1185": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2812,
        2863
      ],
      "op": "CALL",
      "path": "0"
    },
    "1186": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2812,
        2863
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1187": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2812,
        2863
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1188": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2812,
        2863
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1189": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2812,
        2863
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4B2"
    },
    "1192": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2812,
        2863
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1193": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2812,
        2863
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1194": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2812,
        2863
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1196": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2812,
        2863
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1197": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2812,
        2863
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "1198": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2812,
        2863
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1199": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2812,
        2863
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1201": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2812,
        2863
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1202": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2812,
        2863
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1203": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2812,
        2863
      ],
      "op": "POP",
      "path": "0"
    },
    "1204": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2812,
        2863
      ],
      "op": "POP",
      "path": "0"
    },
    "1205": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2812,
        2863
      ],
      "op": "POP",
      "path": "0"
    },
    "1206": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2812,
        2863
      ],
      "op": "POP",
      "path": "0"
    },
    "1207": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2812,
        2863
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1209": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2812,
        2863
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1210": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2812,
        2863
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1211": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2812,
        2863
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1213": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2812,
        2863
      ],
      "op": "NOT",
      "path": "0"
    },
    "1214": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2812,
        2863
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1216": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2812,
        2863
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1217": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2812,
        2863
      ],
      "op": "ADD",
      "path": "0"
    },
    "1218": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2812,
        2863
      ],
      "op": "AND",
      "path": "0"
    },
    "1219": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2812,
        2863
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1220": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2812,
        2863
      ],
      "op": "ADD",
      "path": "0"
    },
    "1221": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2812,
        2863
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1222": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2812,
        2863
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1224": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2812,
        2863
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1225": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2812,
        2863
      ],
      "op": "POP",
      "path": "0"
    },
    "1226": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2812,
        2863
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1227": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2812,
        2863
      ],
      "op": "ADD",
      "path": "0"
    },
    "1228": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2812,
        2863
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1229": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2812,
        2863
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4D6"
    },
    "1232": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2812,
        2863
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1233": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2812,
        2863
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1234": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2812,
        2863
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB67"
    },
    "1237": {
      "fn": "SimpleArbitrage._swap",
      "jump": "i",
      "offset": [
        2812,
        2863
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1238": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2812,
        2863
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1239": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2812,
        2863
      ],
      "op": "POP",
      "path": "0"
    },
    "1240": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2874,
        2894
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1242": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3022,
        3025
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x64"
    },
    "1244": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2898,
        3013
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4E7"
    },
    "1247": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2921,
        2934
      ],
      "op": "DUP7",
      "path": "0"
    },
    "1248": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2948,
        2958
      ],
      "op": "DUP7",
      "path": "0"
    },
    "1249": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2972,
        2981
      ],
      "op": "DUP7",
      "path": "0"
    },
    "1250": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2995,
        3003
      ],
      "op": "DUP11",
      "path": "0"
    },
    "1251": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2898,
        2907
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x62F"
    },
    "1254": {
      "fn": "SimpleArbitrage._swap",
      "jump": "i",
      "offset": [
        2898,
        3013
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1255": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2898,
        3013
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1256": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2898,
        3018
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4F2"
    },
    "1259": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2898,
        3018
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1260": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3016,
        3018
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5F"
    },
    "1262": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2898,
        3018
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBB6"
    },
    "1265": {
      "fn": "SimpleArbitrage._swap",
      "jump": "i",
      "offset": [
        2898,
        3018
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1266": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2898,
        3018
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1267": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2897,
        3025
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4FC"
    },
    "1270": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2897,
        3025
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1271": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2897,
        3025
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1272": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2897,
        3025
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBD5"
    },
    "1275": {
      "fn": "SimpleArbitrage._swap",
      "jump": "i",
      "offset": [
        2897,
        3025
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1276": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2897,
        3025
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1277": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3060,
        3076
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1279": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3060,
        3076
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1280": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3060,
        3076
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1281": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3074,
        3075
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1283": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3060,
        3076
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1284": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3060,
        3076
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1285": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3060,
        3076
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1286": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3060,
        3076
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "1288": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3060,
        3076
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1289": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3060,
        3076
      ],
      "op": "ADD",
      "path": "0"
    },
    "1290": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3060,
        3076
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1291": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3060,
        3076
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1292": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2874,
        3025
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1293": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2874,
        3025
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1294": {
      "op": "POP"
    },
    "1295": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3036,
        3057
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1297": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3036,
        3057
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1298": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3060,
        3076
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1299": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3060,
        3076
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1300": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3060,
        3076
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1302": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3060,
        3076
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1303": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3060,
        3076
      ],
      "op": "ADD",
      "path": "0"
    },
    "1304": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3060,
        3076
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1305": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3060,
        3076
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1306": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3060,
        3076
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1307": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3060,
        3076
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1308": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3060,
        3076
      ],
      "op": "CALLDATACOPY",
      "path": "0"
    },
    "1309": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3060,
        3076
      ],
      "op": "ADD",
      "path": "0"
    },
    "1310": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3060,
        3076
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1311": {
      "op": "POP"
    },
    "1312": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3060,
        3076
      ],
      "op": "POP",
      "path": "0"
    },
    "1313": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3036,
        3076
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1314": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3036,
        3076
      ],
      "op": "POP",
      "path": "0"
    },
    "1315": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3096,
        3106
      ],
      "op": "DUP5",
      "path": "0",
      "statement": 6
    },
    "1316": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3086,
        3090
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1317": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3091,
        3092
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1319": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3086,
        3093
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1320": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3086,
        3093
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1321": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3086,
        3093
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1322": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3086,
        3093
      ],
      "op": "LT",
      "path": "0"
    },
    "1323": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3086,
        3093
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x536"
    },
    "1326": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3086,
        3093
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1327": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3086,
        3093
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x536"
    },
    "1330": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3086,
        3093
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC0D"
    },
    "1333": {
      "fn": "SimpleArbitrage._swap",
      "jump": "i",
      "offset": [
        3086,
        3093
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1334": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3086,
        3093
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1335": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3086,
        3093
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1337": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3086,
        3093
      ],
      "op": "MUL",
      "path": "0"
    },
    "1338": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3086,
        3093
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1340": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3086,
        3093
      ],
      "op": "ADD",
      "path": "0"
    },
    "1341": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3086,
        3093
      ],
      "op": "ADD",
      "path": "0"
    },
    "1342": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3086,
        3106
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1343": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1345": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1347": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1349": {
      "op": "SHL"
    },
    "1350": {
      "op": "SUB"
    },
    "1351": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3086,
        3106
      ],
      "op": "AND",
      "path": "0"
    },
    "1352": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3086,
        3106
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1353": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3086,
        3106
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1354": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1356": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1358": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1360": {
      "op": "SHL"
    },
    "1361": {
      "op": "SUB"
    },
    "1362": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3086,
        3106
      ],
      "op": "AND",
      "path": "0"
    },
    "1363": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3086,
        3106
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1364": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3086,
        3106
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1365": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3086,
        3106
      ],
      "op": "POP",
      "path": "0"
    },
    "1366": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3086,
        3106
      ],
      "op": "POP",
      "path": "0"
    },
    "1367": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3126,
        3135
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 7
    },
    "1368": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3116,
        3120
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1369": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3121,
        3122
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1371": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3116,
        3123
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1372": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3116,
        3123
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1373": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3116,
        3123
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1374": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3116,
        3123
      ],
      "op": "LT",
      "path": "0"
    },
    "1375": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3116,
        3123
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x56A"
    },
    "1378": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3116,
        3123
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1379": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3116,
        3123
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x56A"
    },
    "1382": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3116,
        3123
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC0D"
    },
    "1385": {
      "fn": "SimpleArbitrage._swap",
      "jump": "i",
      "offset": [
        3116,
        3123
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1386": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3116,
        3123
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1387": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1389": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1391": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1393": {
      "op": "SHL"
    },
    "1394": {
      "op": "SUB"
    },
    "1395": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3116,
        3135
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1396": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3116,
        3135
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1397": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3116,
        3135
      ],
      "op": "AND",
      "path": "0"
    },
    "1398": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3116,
        3123
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1400": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3116,
        3123
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1401": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3116,
        3123
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1402": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3116,
        3123
      ],
      "op": "MUL",
      "path": "0"
    },
    "1403": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3116,
        3123
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1404": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3116,
        3123
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1405": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3116,
        3123
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1406": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3116,
        3123
      ],
      "op": "ADD",
      "path": "0"
    },
    "1407": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3116,
        3123
      ],
      "op": "ADD",
      "path": "0"
    },
    "1408": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3116,
        3135
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1409": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3166,
        3393
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1411": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3166,
        3393
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1412": {
      "op": "PUSH4",
      "value": "0x38ED1739"
    },
    "1417": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1419": {
      "op": "SHL"
    },
    "1420": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3166,
        3393
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1421": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3166,
        3393
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1422": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3146,
        3163
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1424": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3146,
        3163
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1425": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3166,
        3237
      ],
      "op": "DUP9",
      "path": "0"
    },
    "1426": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3166,
        3237
      ],
      "op": "AND",
      "path": "0"
    },
    "1427": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3166,
        3237
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1428": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3166,
        3237
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x38ED1739"
    },
    "1433": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3166,
        3237
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1434": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3166,
        3393
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5AF"
    },
    "1437": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3166,
        3393
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1438": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3255,
        3263
      ],
      "op": "DUP12",
      "path": "0"
    },
    "1439": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3255,
        3263
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1440": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3281,
        3293
      ],
      "op": "DUP8",
      "path": "0"
    },
    "1441": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3281,
        3293
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1442": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3311,
        3315
      ],
      "op": "DUP8",
      "path": "0"
    },
    "1443": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3311,
        3315
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1444": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3341,
        3345
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "1445": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3341,
        3345
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1446": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3364,
        3379
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "1447": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3364,
        3379
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1448": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3166,
        3393
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1450": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3166,
        3393
      ],
      "op": "ADD",
      "path": "0"
    },
    "1451": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3166,
        3393
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC67"
    },
    "1454": {
      "fn": "SimpleArbitrage._swap",
      "jump": "i",
      "offset": [
        3166,
        3393
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1455": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3166,
        3393
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1456": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3166,
        3393
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1458": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3166,
        3393
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1460": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3166,
        3393
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1461": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3166,
        3393
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1462": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3166,
        3393
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1463": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3166,
        3393
      ],
      "op": "SUB",
      "path": "0"
    },
    "1464": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3166,
        3393
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1465": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3166,
        3393
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1467": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3166,
        3393
      ],
      "op": "DUP8",
      "path": "0"
    },
    "1468": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3166,
        3393
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1469": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3166,
        3393
      ],
      "op": "EXTCODESIZE",
      "path": "0"
    },
    "1470": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3166,
        3393
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1471": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3166,
        3393
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1472": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3166,
        3393
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1473": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3166,
        3393
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5C9"
    },
    "1476": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3166,
        3393
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1477": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3166,
        3393
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1479": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3166,
        3393
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1480": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3166,
        3393
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1481": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3166,
        3393
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1482": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3166,
        3393
      ],
      "op": "POP",
      "path": "0"
    },
    "1483": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3166,
        3393
      ],
      "op": "GAS",
      "path": "0"
    },
    "1484": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3166,
        3393
      ],
      "op": "CALL",
      "path": "0"
    },
    "1485": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3166,
        3393
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1486": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3166,
        3393
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1487": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3166,
        3393
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1488": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3166,
        3393
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5DD"
    },
    "1491": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3166,
        3393
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1492": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3166,
        3393
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1493": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3166,
        3393
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1495": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3166,
        3393
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1496": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3166,
        3393
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "1497": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3166,
        3393
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1498": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3166,
        3393
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1500": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3166,
        3393
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1501": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3166,
        3393
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1502": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3166,
        3393
      ],
      "op": "POP",
      "path": "0"
    },
    "1503": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3166,
        3393
      ],
      "op": "POP",
      "path": "0"
    },
    "1504": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3166,
        3393
      ],
      "op": "POP",
      "path": "0"
    },
    "1505": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3166,
        3393
      ],
      "op": "POP",
      "path": "0"
    },
    "1506": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3166,
        3393
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1508": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3166,
        3393
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1509": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3166,
        3393
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1510": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3166,
        3393
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1512": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3166,
        3393
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1513": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3166,
        3393
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "1514": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3166,
        3393
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1516": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3166,
        3393
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1517": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3166,
        3393
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1518": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3166,
        3393
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1519": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3166,
        3393
      ],
      "op": "ADD",
      "path": "0"
    },
    "1520": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1522": {
      "op": "NOT"
    },
    "1523": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3166,
        3393
      ],
      "op": "AND",
      "path": "0"
    },
    "1524": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3166,
        3393
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1525": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3166,
        3393
      ],
      "op": "ADD",
      "path": "0"
    },
    "1526": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3166,
        3393
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1528": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3166,
        3393
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1529": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3166,
        3393
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x605"
    },
    "1532": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3166,
        3393
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1533": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3166,
        3393
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1534": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3166,
        3393
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1535": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3166,
        3393
      ],
      "op": "ADD",
      "path": "0"
    },
    "1536": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3166,
        3393
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1537": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3166,
        3393
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCA3"
    },
    "1540": {
      "fn": "SimpleArbitrage._swap",
      "jump": "i",
      "offset": [
        3166,
        3393
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1541": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3166,
        3393
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1542": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3394,
        3395
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1544": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3166,
        3396
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1545": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3166,
        3396
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1546": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3166,
        3396
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1547": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3166,
        3396
      ],
      "op": "LT",
      "path": "0"
    },
    "1548": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3166,
        3396
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x617"
    },
    "1551": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3166,
        3396
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1552": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3166,
        3396
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x617"
    },
    "1555": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3166,
        3396
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC0D"
    },
    "1558": {
      "fn": "SimpleArbitrage._swap",
      "jump": "i",
      "offset": [
        3166,
        3396
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1559": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3166,
        3396
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1560": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3166,
        3396
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1562": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3166,
        3396
      ],
      "op": "MUL",
      "path": "0"
    },
    "1563": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3166,
        3396
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1565": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3166,
        3396
      ],
      "op": "ADD",
      "path": "0"
    },
    "1566": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3166,
        3396
      ],
      "op": "ADD",
      "path": "0"
    },
    "1567": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3166,
        3396
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1568": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3146,
        3396
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1569": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3146,
        3396
      ],
      "op": "POP",
      "path": "0"
    },
    "1570": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3413,
        3422
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 8
    },
    "1571": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3406,
        3422
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1572": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3406,
        3422
      ],
      "op": "POP",
      "path": "0"
    },
    "1573": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3406,
        3422
      ],
      "op": "POP",
      "path": "0"
    },
    "1574": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3406,
        3422
      ],
      "op": "POP",
      "path": "0"
    },
    "1575": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        3406,
        3422
      ],
      "op": "POP",
      "path": "0"
    },
    "1576": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2644,
        3429
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "1577": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2644,
        3429
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1578": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2644,
        3429
      ],
      "op": "POP",
      "path": "0"
    },
    "1579": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2644,
        3429
      ],
      "op": "POP",
      "path": "0"
    },
    "1580": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2644,
        3429
      ],
      "op": "POP",
      "path": "0"
    },
    "1581": {
      "fn": "SimpleArbitrage._swap",
      "offset": [
        2644,
        3429
      ],
      "op": "POP",
      "path": "0"
    },
    "1582": {
      "fn": "SimpleArbitrage._swap",
      "jump": "o",
      "offset": [
        2644,
        3429
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1583": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5218,
        5649
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1584": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5418,
        5434
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1586": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5418,
        5434
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1587": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5418,
        5434
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1588": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5432,
        5433
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1590": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5418,
        5434
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1591": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5418,
        5434
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1592": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5418,
        5434
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1593": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5418,
        5434
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "1595": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5418,
        5434
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1596": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5418,
        5434
      ],
      "op": "ADD",
      "path": "0"
    },
    "1597": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5418,
        5434
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1598": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5418,
        5434
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1599": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5374,
        5381
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1601": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5374,
        5381
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1602": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5374,
        5381
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1603": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5374,
        5381
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1604": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5418,
        5434
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1605": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5432,
        5433
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1606": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5418,
        5434
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1608": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5418,
        5434
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1609": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5418,
        5434
      ],
      "op": "ADD",
      "path": "0"
    },
    "1610": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5418,
        5434
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1611": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5418,
        5434
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1612": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5418,
        5434
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1613": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5418,
        5434
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1614": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5418,
        5434
      ],
      "op": "CALLDATACOPY",
      "path": "0"
    },
    "1615": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5418,
        5434
      ],
      "op": "ADD",
      "path": "0"
    },
    "1616": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5418,
        5434
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1617": {
      "op": "POP"
    },
    "1618": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5418,
        5434
      ],
      "op": "POP",
      "path": "0"
    },
    "1619": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5393,
        5434
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1620": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5393,
        5434
      ],
      "op": "POP",
      "path": "0"
    },
    "1621": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5455,
        5465
      ],
      "op": "DUP5",
      "path": "0",
      "statement": 9
    },
    "1622": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5444,
        5449
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1623": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5450,
        5451
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1625": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5444,
        5452
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1626": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5444,
        5452
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1627": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5444,
        5452
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1628": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5444,
        5452
      ],
      "op": "LT",
      "path": "0"
    },
    "1629": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5444,
        5452
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x668"
    },
    "1632": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5444,
        5452
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1633": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5444,
        5452
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x668"
    },
    "1636": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5444,
        5452
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC0D"
    },
    "1639": {
      "fn": "SimpleArbitrage._getPrice",
      "jump": "i",
      "offset": [
        5444,
        5452
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1640": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5444,
        5452
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1641": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5444,
        5452
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1643": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5444,
        5452
      ],
      "op": "MUL",
      "path": "0"
    },
    "1644": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5444,
        5452
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1646": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5444,
        5452
      ],
      "op": "ADD",
      "path": "0"
    },
    "1647": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5444,
        5452
      ],
      "op": "ADD",
      "path": "0"
    },
    "1648": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5444,
        5465
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1649": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1651": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1653": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1655": {
      "op": "SHL"
    },
    "1656": {
      "op": "SUB"
    },
    "1657": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5444,
        5465
      ],
      "op": "AND",
      "path": "0"
    },
    "1658": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5444,
        5465
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1659": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5444,
        5465
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1660": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1662": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1664": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1666": {
      "op": "SHL"
    },
    "1667": {
      "op": "SUB"
    },
    "1668": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5444,
        5465
      ],
      "op": "AND",
      "path": "0"
    },
    "1669": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5444,
        5465
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1670": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5444,
        5465
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1671": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5444,
        5465
      ],
      "op": "POP",
      "path": "0"
    },
    "1672": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5444,
        5465
      ],
      "op": "POP",
      "path": "0"
    },
    "1673": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5486,
        5495
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 10
    },
    "1674": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5475,
        5480
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1675": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5481,
        5482
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1677": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5475,
        5483
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1678": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5475,
        5483
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1679": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5475,
        5483
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1680": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5475,
        5483
      ],
      "op": "LT",
      "path": "0"
    },
    "1681": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5475,
        5483
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x69C"
    },
    "1684": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5475,
        5483
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1685": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5475,
        5483
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x69C"
    },
    "1688": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5475,
        5483
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC0D"
    },
    "1691": {
      "fn": "SimpleArbitrage._getPrice",
      "jump": "i",
      "offset": [
        5475,
        5483
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1692": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5475,
        5483
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1693": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1695": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1697": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1699": {
      "op": "SHL"
    },
    "1700": {
      "op": "SUB"
    },
    "1701": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5475,
        5495
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1702": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5475,
        5495
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1703": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5475,
        5495
      ],
      "op": "AND",
      "path": "0"
    },
    "1704": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5475,
        5483
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1706": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5475,
        5483
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1707": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5475,
        5483
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1708": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5475,
        5483
      ],
      "op": "MUL",
      "path": "0"
    },
    "1709": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5475,
        5483
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1710": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5475,
        5483
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1711": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5475,
        5483
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1712": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5475,
        5483
      ],
      "op": "ADD",
      "path": "0"
    },
    "1713": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5475,
        5483
      ],
      "op": "ADD",
      "path": "0"
    },
    "1714": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5475,
        5495
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1715": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5521,
        5617
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1717": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5521,
        5617
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1718": {
      "op": "PUSH4",
      "value": "0xD06CA61F"
    },
    "1723": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1725": {
      "op": "SHL"
    },
    "1726": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5521,
        5617
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1727": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5521,
        5617
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1728": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5505,
        5518
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1730": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5505,
        5518
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1731": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5521,
        5568
      ],
      "op": "DUP9",
      "path": "0"
    },
    "1732": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5521,
        5568
      ],
      "op": "AND",
      "path": "0"
    },
    "1733": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5521,
        5568
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1734": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5521,
        5568
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xD06CA61F"
    },
    "1739": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5521,
        5568
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1740": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5521,
        5617
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6DB"
    },
    "1743": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5521,
        5617
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1744": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5582,
        5588
      ],
      "op": "DUP8",
      "path": "0"
    },
    "1745": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5582,
        5588
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1746": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5602,
        5607
      ],
      "op": "DUP7",
      "path": "0"
    },
    "1747": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5602,
        5607
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1748": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5521,
        5617
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1750": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5521,
        5617
      ],
      "op": "ADD",
      "path": "0"
    },
    "1751": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5521,
        5617
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD61"
    },
    "1754": {
      "fn": "SimpleArbitrage._getPrice",
      "jump": "i",
      "offset": [
        5521,
        5617
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1755": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5521,
        5617
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1756": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5521,
        5617
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1758": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5521,
        5617
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1760": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5521,
        5617
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1761": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5521,
        5617
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1762": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5521,
        5617
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1763": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5521,
        5617
      ],
      "op": "SUB",
      "path": "0"
    },
    "1764": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5521,
        5617
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1765": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5521,
        5617
      ],
      "op": "DUP7",
      "path": "0"
    },
    "1766": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5521,
        5617
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1767": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5521,
        5617
      ],
      "op": "EXTCODESIZE",
      "path": "0"
    },
    "1768": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5521,
        5617
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1769": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5521,
        5617
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1770": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5521,
        5617
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1771": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5521,
        5617
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6F3"
    },
    "1774": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5521,
        5617
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1775": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5521,
        5617
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1777": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5521,
        5617
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1778": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5521,
        5617
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1779": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5521,
        5617
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1780": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5521,
        5617
      ],
      "op": "POP",
      "path": "0"
    },
    "1781": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5521,
        5617
      ],
      "op": "GAS",
      "path": "0"
    },
    "1782": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5521,
        5617
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "1783": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5521,
        5617
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1784": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5521,
        5617
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1785": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5521,
        5617
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1786": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5521,
        5617
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x707"
    },
    "1789": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5521,
        5617
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1790": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5521,
        5617
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1791": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5521,
        5617
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1793": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5521,
        5617
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1794": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5521,
        5617
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "1795": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5521,
        5617
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1796": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5521,
        5617
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1798": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5521,
        5617
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1799": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5521,
        5617
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1800": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5521,
        5617
      ],
      "op": "POP",
      "path": "0"
    },
    "1801": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5521,
        5617
      ],
      "op": "POP",
      "path": "0"
    },
    "1802": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5521,
        5617
      ],
      "op": "POP",
      "path": "0"
    },
    "1803": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5521,
        5617
      ],
      "op": "POP",
      "path": "0"
    },
    "1804": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5521,
        5617
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1806": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5521,
        5617
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1807": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5521,
        5617
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1808": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5521,
        5617
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1810": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5521,
        5617
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1811": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5521,
        5617
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "1812": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5521,
        5617
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1814": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5521,
        5617
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1815": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5521,
        5617
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1816": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5521,
        5617
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1817": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5521,
        5617
      ],
      "op": "ADD",
      "path": "0"
    },
    "1818": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1820": {
      "op": "NOT"
    },
    "1821": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5521,
        5617
      ],
      "op": "AND",
      "path": "0"
    },
    "1822": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5521,
        5617
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1823": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5521,
        5617
      ],
      "op": "ADD",
      "path": "0"
    },
    "1824": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5521,
        5617
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1826": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5521,
        5617
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1827": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5521,
        5617
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x72F"
    },
    "1830": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5521,
        5617
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1831": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5521,
        5617
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1832": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5521,
        5617
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1833": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5521,
        5617
      ],
      "op": "ADD",
      "path": "0"
    },
    "1834": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5521,
        5617
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1835": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5521,
        5617
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCA3"
    },
    "1838": {
      "fn": "SimpleArbitrage._getPrice",
      "jump": "i",
      "offset": [
        5521,
        5617
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1839": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5521,
        5617
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1840": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5618,
        5619
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1842": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5521,
        5620
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1843": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5521,
        5620
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1844": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5521,
        5620
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1845": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5521,
        5620
      ],
      "op": "LT",
      "path": "0"
    },
    "1846": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5521,
        5620
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x741"
    },
    "1849": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5521,
        5620
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1850": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5521,
        5620
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x741"
    },
    "1853": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5521,
        5620
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC0D"
    },
    "1856": {
      "fn": "SimpleArbitrage._getPrice",
      "jump": "i",
      "offset": [
        5521,
        5620
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1857": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5521,
        5620
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1858": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5521,
        5620
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1860": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5521,
        5620
      ],
      "op": "MUL",
      "path": "0"
    },
    "1861": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5521,
        5620
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1863": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5521,
        5620
      ],
      "op": "ADD",
      "path": "0"
    },
    "1864": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5521,
        5620
      ],
      "op": "ADD",
      "path": "0"
    },
    "1865": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5521,
        5620
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1866": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5505,
        5620
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1867": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5505,
        5620
      ],
      "op": "POP",
      "path": "0"
    },
    "1868": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5637,
        5642
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 11
    },
    "1869": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5630,
        5642
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1870": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5630,
        5642
      ],
      "op": "POP",
      "path": "0"
    },
    "1871": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5630,
        5642
      ],
      "op": "POP",
      "path": "0"
    },
    "1872": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5630,
        5642
      ],
      "op": "POP",
      "path": "0"
    },
    "1873": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5218,
        5649
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "1874": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5218,
        5649
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1875": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5218,
        5649
      ],
      "op": "POP",
      "path": "0"
    },
    "1876": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5218,
        5649
      ],
      "op": "POP",
      "path": "0"
    },
    "1877": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5218,
        5649
      ],
      "op": "POP",
      "path": "0"
    },
    "1878": {
      "fn": "SimpleArbitrage._getPrice",
      "offset": [
        5218,
        5649
      ],
      "op": "POP",
      "path": "0"
    },
    "1879": {
      "fn": "SimpleArbitrage._getPrice",
      "jump": "o",
      "offset": [
        5218,
        5649
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1880": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        3435,
        4631
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1881": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        3561,
        3581
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1883": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        3561,
        3581
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1884": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        3561,
        3581
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1886": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        3595,
        3606
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1887": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        3620,
        3630
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1889": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        3620,
        3630
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1890": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        3495,
        3503
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1892": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        3495,
        3503
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1893": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        3495,
        3503
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1894": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        3495,
        3503
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1895": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        3538,
        3660
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x781"
    },
    "1898": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        3538,
        3660
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1899": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1901": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1903": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1905": {
      "op": "SHL"
    },
    "1906": {
      "op": "SUB"
    },
    "1907": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        3561,
        3581
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1908": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        3561,
        3581
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1909": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        3561,
        3581
      ],
      "op": "AND",
      "path": "0"
    },
    "1910": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        3561,
        3581
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1911": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        3595,
        3606
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1912": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        3595,
        3606
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1913": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        3595,
        3606
      ],
      "op": "AND",
      "path": "0"
    },
    "1914": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        3595,
        3606
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1915": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        3620,
        3630
      ],
      "op": "AND",
      "path": "0"
    },
    "1916": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        3644,
        3650
      ],
      "op": "DUP7",
      "path": "0"
    },
    "1917": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        3538,
        3547
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x62F"
    },
    "1920": {
      "fn": "SimpleArbitrage._comparePrice",
      "jump": "i",
      "offset": [
        3538,
        3660
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1921": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        3538,
        3660
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1922": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        3718,
        3740
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1924": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        3718,
        3740
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1925": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        3718,
        3740
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1927": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        3754,
        3765
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1928": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        3779,
        3789
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1930": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        3779,
        3789
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1931": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        3515,
        3660
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1932": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        3515,
        3660
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1933": {
      "op": "POP"
    },
    "1934": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        3670,
        3692
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1936": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        3670,
        3692
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1937": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        3695,
        3819
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7AA"
    },
    "1940": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        3695,
        3819
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1941": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1943": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1945": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1947": {
      "op": "SHL"
    },
    "1948": {
      "op": "SUB"
    },
    "1949": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        3718,
        3740
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1950": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        3718,
        3740
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1951": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        3718,
        3740
      ],
      "op": "AND",
      "path": "0"
    },
    "1952": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        3718,
        3740
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1953": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        3754,
        3765
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1954": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        3754,
        3765
      ],
      "op": "AND",
      "path": "0"
    },
    "1955": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        3754,
        3765
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1956": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        3779,
        3789
      ],
      "op": "AND",
      "path": "0"
    },
    "1957": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        3803,
        3809
      ],
      "op": "DUP8",
      "path": "0"
    },
    "1958": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        3695,
        3704
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x62F"
    },
    "1961": {
      "fn": "SimpleArbitrage._comparePrice",
      "jump": "i",
      "offset": [
        3695,
        3819
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1962": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        3695,
        3819
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1963": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        3670,
        3819
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1964": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        3670,
        3819
      ],
      "op": "POP",
      "path": "0"
    },
    "1965": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        3943,
        3957
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1966": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        3928,
        3940
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1967": {
      "branch": 25,
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        3928,
        3957
      ],
      "op": "GT",
      "path": "0"
    },
    "1968": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        3924,
        4625
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1969": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        3924,
        4625
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x810"
    },
    "1972": {
      "branch": 25,
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        3924,
        4625
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1973": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        3998,
        4143
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 12,
      "value": "0x7BF"
    },
    "1976": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        4049,
        4055
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1977": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        4077,
        4089
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1978": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        4111,
        4125
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1979": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        3998,
        4027
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9CE"
    },
    "1982": {
      "fn": "SimpleArbitrage._comparePrice",
      "jump": "i",
      "offset": [
        3998,
        4143
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1983": {
      "branch": 26,
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        3998,
        4143
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1984": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        3973,
        4201
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x806"
    },
    "1987": {
      "branch": 26,
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        3973,
        4201
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1988": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        3973,
        4201
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1990": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        3973,
        4201
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1991": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1995": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1997": {
      "op": "SHL"
    },
    "1998": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        3973,
        4201
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1999": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        3973,
        4201
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2000": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2002": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        3973,
        4201
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2004": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        3973,
        4201
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2005": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        3973,
        4201
      ],
      "op": "ADD",
      "path": "0"
    },
    "2006": {
      "op": "MSTORE"
    },
    "2007": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "2009": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2011": {
      "op": "DUP3"
    },
    "2012": {
      "op": "ADD"
    },
    "2013": {
      "op": "MSTORE"
    },
    "2014": {
      "op": "PUSH24",
      "value": "0x417262697472616765206E6F742070726F66697461626C65"
    },
    "2039": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2041": {
      "op": "SHL"
    },
    "2042": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2044": {
      "op": "DUP3"
    },
    "2045": {
      "op": "ADD"
    },
    "2046": {
      "op": "MSTORE"
    },
    "2047": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2049": {
      "op": "ADD"
    },
    "2050": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        3973,
        4201
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x350"
    },
    "2053": {
      "op": "JUMP"
    },
    "2054": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        3973,
        4201
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2055": {
      "op": "POP"
    },
    "2056": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        4222,
        4234
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 13,
      "value": "0x0"
    },
    "2058": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        4222,
        4234
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2059": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        3435,
        4631
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2060": {
      "op": "POP"
    },
    "2061": {
      "op": "POP"
    },
    "2062": {
      "op": "POP"
    },
    "2063": {
      "fn": "SimpleArbitrage._comparePrice",
      "jump": "o",
      "offset": [
        3435,
        4631
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2064": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        3924,
        4625
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2065": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        4270,
        4284
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2066": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        4255,
        4267
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2067": {
      "branch": 27,
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        4255,
        4284
      ],
      "op": "LT",
      "path": "0"
    },
    "2068": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        4251,
        4625
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2069": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        4251,
        4625
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x874"
    },
    "2072": {
      "branch": 27,
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        4251,
        4625
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2073": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        4325,
        4470
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 14,
      "value": "0x823"
    },
    "2076": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        4376,
        4382
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2077": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        4404,
        4418
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2078": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        4440,
        4452
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2079": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        4325,
        4354
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9CE"
    },
    "2082": {
      "fn": "SimpleArbitrage._comparePrice",
      "jump": "i",
      "offset": [
        4325,
        4470
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2083": {
      "branch": 28,
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        4325,
        4470
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2084": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        4300,
        4528
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x86A"
    },
    "2087": {
      "branch": 28,
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        4300,
        4528
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2088": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        4300,
        4528
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2090": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        4300,
        4528
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2091": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2095": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2097": {
      "op": "SHL"
    },
    "2098": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        4300,
        4528
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2099": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        4300,
        4528
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2100": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2102": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        4300,
        4528
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2104": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        4300,
        4528
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2105": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        4300,
        4528
      ],
      "op": "ADD",
      "path": "0"
    },
    "2106": {
      "op": "MSTORE"
    },
    "2107": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "2109": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2111": {
      "op": "DUP3"
    },
    "2112": {
      "op": "ADD"
    },
    "2113": {
      "op": "MSTORE"
    },
    "2114": {
      "op": "PUSH24",
      "value": "0x417262697472616765206E6F742070726F66697461626C65"
    },
    "2139": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2141": {
      "op": "SHL"
    },
    "2142": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2144": {
      "op": "DUP3"
    },
    "2145": {
      "op": "ADD"
    },
    "2146": {
      "op": "MSTORE"
    },
    "2147": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2149": {
      "op": "ADD"
    },
    "2150": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        4300,
        4528
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x350"
    },
    "2153": {
      "op": "JUMP"
    },
    "2154": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        4300,
        4528
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2155": {
      "op": "POP"
    },
    "2156": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        4549,
        4563
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 15,
      "value": "0x1"
    },
    "2158": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        4549,
        4563
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2159": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        3435,
        4631
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2160": {
      "op": "POP"
    },
    "2161": {
      "op": "POP"
    },
    "2162": {
      "op": "POP"
    },
    "2163": {
      "fn": "SimpleArbitrage._comparePrice",
      "jump": "o",
      "offset": [
        3435,
        4631
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2164": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        4251,
        4625
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2165": {
      "op": "POP"
    },
    "2166": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        4601,
        4614
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 16,
      "value": "0x2"
    },
    "2168": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        4601,
        4614
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2169": {
      "fn": "SimpleArbitrage._comparePrice",
      "offset": [
        3435,
        4631
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2170": {
      "op": "POP"
    },
    "2171": {
      "op": "POP"
    },
    "2172": {
      "op": "POP"
    },
    "2173": {
      "fn": "SimpleArbitrage._comparePrice",
      "jump": "o",
      "offset": [
        3435,
        4631
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2174": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        915,
        1154
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2175": {
      "offset": [
        857,
        862
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2177": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        857,
        862
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2178": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2180": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2182": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2184": {
      "op": "SHL"
    },
    "2185": {
      "op": "SUB"
    },
    "2186": {
      "offset": [
        857,
        862
      ],
      "op": "AND",
      "path": "0"
    },
    "2187": {
      "offset": [
        843,
        853
      ],
      "op": "CALLER",
      "path": "0"
    },
    "2188": {
      "offset": [
        843,
        862
      ],
      "op": "EQ",
      "path": "0"
    },
    "2189": {
      "offset": [
        835,
        891
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8D3"
    },
    "2192": {
      "offset": [
        835,
        891
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2193": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        835,
        891
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2195": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        835,
        891
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2196": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2200": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2202": {
      "op": "SHL"
    },
    "2203": {
      "offset": [
        835,
        891
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2204": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        835,
        891
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2205": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2207": {
      "offset": [
        835,
        891
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2209": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        835,
        891
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2210": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        835,
        891
      ],
      "op": "ADD",
      "path": "0"
    },
    "2211": {
      "op": "MSTORE"
    },
    "2212": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "2214": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2216": {
      "op": "DUP3"
    },
    "2217": {
      "op": "ADD"
    },
    "2218": {
      "op": "MSTORE"
    },
    "2219": {
      "op": "PUSH24",
      "value": "0x6F6E6C79206F776E65722063616E2063616C6C2074686973"
    },
    "2244": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2246": {
      "op": "SHL"
    },
    "2247": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2249": {
      "op": "DUP3"
    },
    "2250": {
      "op": "ADD"
    },
    "2251": {
      "op": "MSTORE"
    },
    "2252": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2254": {
      "op": "ADD"
    },
    "2255": {
      "offset": [
        835,
        891
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x350"
    },
    "2258": {
      "op": "JUMP"
    },
    "2259": {
      "offset": [
        835,
        891
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2260": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        992,
        993
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 17,
      "value": "0x0"
    },
    "2262": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        983,
        989
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2263": {
      "branch": 29,
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        983,
        993
      ],
      "op": "GT",
      "path": "0"
    },
    "2264": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        975,
        1035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x931"
    },
    "2267": {
      "branch": 29,
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        975,
        1035
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2268": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        975,
        1035
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2270": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        975,
        1035
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2271": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2275": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2277": {
      "op": "SHL"
    },
    "2278": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        975,
        1035
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2279": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        975,
        1035
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2280": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2282": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        975,
        1035
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2284": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        975,
        1035
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2285": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        975,
        1035
      ],
      "op": "ADD",
      "path": "0"
    },
    "2286": {
      "op": "MSTORE"
    },
    "2287": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "2289": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2291": {
      "op": "DUP3"
    },
    "2292": {
      "op": "ADD"
    },
    "2293": {
      "op": "MSTORE"
    },
    "2294": {
      "op": "PUSH32",
      "value": "0x4465706F73697420616D6F756E74206D75737420626520677265617465722074"
    },
    "2327": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2329": {
      "op": "DUP3"
    },
    "2330": {
      "op": "ADD"
    },
    "2331": {
      "op": "MSTORE"
    },
    "2332": {
      "op": "PUSH5",
      "value": "0x68616E203"
    },
    "2338": {
      "op": "PUSH1",
      "value": "0xDC"
    },
    "2340": {
      "op": "SHL"
    },
    "2341": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2343": {
      "op": "DUP3"
    },
    "2344": {
      "op": "ADD"
    },
    "2345": {
      "op": "MSTORE"
    },
    "2346": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2348": {
      "op": "ADD"
    },
    "2349": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        975,
        1035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x350"
    },
    "2352": {
      "op": "JUMP"
    },
    "2353": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        975,
        1035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2354": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        1052,
        1063
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 18,
      "value": "0x1"
    },
    "2356": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        1052,
        1063
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2357": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        1045,
        1112
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2359": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        1045,
        1112
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2360": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "2365": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2367": {
      "op": "SHL"
    },
    "2368": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        1045,
        1112
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2369": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        1045,
        1112
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2370": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        1078,
        1088
      ],
      "op": "CALLER",
      "path": "0"
    },
    "2371": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        1045,
        1112
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2373": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        1045,
        1112
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2374": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        1045,
        1112
      ],
      "op": "ADD",
      "path": "0"
    },
    "2375": {
      "op": "MSTORE"
    },
    "2376": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        1098,
        1102
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "2377": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2379": {
      "op": "DUP3"
    },
    "2380": {
      "op": "ADD"
    },
    "2381": {
      "op": "MSTORE"
    },
    "2382": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2384": {
      "op": "DUP2"
    },
    "2385": {
      "op": "ADD"
    },
    "2386": {
      "op": "DUP4"
    },
    "2387": {
      "op": "SWAP1"
    },
    "2388": {
      "op": "MSTORE"
    },
    "2389": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2391": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2393": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2395": {
      "op": "SHL"
    },
    "2396": {
      "op": "SUB"
    },
    "2397": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        1052,
        1063
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2398": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        1052,
        1063
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2399": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        1052,
        1063
      ],
      "op": "AND",
      "path": "0"
    },
    "2400": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        1052,
        1063
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2401": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        1045,
        1077
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x23B872DD"
    },
    "2406": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        1045,
        1077
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2407": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2409": {
      "op": "ADD"
    },
    "2410": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        1045,
        1112
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2412": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        1045,
        1112
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2414": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        1045,
        1112
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2415": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        1045,
        1112
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2416": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        1045,
        1112
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2417": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        1045,
        1112
      ],
      "op": "SUB",
      "path": "0"
    },
    "2418": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        1045,
        1112
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2419": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        1045,
        1112
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2421": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        1045,
        1112
      ],
      "op": "DUP8",
      "path": "0"
    },
    "2422": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        1045,
        1112
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2423": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        1045,
        1112
      ],
      "op": "EXTCODESIZE",
      "path": "0"
    },
    "2424": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        1045,
        1112
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2425": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        1045,
        1112
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2426": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        1045,
        1112
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2427": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        1045,
        1112
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x983"
    },
    "2430": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        1045,
        1112
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2431": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        1045,
        1112
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2433": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        1045,
        1112
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2434": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        1045,
        1112
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2435": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        1045,
        1112
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2436": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        1045,
        1112
      ],
      "op": "POP",
      "path": "0"
    },
    "2437": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        1045,
        1112
      ],
      "op": "GAS",
      "path": "0"
    },
    "2438": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        1045,
        1112
      ],
      "op": "CALL",
      "path": "0"
    },
    "2439": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        1045,
        1112
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2440": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        1045,
        1112
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2441": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        1045,
        1112
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2442": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        1045,
        1112
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x997"
    },
    "2445": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        1045,
        1112
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2446": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        1045,
        1112
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2447": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        1045,
        1112
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2449": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        1045,
        1112
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2450": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        1045,
        1112
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "2451": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        1045,
        1112
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2452": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        1045,
        1112
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2454": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        1045,
        1112
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2455": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        1045,
        1112
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2456": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        1045,
        1112
      ],
      "op": "POP",
      "path": "0"
    },
    "2457": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        1045,
        1112
      ],
      "op": "POP",
      "path": "0"
    },
    "2458": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        1045,
        1112
      ],
      "op": "POP",
      "path": "0"
    },
    "2459": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        1045,
        1112
      ],
      "op": "POP",
      "path": "0"
    },
    "2460": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        1045,
        1112
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2462": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        1045,
        1112
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2463": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        1045,
        1112
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2464": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        1045,
        1112
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2466": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        1045,
        1112
      ],
      "op": "NOT",
      "path": "0"
    },
    "2467": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        1045,
        1112
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2469": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        1045,
        1112
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2470": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        1045,
        1112
      ],
      "op": "ADD",
      "path": "0"
    },
    "2471": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        1045,
        1112
      ],
      "op": "AND",
      "path": "0"
    },
    "2472": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        1045,
        1112
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2473": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        1045,
        1112
      ],
      "op": "ADD",
      "path": "0"
    },
    "2474": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        1045,
        1112
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2475": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        1045,
        1112
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2477": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        1045,
        1112
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2478": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        1045,
        1112
      ],
      "op": "POP",
      "path": "0"
    },
    "2479": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        1045,
        1112
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2480": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        1045,
        1112
      ],
      "op": "ADD",
      "path": "0"
    },
    "2481": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        1045,
        1112
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2482": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        1045,
        1112
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9BB"
    },
    "2485": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        1045,
        1112
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2486": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        1045,
        1112
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2487": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        1045,
        1112
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB67"
    },
    "2490": {
      "fn": "SimpleArbitrage.deposit",
      "jump": "i",
      "offset": [
        1045,
        1112
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2491": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        1045,
        1112
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2492": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        1045,
        1112
      ],
      "op": "POP",
      "path": "0"
    },
    "2493": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        1141,
        1147
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 19
    },
    "2494": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        1122,
        1137
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "2496": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        1122,
        1137
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2498": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        1122,
        1147
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2499": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        1122,
        1147
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2500": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        1122,
        1147
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2501": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        1122,
        1147
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x448"
    },
    "2504": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        1122,
        1147
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2505": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        1122,
        1147
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2506": {
      "fn": "SimpleArbitrage.deposit",
      "offset": [
        1122,
        1147
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD82"
    },
    "2509": {
      "fn": "SimpleArbitrage.deposit",
      "jump": "i",
      "offset": [
        1122,
        1147
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2510": {
      "fn": "SimpleArbitrage._checkIfArbitrageIsProfitable",
      "offset": [
        4637,
        5212
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2511": {
      "fn": "SimpleArbitrage._checkIfArbitrageIsProfitable",
      "offset": [
        4786,
        4790
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2513": {
      "fn": "SimpleArbitrage._checkIfArbitrageIsProfitable",
      "offset": [
        4786,
        4790
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2514": {
      "fn": "SimpleArbitrage._checkIfArbitrageIsProfitable",
      "offset": [
        5019,
        5030
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2515": {
      "fn": "SimpleArbitrage._checkIfArbitrageIsProfitable",
      "offset": [
        4991,
        5015
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9DC"
    },
    "2518": {
      "fn": "SimpleArbitrage._checkIfArbitrageIsProfitable",
      "offset": [
        5005,
        5015
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2519": {
      "fn": "SimpleArbitrage._checkIfArbitrageIsProfitable",
      "offset": [
        5019,
        5030
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2520": {
      "fn": "SimpleArbitrage._checkIfArbitrageIsProfitable",
      "offset": [
        4991,
        5015
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB9F"
    },
    "2523": {
      "fn": "SimpleArbitrage._checkIfArbitrageIsProfitable",
      "jump": "i",
      "offset": [
        4991,
        5015
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2524": {
      "fn": "SimpleArbitrage._checkIfArbitrageIsProfitable",
      "offset": [
        4991,
        5015
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2525": {
      "fn": "SimpleArbitrage._checkIfArbitrageIsProfitable",
      "offset": [
        4990,
        5030
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9E6"
    },
    "2528": {
      "fn": "SimpleArbitrage._checkIfArbitrageIsProfitable",
      "offset": [
        4990,
        5030
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2529": {
      "fn": "SimpleArbitrage._checkIfArbitrageIsProfitable",
      "offset": [
        4990,
        5030
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2530": {
      "fn": "SimpleArbitrage._checkIfArbitrageIsProfitable",
      "offset": [
        4990,
        5030
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBD5"
    },
    "2533": {
      "fn": "SimpleArbitrage._checkIfArbitrageIsProfitable",
      "jump": "i",
      "offset": [
        4990,
        5030
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2534": {
      "fn": "SimpleArbitrage._checkIfArbitrageIsProfitable",
      "offset": [
        4990,
        5030
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2535": {
      "fn": "SimpleArbitrage._checkIfArbitrageIsProfitable",
      "offset": [
        4969,
        5030
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2536": {
      "op": "POP"
    },
    "2537": {
      "fn": "SimpleArbitrage._checkIfArbitrageIsProfitable",
      "offset": [
        5041,
        5058
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2539": {
      "fn": "SimpleArbitrage._checkIfArbitrageIsProfitable",
      "offset": [
        5084,
        5088
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E8"
    },
    "2542": {
      "fn": "SimpleArbitrage._checkIfArbitrageIsProfitable",
      "offset": [
        5067,
        5079
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9F8"
    },
    "2545": {
      "fn": "SimpleArbitrage._checkIfArbitrageIsProfitable",
      "offset": [
        5067,
        5075
      ],
      "op": "DUP8",
      "path": "0"
    },
    "2546": {
      "fn": "SimpleArbitrage._checkIfArbitrageIsProfitable",
      "offset": [
        5078,
        5079
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "2548": {
      "fn": "SimpleArbitrage._checkIfArbitrageIsProfitable",
      "offset": [
        5067,
        5079
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBB6"
    },
    "2551": {
      "fn": "SimpleArbitrage._checkIfArbitrageIsProfitable",
      "jump": "i",
      "offset": [
        5067,
        5079
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2552": {
      "fn": "SimpleArbitrage._checkIfArbitrageIsProfitable",
      "offset": [
        5067,
        5079
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2553": {
      "fn": "SimpleArbitrage._checkIfArbitrageIsProfitable",
      "offset": [
        5062,
        5080
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA03"
    },
    "2556": {
      "fn": "SimpleArbitrage._checkIfArbitrageIsProfitable",
      "offset": [
        5062,
        5080
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2557": {
      "fn": "SimpleArbitrage._checkIfArbitrageIsProfitable",
      "offset": [
        5062,
        5063
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "2559": {
      "fn": "SimpleArbitrage._checkIfArbitrageIsProfitable",
      "offset": [
        5062,
        5080
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBB6"
    },
    "2562": {
      "fn": "SimpleArbitrage._checkIfArbitrageIsProfitable",
      "jump": "i",
      "offset": [
        5062,
        5080
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2563": {
      "fn": "SimpleArbitrage._checkIfArbitrageIsProfitable",
      "offset": [
        5062,
        5080
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2564": {
      "fn": "SimpleArbitrage._checkIfArbitrageIsProfitable",
      "offset": [
        5061,
        5088
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA0D"
    },
    "2567": {
      "fn": "SimpleArbitrage._checkIfArbitrageIsProfitable",
      "offset": [
        5061,
        5088
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2568": {
      "fn": "SimpleArbitrage._checkIfArbitrageIsProfitable",
      "offset": [
        5061,
        5088
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2569": {
      "fn": "SimpleArbitrage._checkIfArbitrageIsProfitable",
      "offset": [
        5061,
        5088
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBD5"
    },
    "2572": {
      "fn": "SimpleArbitrage._checkIfArbitrageIsProfitable",
      "jump": "i",
      "offset": [
        5061,
        5088
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2573": {
      "fn": "SimpleArbitrage._checkIfArbitrageIsProfitable",
      "offset": [
        5061,
        5088
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2574": {
      "fn": "SimpleArbitrage._checkIfArbitrageIsProfitable",
      "offset": [
        5041,
        5088
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2575": {
      "fn": "SimpleArbitrage._checkIfArbitrageIsProfitable",
      "offset": [
        5041,
        5088
      ],
      "op": "POP",
      "path": "0"
    },
    "2576": {
      "fn": "SimpleArbitrage._checkIfArbitrageIsProfitable",
      "offset": [
        5116,
        5125
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2577": {
      "fn": "SimpleArbitrage._checkIfArbitrageIsProfitable",
      "offset": [
        5103,
        5113
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2578": {
      "branch": 30,
      "fn": "SimpleArbitrage._checkIfArbitrageIsProfitable",
      "offset": [
        5103,
        5125
      ],
      "op": "GT",
      "path": "0"
    },
    "2579": {
      "fn": "SimpleArbitrage._checkIfArbitrageIsProfitable",
      "offset": [
        5099,
        5206
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2580": {
      "fn": "SimpleArbitrage._checkIfArbitrageIsProfitable",
      "offset": [
        5099,
        5206
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA22"
    },
    "2583": {
      "branch": 30,
      "fn": "SimpleArbitrage._checkIfArbitrageIsProfitable",
      "offset": [
        5099,
        5206
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2584": {
      "fn": "SimpleArbitrage._checkIfArbitrageIsProfitable",
      "offset": [
        5148,
        5152
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 20,
      "value": "0x1"
    },
    "2586": {
      "fn": "SimpleArbitrage._checkIfArbitrageIsProfitable",
      "offset": [
        5141,
        5152
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2587": {
      "fn": "SimpleArbitrage._checkIfArbitrageIsProfitable",
      "offset": [
        5141,
        5152
      ],
      "op": "POP",
      "path": "0"
    },
    "2588": {
      "fn": "SimpleArbitrage._checkIfArbitrageIsProfitable",
      "offset": [
        5141,
        5152
      ],
      "op": "POP",
      "path": "0"
    },
    "2589": {
      "fn": "SimpleArbitrage._checkIfArbitrageIsProfitable",
      "offset": [
        5141,
        5152
      ],
      "op": "POP",
      "path": "0"
    },
    "2590": {
      "fn": "SimpleArbitrage._checkIfArbitrageIsProfitable",
      "offset": [
        5141,
        5152
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA29"
    },
    "2593": {
      "fn": "SimpleArbitrage._checkIfArbitrageIsProfitable",
      "offset": [
        5141,
        5152
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2594": {
      "fn": "SimpleArbitrage._checkIfArbitrageIsProfitable",
      "offset": [
        5099,
        5206
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2595": {
      "fn": "SimpleArbitrage._checkIfArbitrageIsProfitable",
      "offset": [
        5190,
        5195
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 21,
      "value": "0x0"
    },
    "2597": {
      "fn": "SimpleArbitrage._checkIfArbitrageIsProfitable",
      "offset": [
        5183,
        5195
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2598": {
      "fn": "SimpleArbitrage._checkIfArbitrageIsProfitable",
      "offset": [
        5183,
        5195
      ],
      "op": "POP",
      "path": "0"
    },
    "2599": {
      "fn": "SimpleArbitrage._checkIfArbitrageIsProfitable",
      "offset": [
        5183,
        5195
      ],
      "op": "POP",
      "path": "0"
    },
    "2600": {
      "fn": "SimpleArbitrage._checkIfArbitrageIsProfitable",
      "offset": [
        5183,
        5195
      ],
      "op": "POP",
      "path": "0"
    },
    "2601": {
      "fn": "SimpleArbitrage._checkIfArbitrageIsProfitable",
      "offset": [
        4637,
        5212
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2602": {
      "fn": "SimpleArbitrage._checkIfArbitrageIsProfitable",
      "offset": [
        4637,
        5212
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2603": {
      "fn": "SimpleArbitrage._checkIfArbitrageIsProfitable",
      "offset": [
        4637,
        5212
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2604": {
      "fn": "SimpleArbitrage._checkIfArbitrageIsProfitable",
      "offset": [
        4637,
        5212
      ],
      "op": "POP",
      "path": "0"
    },
    "2605": {
      "fn": "SimpleArbitrage._checkIfArbitrageIsProfitable",
      "offset": [
        4637,
        5212
      ],
      "op": "POP",
      "path": "0"
    },
    "2606": {
      "fn": "SimpleArbitrage._checkIfArbitrageIsProfitable",
      "offset": [
        4637,
        5212
      ],
      "op": "POP",
      "path": "0"
    },
    "2607": {
      "fn": "SimpleArbitrage._checkIfArbitrageIsProfitable",
      "jump": "o",
      "offset": [
        4637,
        5212
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2608": {
      "op": "JUMPDEST"
    },
    "2609": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2611": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2613": {
      "op": "DUP3"
    },
    "2614": {
      "op": "DUP5"
    },
    "2615": {
      "op": "SUB"
    },
    "2616": {
      "op": "SLT"
    },
    "2617": {
      "op": "ISZERO"
    },
    "2618": {
      "op": "PUSH2",
      "value": "0xA42"
    },
    "2621": {
      "op": "JUMPI"
    },
    "2622": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2624": {
      "op": "DUP1"
    },
    "2625": {
      "op": "REVERT"
    },
    "2626": {
      "op": "JUMPDEST"
    },
    "2627": {
      "op": "POP"
    },
    "2628": {
      "op": "CALLDATALOAD"
    },
    "2629": {
      "op": "SWAP2"
    },
    "2630": {
      "op": "SWAP1"
    },
    "2631": {
      "op": "POP"
    },
    "2632": {
      "jump": "o",
      "op": "JUMP"
    },
    "2633": {
      "op": "JUMPDEST"
    },
    "2634": {
      "op": "DUP1"
    },
    "2635": {
      "op": "CALLDATALOAD"
    },
    "2636": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2638": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2640": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2642": {
      "op": "SHL"
    },
    "2643": {
      "op": "SUB"
    },
    "2644": {
      "op": "DUP2"
    },
    "2645": {
      "op": "AND"
    },
    "2646": {
      "op": "DUP2"
    },
    "2647": {
      "op": "EQ"
    },
    "2648": {
      "op": "PUSH2",
      "value": "0xA60"
    },
    "2651": {
      "op": "JUMPI"
    },
    "2652": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2654": {
      "op": "DUP1"
    },
    "2655": {
      "op": "REVERT"
    },
    "2656": {
      "op": "JUMPDEST"
    },
    "2657": {
      "op": "SWAP2"
    },
    "2658": {
      "op": "SWAP1"
    },
    "2659": {
      "op": "POP"
    },
    "2660": {
      "jump": "o",
      "op": "JUMP"
    },
    "2661": {
      "op": "JUMPDEST"
    },
    "2662": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2664": {
      "op": "DUP1"
    },
    "2665": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2667": {
      "op": "DUP1"
    },
    "2668": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2670": {
      "op": "DUP6"
    },
    "2671": {
      "op": "DUP8"
    },
    "2672": {
      "op": "SUB"
    },
    "2673": {
      "op": "SLT"
    },
    "2674": {
      "op": "ISZERO"
    },
    "2675": {
      "op": "PUSH2",
      "value": "0xA7B"
    },
    "2678": {
      "op": "JUMPI"
    },
    "2679": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2681": {
      "op": "DUP1"
    },
    "2682": {
      "op": "REVERT"
    },
    "2683": {
      "op": "JUMPDEST"
    },
    "2684": {
      "op": "DUP5"
    },
    "2685": {
      "op": "CALLDATALOAD"
    },
    "2686": {
      "op": "SWAP4"
    },
    "2687": {
      "op": "POP"
    },
    "2688": {
      "op": "PUSH2",
      "value": "0xA8B"
    },
    "2691": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2693": {
      "op": "DUP7"
    },
    "2694": {
      "op": "ADD"
    },
    "2695": {
      "op": "PUSH2",
      "value": "0xA49"
    },
    "2698": {
      "jump": "i",
      "op": "JUMP"
    },
    "2699": {
      "op": "JUMPDEST"
    },
    "2700": {
      "op": "SWAP3"
    },
    "2701": {
      "op": "POP"
    },
    "2702": {
      "op": "PUSH2",
      "value": "0xA99"
    },
    "2705": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2707": {
      "op": "DUP7"
    },
    "2708": {
      "op": "ADD"
    },
    "2709": {
      "op": "PUSH2",
      "value": "0xA49"
    },
    "2712": {
      "jump": "i",
      "op": "JUMP"
    },
    "2713": {
      "op": "JUMPDEST"
    },
    "2714": {
      "op": "SWAP2"
    },
    "2715": {
      "op": "POP"
    },
    "2716": {
      "op": "PUSH2",
      "value": "0xAA7"
    },
    "2719": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2721": {
      "op": "DUP7"
    },
    "2722": {
      "op": "ADD"
    },
    "2723": {
      "op": "PUSH2",
      "value": "0xA49"
    },
    "2726": {
      "jump": "i",
      "op": "JUMP"
    },
    "2727": {
      "op": "JUMPDEST"
    },
    "2728": {
      "op": "SWAP1"
    },
    "2729": {
      "op": "POP"
    },
    "2730": {
      "op": "SWAP3"
    },
    "2731": {
      "op": "SWAP6"
    },
    "2732": {
      "op": "SWAP2"
    },
    "2733": {
      "op": "SWAP5"
    },
    "2734": {
      "op": "POP"
    },
    "2735": {
      "op": "SWAP3"
    },
    "2736": {
      "op": "POP"
    },
    "2737": {
      "jump": "o",
      "op": "JUMP"
    },
    "2738": {
      "op": "JUMPDEST"
    },
    "2739": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2741": {
      "op": "DUP1"
    },
    "2742": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2744": {
      "op": "DUP1"
    },
    "2745": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2747": {
      "op": "DUP6"
    },
    "2748": {
      "op": "DUP8"
    },
    "2749": {
      "op": "SUB"
    },
    "2750": {
      "op": "SLT"
    },
    "2751": {
      "op": "ISZERO"
    },
    "2752": {
      "op": "PUSH2",
      "value": "0xAC8"
    },
    "2755": {
      "op": "JUMPI"
    },
    "2756": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2758": {
      "op": "DUP1"
    },
    "2759": {
      "op": "REVERT"
    },
    "2760": {
      "op": "JUMPDEST"
    },
    "2761": {
      "op": "PUSH2",
      "value": "0xAD1"
    },
    "2764": {
      "op": "DUP6"
    },
    "2765": {
      "op": "PUSH2",
      "value": "0xA49"
    },
    "2768": {
      "jump": "i",
      "op": "JUMP"
    },
    "2769": {
      "op": "JUMPDEST"
    },
    "2770": {
      "op": "SWAP4"
    },
    "2771": {
      "op": "POP"
    },
    "2772": {
      "op": "PUSH2",
      "value": "0xADF"
    },
    "2775": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2777": {
      "op": "DUP7"
    },
    "2778": {
      "op": "ADD"
    },
    "2779": {
      "op": "PUSH2",
      "value": "0xA49"
    },
    "2782": {
      "jump": "i",
      "op": "JUMP"
    },
    "2783": {
      "op": "JUMPDEST"
    },
    "2784": {
      "op": "SWAP3"
    },
    "2785": {
      "op": "POP"
    },
    "2786": {
      "op": "PUSH2",
      "value": "0xAED"
    },
    "2789": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2791": {
      "op": "DUP7"
    },
    "2792": {
      "op": "ADD"
    },
    "2793": {
      "op": "PUSH2",
      "value": "0xA49"
    },
    "2796": {
      "jump": "i",
      "op": "JUMP"
    },
    "2797": {
      "op": "JUMPDEST"
    },
    "2798": {
      "op": "SWAP4"
    },
    "2799": {
      "op": "SWAP7"
    },
    "2800": {
      "op": "SWAP3"
    },
    "2801": {
      "op": "SWAP6"
    },
    "2802": {
      "op": "POP"
    },
    "2803": {
      "op": "SWAP3"
    },
    "2804": {
      "op": "SWAP4"
    },
    "2805": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2807": {
      "op": "ADD"
    },
    "2808": {
      "op": "CALLDATALOAD"
    },
    "2809": {
      "op": "SWAP3"
    },
    "2810": {
      "op": "POP"
    },
    "2811": {
      "op": "POP"
    },
    "2812": {
      "jump": "o",
      "op": "JUMP"
    },
    "2813": {
      "op": "JUMPDEST"
    },
    "2814": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2819": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2821": {
      "op": "SHL"
    },
    "2822": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2824": {
      "op": "MSTORE"
    },
    "2825": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "2827": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2829": {
      "op": "MSTORE"
    },
    "2830": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2832": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2834": {
      "op": "REVERT"
    },
    "2835": {
      "op": "JUMPDEST"
    },
    "2836": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2838": {
      "op": "DUP2"
    },
    "2839": {
      "op": "ADD"
    },
    "2840": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "2842": {
      "op": "DUP4"
    },
    "2843": {
      "op": "LT"
    },
    "2844": {
      "op": "PUSH2",
      "value": "0xB35"
    },
    "2847": {
      "op": "JUMPI"
    },
    "2848": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2853": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2855": {
      "op": "SHL"
    },
    "2856": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2858": {
      "op": "MSTORE"
    },
    "2859": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "2861": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2863": {
      "op": "MSTORE"
    },
    "2864": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2866": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2868": {
      "op": "REVERT"
    },
    "2869": {
      "op": "JUMPDEST"
    },
    "2870": {
      "op": "SWAP2"
    },
    "2871": {
      "op": "SWAP1"
    },
    "2872": {
      "op": "MSTORE"
    },
    "2873": {
      "op": "SWAP1"
    },
    "2874": {
      "jump": "o",
      "op": "JUMP"
    },
    "2875": {
      "op": "JUMPDEST"
    },
    "2876": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2878": {
      "op": "DUP1"
    },
    "2879": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2881": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2883": {
      "op": "DUP5"
    },
    "2884": {
      "op": "DUP7"
    },
    "2885": {
      "op": "SUB"
    },
    "2886": {
      "op": "SLT"
    },
    "2887": {
      "op": "ISZERO"
    },
    "2888": {
      "op": "PUSH2",
      "value": "0xB50"
    },
    "2891": {
      "op": "JUMPI"
    },
    "2892": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2894": {
      "op": "DUP1"
    },
    "2895": {
      "op": "REVERT"
    },
    "2896": {
      "op": "JUMPDEST"
    },
    "2897": {
      "op": "POP"
    },
    "2898": {
      "op": "POP"
    },
    "2899": {
      "op": "DUP2"
    },
    "2900": {
      "op": "CALLDATALOAD"
    },
    "2901": {
      "op": "SWAP4"
    },
    "2902": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2904": {
      "op": "DUP4"
    },
    "2905": {
      "op": "ADD"
    },
    "2906": {
      "op": "CALLDATALOAD"
    },
    "2907": {
      "op": "SWAP4"
    },
    "2908": {
      "op": "POP"
    },
    "2909": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2911": {
      "op": "SWAP1"
    },
    "2912": {
      "op": "SWAP3"
    },
    "2913": {
      "op": "ADD"
    },
    "2914": {
      "op": "CALLDATALOAD"
    },
    "2915": {
      "op": "SWAP2"
    },
    "2916": {
      "op": "SWAP1"
    },
    "2917": {
      "op": "POP"
    },
    "2918": {
      "jump": "o",
      "op": "JUMP"
    },
    "2919": {
      "op": "JUMPDEST"
    },
    "2920": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2922": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2924": {
      "op": "DUP3"
    },
    "2925": {
      "op": "DUP5"
    },
    "2926": {
      "op": "SUB"
    },
    "2927": {
      "op": "SLT"
    },
    "2928": {
      "op": "ISZERO"
    },
    "2929": {
      "op": "PUSH2",
      "value": "0xB79"
    },
    "2932": {
      "op": "JUMPI"
    },
    "2933": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2935": {
      "op": "DUP1"
    },
    "2936": {
      "op": "REVERT"
    },
    "2937": {
      "op": "JUMPDEST"
    },
    "2938": {
      "op": "DUP2"
    },
    "2939": {
      "op": "MLOAD"
    },
    "2940": {
      "op": "DUP1"
    },
    "2941": {
      "op": "ISZERO"
    },
    "2942": {
      "op": "ISZERO"
    },
    "2943": {
      "op": "DUP2"
    },
    "2944": {
      "op": "EQ"
    },
    "2945": {
      "op": "PUSH2",
      "value": "0xA29"
    },
    "2948": {
      "op": "JUMPI"
    },
    "2949": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2951": {
      "op": "DUP1"
    },
    "2952": {
      "op": "REVERT"
    },
    "2953": {
      "op": "JUMPDEST"
    },
    "2954": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2959": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2961": {
      "op": "SHL"
    },
    "2962": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2964": {
      "op": "MSTORE"
    },
    "2965": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "2967": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2969": {
      "op": "MSTORE"
    },
    "2970": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2972": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2974": {
      "op": "REVERT"
    },
    "2975": {
      "op": "JUMPDEST"
    },
    "2976": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2978": {
      "op": "DUP3"
    },
    "2979": {
      "op": "DUP3"
    },
    "2980": {
      "op": "LT"
    },
    "2981": {
      "op": "ISZERO"
    },
    "2982": {
      "op": "PUSH2",
      "value": "0xBB1"
    },
    "2985": {
      "op": "JUMPI"
    },
    "2986": {
      "op": "PUSH2",
      "value": "0xBB1"
    },
    "2989": {
      "op": "PUSH2",
      "value": "0xB89"
    },
    "2992": {
      "jump": "i",
      "op": "JUMP"
    },
    "2993": {
      "op": "JUMPDEST"
    },
    "2994": {
      "op": "POP"
    },
    "2995": {
      "op": "SUB"
    },
    "2996": {
      "op": "SWAP1"
    },
    "2997": {
      "jump": "o",
      "op": "JUMP"
    },
    "2998": {
      "op": "JUMPDEST"
    },
    "2999": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3001": {
      "op": "DUP2"
    },
    "3002": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3004": {
      "op": "NOT"
    },
    "3005": {
      "op": "DIV"
    },
    "3006": {
      "op": "DUP4"
    },
    "3007": {
      "op": "GT"
    },
    "3008": {
      "op": "DUP3"
    },
    "3009": {
      "op": "ISZERO"
    },
    "3010": {
      "op": "ISZERO"
    },
    "3011": {
      "op": "AND"
    },
    "3012": {
      "op": "ISZERO"
    },
    "3013": {
      "op": "PUSH2",
      "value": "0xBD0"
    },
    "3016": {
      "op": "JUMPI"
    },
    "3017": {
      "op": "PUSH2",
      "value": "0xBD0"
    },
    "3020": {
      "op": "PUSH2",
      "value": "0xB89"
    },
    "3023": {
      "jump": "i",
      "op": "JUMP"
    },
    "3024": {
      "op": "JUMPDEST"
    },
    "3025": {
      "op": "POP"
    },
    "3026": {
      "op": "MUL"
    },
    "3027": {
      "op": "SWAP1"
    },
    "3028": {
      "jump": "o",
      "op": "JUMP"
    },
    "3029": {
      "op": "JUMPDEST"
    },
    "3030": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3032": {
      "op": "DUP3"
    },
    "3033": {
      "op": "PUSH2",
      "value": "0xBF2"
    },
    "3036": {
      "op": "JUMPI"
    },
    "3037": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3042": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3044": {
      "op": "SHL"
    },
    "3045": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3047": {
      "op": "MSTORE"
    },
    "3048": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "3050": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3052": {
      "op": "MSTORE"
    },
    "3053": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3055": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3057": {
      "op": "REVERT"
    },
    "3058": {
      "op": "JUMPDEST"
    },
    "3059": {
      "op": "POP"
    },
    "3060": {
      "op": "DIV"
    },
    "3061": {
      "op": "SWAP1"
    },
    "3062": {
      "jump": "o",
      "op": "JUMP"
    },
    "3063": {
      "op": "JUMPDEST"
    },
    "3064": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3069": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3071": {
      "op": "SHL"
    },
    "3072": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3074": {
      "op": "MSTORE"
    },
    "3075": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "3077": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3079": {
      "op": "MSTORE"
    },
    "3080": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3082": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3084": {
      "op": "REVERT"
    },
    "3085": {
      "op": "JUMPDEST"
    },
    "3086": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3091": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3093": {
      "op": "SHL"
    },
    "3094": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3096": {
      "op": "MSTORE"
    },
    "3097": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "3099": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3101": {
      "op": "MSTORE"
    },
    "3102": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3104": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3106": {
      "op": "REVERT"
    },
    "3107": {
      "op": "JUMPDEST"
    },
    "3108": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3110": {
      "op": "DUP2"
    },
    "3111": {
      "op": "MLOAD"
    },
    "3112": {
      "op": "DUP1"
    },
    "3113": {
      "op": "DUP5"
    },
    "3114": {
      "op": "MSTORE"
    },
    "3115": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3117": {
      "op": "DUP1"
    },
    "3118": {
      "op": "DUP6"
    },
    "3119": {
      "op": "ADD"
    },
    "3120": {
      "op": "SWAP5"
    },
    "3121": {
      "op": "POP"
    },
    "3122": {
      "op": "DUP1"
    },
    "3123": {
      "op": "DUP5"
    },
    "3124": {
      "op": "ADD"
    },
    "3125": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3127": {
      "op": "JUMPDEST"
    },
    "3128": {
      "op": "DUP4"
    },
    "3129": {
      "op": "DUP2"
    },
    "3130": {
      "op": "LT"
    },
    "3131": {
      "op": "ISZERO"
    },
    "3132": {
      "op": "PUSH2",
      "value": "0xC5C"
    },
    "3135": {
      "op": "JUMPI"
    },
    "3136": {
      "op": "DUP2"
    },
    "3137": {
      "op": "MLOAD"
    },
    "3138": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3140": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3142": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3144": {
      "op": "SHL"
    },
    "3145": {
      "op": "SUB"
    },
    "3146": {
      "op": "AND"
    },
    "3147": {
      "op": "DUP8"
    },
    "3148": {
      "op": "MSTORE"
    },
    "3149": {
      "op": "SWAP6"
    },
    "3150": {
      "op": "DUP3"
    },
    "3151": {
      "op": "ADD"
    },
    "3152": {
      "op": "SWAP6"
    },
    "3153": {
      "op": "SWAP1"
    },
    "3154": {
      "op": "DUP3"
    },
    "3155": {
      "op": "ADD"
    },
    "3156": {
      "op": "SWAP1"
    },
    "3157": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3159": {
      "op": "ADD"
    },
    "3160": {
      "op": "PUSH2",
      "value": "0xC37"
    },
    "3163": {
      "op": "JUMP"
    },
    "3164": {
      "op": "JUMPDEST"
    },
    "3165": {
      "op": "POP"
    },
    "3166": {
      "op": "SWAP5"
    },
    "3167": {
      "op": "SWAP6"
    },
    "3168": {
      "op": "SWAP5"
    },
    "3169": {
      "op": "POP"
    },
    "3170": {
      "op": "POP"
    },
    "3171": {
      "op": "POP"
    },
    "3172": {
      "op": "POP"
    },
    "3173": {
      "op": "POP"
    },
    "3174": {
      "jump": "o",
      "op": "JUMP"
    },
    "3175": {
      "op": "JUMPDEST"
    },
    "3176": {
      "op": "DUP6"
    },
    "3177": {
      "op": "DUP2"
    },
    "3178": {
      "op": "MSTORE"
    },
    "3179": {
      "op": "DUP5"
    },
    "3180": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3182": {
      "op": "DUP3"
    },
    "3183": {
      "op": "ADD"
    },
    "3184": {
      "op": "MSTORE"
    },
    "3185": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3187": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3189": {
      "op": "DUP3"
    },
    "3190": {
      "op": "ADD"
    },
    "3191": {
      "op": "MSTORE"
    },
    "3192": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3194": {
      "op": "PUSH2",
      "value": "0xC86"
    },
    "3197": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3199": {
      "op": "DUP4"
    },
    "3200": {
      "op": "ADD"
    },
    "3201": {
      "op": "DUP7"
    },
    "3202": {
      "op": "PUSH2",
      "value": "0xC23"
    },
    "3205": {
      "jump": "i",
      "op": "JUMP"
    },
    "3206": {
      "op": "JUMPDEST"
    },
    "3207": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3209": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3211": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3213": {
      "op": "SHL"
    },
    "3214": {
      "op": "SUB"
    },
    "3215": {
      "op": "SWAP5"
    },
    "3216": {
      "op": "SWAP1"
    },
    "3217": {
      "op": "SWAP5"
    },
    "3218": {
      "op": "AND"
    },
    "3219": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3221": {
      "op": "DUP4"
    },
    "3222": {
      "op": "ADD"
    },
    "3223": {
      "op": "MSTORE"
    },
    "3224": {
      "op": "POP"
    },
    "3225": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3227": {
      "op": "ADD"
    },
    "3228": {
      "op": "MSTORE"
    },
    "3229": {
      "op": "SWAP4"
    },
    "3230": {
      "op": "SWAP3"
    },
    "3231": {
      "op": "POP"
    },
    "3232": {
      "op": "POP"
    },
    "3233": {
      "op": "POP"
    },
    "3234": {
      "jump": "o",
      "op": "JUMP"
    },
    "3235": {
      "op": "JUMPDEST"
    },
    "3236": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3238": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3240": {
      "op": "DUP1"
    },
    "3241": {
      "op": "DUP4"
    },
    "3242": {
      "op": "DUP6"
    },
    "3243": {
      "op": "SUB"
    },
    "3244": {
      "op": "SLT"
    },
    "3245": {
      "op": "ISZERO"
    },
    "3246": {
      "op": "PUSH2",
      "value": "0xCB6"
    },
    "3249": {
      "op": "JUMPI"
    },
    "3250": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3252": {
      "op": "DUP1"
    },
    "3253": {
      "op": "REVERT"
    },
    "3254": {
      "op": "JUMPDEST"
    },
    "3255": {
      "op": "DUP3"
    },
    "3256": {
      "op": "MLOAD"
    },
    "3257": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3266": {
      "op": "DUP1"
    },
    "3267": {
      "op": "DUP3"
    },
    "3268": {
      "op": "GT"
    },
    "3269": {
      "op": "ISZERO"
    },
    "3270": {
      "op": "PUSH2",
      "value": "0xCCE"
    },
    "3273": {
      "op": "JUMPI"
    },
    "3274": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3276": {
      "op": "DUP1"
    },
    "3277": {
      "op": "REVERT"
    },
    "3278": {
      "op": "JUMPDEST"
    },
    "3279": {
      "op": "DUP2"
    },
    "3280": {
      "op": "DUP6"
    },
    "3281": {
      "op": "ADD"
    },
    "3282": {
      "op": "SWAP2"
    },
    "3283": {
      "op": "POP"
    },
    "3284": {
      "op": "DUP6"
    },
    "3285": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3287": {
      "op": "DUP4"
    },
    "3288": {
      "op": "ADD"
    },
    "3289": {
      "op": "SLT"
    },
    "3290": {
      "op": "PUSH2",
      "value": "0xCE2"
    },
    "3293": {
      "op": "JUMPI"
    },
    "3294": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3296": {
      "op": "DUP1"
    },
    "3297": {
      "op": "REVERT"
    },
    "3298": {
      "op": "JUMPDEST"
    },
    "3299": {
      "op": "DUP2"
    },
    "3300": {
      "op": "MLOAD"
    },
    "3301": {
      "op": "DUP2"
    },
    "3302": {
      "op": "DUP2"
    },
    "3303": {
      "op": "GT"
    },
    "3304": {
      "op": "ISZERO"
    },
    "3305": {
      "op": "PUSH2",
      "value": "0xCF4"
    },
    "3308": {
      "op": "JUMPI"
    },
    "3309": {
      "op": "PUSH2",
      "value": "0xCF4"
    },
    "3312": {
      "op": "PUSH2",
      "value": "0xBF7"
    },
    "3315": {
      "jump": "i",
      "op": "JUMP"
    },
    "3316": {
      "op": "JUMPDEST"
    },
    "3317": {
      "op": "DUP1"
    },
    "3318": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "3320": {
      "op": "SHL"
    },
    "3321": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3323": {
      "op": "MLOAD"
    },
    "3324": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3326": {
      "op": "NOT"
    },
    "3327": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "3329": {
      "op": "DUP4"
    },
    "3330": {
      "op": "ADD"
    },
    "3331": {
      "op": "AND"
    },
    "3332": {
      "op": "DUP2"
    },
    "3333": {
      "op": "ADD"
    },
    "3334": {
      "op": "DUP2"
    },
    "3335": {
      "op": "DUP2"
    },
    "3336": {
      "op": "LT"
    },
    "3337": {
      "op": "DUP6"
    },
    "3338": {
      "op": "DUP3"
    },
    "3339": {
      "op": "GT"
    },
    "3340": {
      "op": "OR"
    },
    "3341": {
      "op": "ISZERO"
    },
    "3342": {
      "op": "PUSH2",
      "value": "0xD19"
    },
    "3345": {
      "op": "JUMPI"
    },
    "3346": {
      "op": "PUSH2",
      "value": "0xD19"
    },
    "3349": {
      "op": "PUSH2",
      "value": "0xBF7"
    },
    "3352": {
      "jump": "i",
      "op": "JUMP"
    },
    "3353": {
      "op": "JUMPDEST"
    },
    "3354": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3356": {
      "op": "MSTORE"
    },
    "3357": {
      "op": "SWAP2"
    },
    "3358": {
      "op": "DUP3"
    },
    "3359": {
      "op": "MSTORE"
    },
    "3360": {
      "op": "DUP5"
    },
    "3361": {
      "op": "DUP3"
    },
    "3362": {
      "op": "ADD"
    },
    "3363": {
      "op": "SWAP3"
    },
    "3364": {
      "op": "POP"
    },
    "3365": {
      "op": "DUP4"
    },
    "3366": {
      "op": "DUP2"
    },
    "3367": {
      "op": "ADD"
    },
    "3368": {
      "op": "DUP6"
    },
    "3369": {
      "op": "ADD"
    },
    "3370": {
      "op": "SWAP2"
    },
    "3371": {
      "op": "DUP9"
    },
    "3372": {
      "op": "DUP4"
    },
    "3373": {
      "op": "GT"
    },
    "3374": {
      "op": "ISZERO"
    },
    "3375": {
      "op": "PUSH2",
      "value": "0xD37"
    },
    "3378": {
      "op": "JUMPI"
    },
    "3379": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3381": {
      "op": "DUP1"
    },
    "3382": {
      "op": "REVERT"
    },
    "3383": {
      "op": "JUMPDEST"
    },
    "3384": {
      "op": "SWAP4"
    },
    "3385": {
      "op": "DUP6"
    },
    "3386": {
      "op": "ADD"
    },
    "3387": {
      "op": "SWAP4"
    },
    "3388": {
      "op": "JUMPDEST"
    },
    "3389": {
      "op": "DUP3"
    },
    "3390": {
      "op": "DUP6"
    },
    "3391": {
      "op": "LT"
    },
    "3392": {
      "op": "ISZERO"
    },
    "3393": {
      "op": "PUSH2",
      "value": "0xD55"
    },
    "3396": {
      "op": "JUMPI"
    },
    "3397": {
      "op": "DUP5"
    },
    "3398": {
      "op": "MLOAD"
    },
    "3399": {
      "op": "DUP5"
    },
    "3400": {
      "op": "MSTORE"
    },
    "3401": {
      "op": "SWAP4"
    },
    "3402": {
      "op": "DUP6"
    },
    "3403": {
      "op": "ADD"
    },
    "3404": {
      "op": "SWAP4"
    },
    "3405": {
      "op": "SWAP3"
    },
    "3406": {
      "op": "DUP6"
    },
    "3407": {
      "op": "ADD"
    },
    "3408": {
      "op": "SWAP3"
    },
    "3409": {
      "op": "PUSH2",
      "value": "0xD3C"
    },
    "3412": {
      "op": "JUMP"
    },
    "3413": {
      "op": "JUMPDEST"
    },
    "3414": {
      "op": "SWAP9"
    },
    "3415": {
      "op": "SWAP8"
    },
    "3416": {
      "op": "POP"
    },
    "3417": {
      "op": "POP"
    },
    "3418": {
      "op": "POP"
    },
    "3419": {
      "op": "POP"
    },
    "3420": {
      "op": "POP"
    },
    "3421": {
      "op": "POP"
    },
    "3422": {
      "op": "POP"
    },
    "3423": {
      "op": "POP"
    },
    "3424": {
      "jump": "o",
      "op": "JUMP"
    },
    "3425": {
      "op": "JUMPDEST"
    },
    "3426": {
      "op": "DUP3"
    },
    "3427": {
      "op": "DUP2"
    },
    "3428": {
      "op": "MSTORE"
    },
    "3429": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3431": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3433": {
      "op": "DUP3"
    },
    "3434": {
      "op": "ADD"
    },
    "3435": {
      "op": "MSTORE"
    },
    "3436": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3438": {
      "op": "PUSH2",
      "value": "0xD7A"
    },
    "3441": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3443": {
      "op": "DUP4"
    },
    "3444": {
      "op": "ADD"
    },
    "3445": {
      "op": "DUP5"
    },
    "3446": {
      "op": "PUSH2",
      "value": "0xC23"
    },
    "3449": {
      "jump": "i",
      "op": "JUMP"
    },
    "3450": {
      "op": "JUMPDEST"
    },
    "3451": {
      "op": "SWAP5"
    },
    "3452": {
      "op": "SWAP4"
    },
    "3453": {
      "op": "POP"
    },
    "3454": {
      "op": "POP"
    },
    "3455": {
      "op": "POP"
    },
    "3456": {
      "op": "POP"
    },
    "3457": {
      "jump": "o",
      "op": "JUMP"
    },
    "3458": {
      "op": "JUMPDEST"
    },
    "3459": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3461": {
      "op": "DUP3"
    },
    "3462": {
      "op": "NOT"
    },
    "3463": {
      "op": "DUP3"
    },
    "3464": {
      "op": "GT"
    },
    "3465": {
      "op": "ISZERO"
    },
    "3466": {
      "op": "PUSH2",
      "value": "0xD95"
    },
    "3469": {
      "op": "JUMPI"
    },
    "3470": {
      "op": "PUSH2",
      "value": "0xD95"
    },
    "3473": {
      "op": "PUSH2",
      "value": "0xB89"
    },
    "3476": {
      "jump": "i",
      "op": "JUMP"
    },
    "3477": {
      "op": "JUMPDEST"
    },
    "3478": {
      "op": "POP"
    },
    "3479": {
      "op": "ADD"
    },
    "3480": {
      "op": "SWAP1"
    },
    "3481": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "da73c549ab317ddbd9e2c7246fc9e9d9b32d3a33",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../interfaces/IUniswapV2Router02.sol\";\nimport \"../interfaces/IERC20.sol\";\n\ncontract SimpleArbitrage {\n    address public owner;\n\n    address public wethAddress;\n    address public daiAddress;\n    address public uniswapRouterAddress;\n    address public sushiswapRouterAddress;\n\n    uint256 public arbitrageAmount;\n\n    enum Exchange {\n        UNI,\n        SUSHI,\n        NONE\n    }\n\n    constructor(\n        address _uniswapRouterAddress,\n        address _sushiswapRouterAddress,\n        address _weth,\n        address _dai\n    ) {\n        uniswapRouterAddress = _uniswapRouterAddress;\n        sushiswapRouterAddress = _sushiswapRouterAddress;\n        owner = msg.sender;\n        wethAddress = _weth;\n        daiAddress = _dai;\n    }\n\n    modifier onlyOwner() {\n        require(msg.sender == owner, \"only owner can call this\");\n        _;\n    }\n\n    function deposit(uint256 amount) public onlyOwner {\n        require(amount > 0, \"Deposit amount must be greater than 0\");\n        IERC20(wethAddress).transferFrom(msg.sender, address(this), amount);\n        arbitrageAmount += amount;\n    }\n\n    function withdraw(uint256 amount) public onlyOwner {\n        require(amount <= arbitrageAmount, \"Not enough amount deposited\");\n        IERC20(wethAddress).transferFrom(address(this), msg.sender, amount);\n        arbitrageAmount -= amount;\n    }\n\n    function makeArbitrage() public {\n        uint256 amountIn = arbitrageAmount;\n        Exchange result = _comparePrice(amountIn);\n        if (result == Exchange.UNI) {\n            // sell ETH in uniswap for DAI with high price and buy ETH from sushiswap with lower price\n            uint256 amountOut = _swap(\n                amountIn,\n                uniswapRouterAddress,\n                wethAddress,\n                daiAddress\n            );\n            uint256 amountFinal = _swap(\n                amountOut,\n                sushiswapRouterAddress,\n                daiAddress,\n                wethAddress\n            );\n            arbitrageAmount = amountFinal;\n        } else if (result == Exchange.SUSHI) {\n            // sell ETH in sushiswap for DAI with high price and buy ETH from uniswap with lower price\n            uint256 amountOut = _swap(\n                amountIn,\n                sushiswapRouterAddress,\n                wethAddress,\n                daiAddress\n            );\n            uint256 amountFinal = _swap(\n                amountOut,\n                uniswapRouterAddress,\n                daiAddress,\n                wethAddress\n            );\n            arbitrageAmount = amountFinal;\n        }\n    }\n\n    function _swap(\n        uint256 amountIn,\n        address routerAddress,\n        address sell_token,\n        address buy_token\n    ) public returns (uint256) {\n        IERC20(sell_token).approve(routerAddress, amountIn);\n\n        uint256 amountOutMin = (_getPrice(\n            routerAddress,\n            sell_token,\n            buy_token,\n            amountIn\n        ) * 95) / 100;\n\n        address[] memory path = new address[](2);\n        path[0] = sell_token;\n        path[1] = buy_token;\n\n        uint256 amountOut = IUniswapV2Router02(routerAddress)\n            .swapExactTokensForTokens(\n                amountIn,\n                amountOutMin,\n                path,\n                address(this),\n                block.timestamp\n            )[1];\n        return amountOut;\n    }\n\n    function _comparePrice(uint256 amount) public view returns (Exchange) {\n        uint256 uniswapPrice = _getPrice(\n            uniswapRouterAddress,\n            wethAddress,\n            daiAddress,\n            amount\n        );\n        uint256 sushiswapPrice = _getPrice(\n            sushiswapRouterAddress,\n            wethAddress,\n            daiAddress,\n            amount\n        );\n\n        // we try to sell ETH with higher price and buy it back with low price to make profit\n        if (uniswapPrice > sushiswapPrice) {\n            require(\n                _checkIfArbitrageIsProfitable(\n                    amount,\n                    uniswapPrice,\n                    sushiswapPrice\n                ),\n                \"Arbitrage not profitable\"\n            );\n            return Exchange.UNI;\n        } else if (uniswapPrice < sushiswapPrice) {\n            require(\n                _checkIfArbitrageIsProfitable(\n                    amount,\n                    sushiswapPrice,\n                    uniswapPrice\n                ),\n                \"Arbitrage not profitable\"\n            );\n            return Exchange.SUSHI;\n        } else {\n            return Exchange.NONE;\n        }\n    }\n\n    function _checkIfArbitrageIsProfitable(\n        uint256 amountIn,\n        uint256 higherPrice,\n        uint256 lowerPrice\n    ) public pure returns (bool) {\n        // uniswap & sushiswap have 0.3% fee for every exchange\n        // so gain made must be greater than 2 * 0.3% * arbitrage_amount\n\n        // difference in ETH\n        uint256 difference = (higherPrice - lowerPrice) / higherPrice;\n\n        uint256 payed_fee = (2 * (amountIn * 3)) / 1000;\n\n        if (difference > payed_fee) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    function _getPrice(\n        address routerAddress,\n        address sell_token,\n        address buy_token,\n        uint256 amount\n    ) public view returns (uint256) {\n        address[] memory pairs = new address[](2);\n        pairs[0] = sell_token;\n        pairs[1] = buy_token;\n        uint256 price = IUniswapV2Router02(routerAddress).getAmountsOut(\n            amount,\n            pairs\n        )[1];\n        return price;\n    }\n}\n",
  "sourceMap": "141:5510:0:-:0;;;452:346;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;605:20;:44;;-1:-1:-1;;;;;605:44:0;;;-1:-1:-1;;;;;;605:44:0;;;;;;;659:22;:48;;;;;;;;;;;;;;;605:20;717:18;;;;725:10;717:18;;;605:44;745:19;;;;;;;;;;;;;;;-1:-1:-1;774:17:0;;;;;;;;;;;141:5510;;14:177:3;93:13;;-1:-1:-1;;;;;135:31:3;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:464::-;293:6;301;309;317;370:3;358:9;349:7;345:23;341:33;338:53;;;387:1;384;377:12;338:53;410:40;440:9;410:40;:::i;:::-;400:50;;469:49;514:2;503:9;499:18;469:49;:::i;:::-;459:59;;537:49;582:2;571:9;567:18;537:49;:::i;:::-;527:59;;605:49;650:2;639:9;635:18;605:49;:::i;:::-;595:59;;196:464;;;;;;;:::o;:::-;141:5510:0;;;;;;",
  "sourcePath": "contracts/SimpleArbitrage.sol",
  "type": "contract"
}